{"version":3,"file":"mind-wired.umd.cjs","sources":["../src/mindwired-event.ts","../src/service/event-bus.ts","../src/service/dnd.ts","../src/service/geom.ts","../src/components/dnd/viewport-dnd.ts","../src/components/dnd/node-dnd.ts","../src/components/dnd/change-parent-node.ts","../src/components/canvas-ui.ts","../src/components/edge/edge-renderer-type.ts","../src/components/edge/line-edge-renderer.ts","../src/components/edge/natural-curve-renderer.ts","../src/components/edge/mustache-lr-renderer.ts","../src/components/edge/mustache-tb-renderer.ts","../src/components/edge/edge-context.ts","../src/components/edge/edge-style.ts","../src/service/clone.ts","../src/components/node/node-type.ts","../src/components/node/node-ui.ts","../src/components/layout/node/default-layout.ts","../src/components/layout/node/axis-x-layout.ts","../src/components/layout/node/axis-y-layout.ts","../src/components/layout/node/axis-xy-layout.ts","../src/components/layout/node-layout-context.ts","../src/components/node/editor/editor-delegate.ts","../src/components/node/editor/icon-badge-editor.ts","../src/components/node/editor/link-editor.ts","../src/components/node/editor/plain-text-editor.ts","../src/components/node/editor/thumbnail-editor.ts","../src/components/node/node-editing-context.ts","../src/components/alignment/snap/composite-snap-resolver.ts","../src/components/alignment/snap/default-snap-resolver.ts","../src/components/alignment/snap/distance-snap-resolver.ts","../src/components/alignment/alignment-context.ts","../src/components/datasource/tree-ds.ts","../src/components/direction.ts","../src/components/drag-context.ts","../src/service/uuid.ts","../src/components/node/renderer/renderer-delegate.ts","../src/components/node/renderer/plain-text-renderer.ts","../src/components/node/renderer/icon-badge-renderer.ts","../src/components/node/renderer/thumbnail-renderer.ts","../src/components/node/renderer/link-renderer.ts","../src/components/node/node-rendering-context.ts","../src/components/selection/node-selection-model.ts","../src/components/datasource/index.ts","../src/service/store/mind-wired-store.ts","../node_modules/svelte/src/runtime/internal/utils.js","../node_modules/svelte/src/runtime/store/index.js","../src/components/node/schema-context.ts","../src/components/export/export-context.ts","../src/components/mind-wired.ts","../src/components/config.ts","../src/service/dom.ts","../src/index.ts"],"sourcesContent":["import type { NodeUI, SchemaSpec } from \"./components/node\";\nimport type { Point } from \"./service/geom\";\n\nexport type MindWiredEvent<T> = {\n  name: string;\n  desc: string;\n  CLIENT?: MindWiredEvent<T>;\n};\n\nexport type ViewportDragEventArg = {\n  state: \"drag\" | \"done\";\n  offset: Point;\n};\nexport type ViewportDragEvent<T> = MindWiredEvent<T>;\n/**\n * drag state of node\n */\nexport type NodeDragEventArg = {\n  /**\n   * unique node id\n   */\n  nodeId: string;\n  /**\n   * drag state\n   *\n   * * ready - before dragging(mouse pressed)\n   * * drag - dragging state(mouse moving while pressed )\n   * * done - dragging finished(mouse released)\n   */\n  state: \"ready\" | \"drag\" | \"done\";\n  /**\n   *\n   * * children - all descendant nodes are affected except the dragged one\n   * * all - all descendant nodes are affected including the dragged one\n   */\n  target: \"children\" | \"all\";\n  /**\n   * current node x-position relative to center of viewport\n   */\n  x: number;\n  /**\n   * current node y-position relative to center of viewport\n   */\n  y: number;\n};\nexport type NodeDragEvent<T> = MindWiredEvent<T>;\n\nexport type DragBranch = {\n  VIEWPORT: ViewportDragEvent<ViewportDragEventArg>;\n  NODE: NodeDragEvent<NodeDragEventArg>;\n};\n\nexport type NodeEventArg = {\n  /**\n   * affected nodes\n   */\n  nodes: NodeUI[];\n  type:\n    | \"select\"\n    | \"click\"\n    | \"create\"\n    | \"update\"\n    | \"delete\"\n    | \"path\"\n    | \"pos\"\n    | \"model\"\n    | \"schema\"\n    | \"folding\";\n};\nexport type NodeSelectArg = {\n  nodes: NodeUI[];\n  append: boolean;\n  type: \"select\";\n};\nexport type NodeEditingArg = {\n  node: NodeUI;\n  editing: boolean;\n};\nexport type NodeFoldingArg = {\n  node: NodeUI;\n  folded: boolean;\n};\nexport type NodeMoveArg = {\n  node: NodeUI;\n  prevParent: NodeUI;\n};\n/**\n * deleted nodes and affected nodes\n *\n * @prop nodes - deleted nodes\n * @prop updated - updated nodes(children of deleted ones)\n */\nexport type NodeDeletionArg = {\n  /**\n   * deleted nodes\n   */\n  nodes: NodeUI[];\n  /**\n   * affected nodes by deletion(for example, children)\n   */\n  updated: NodeUI[];\n  type: \"delete\";\n};\nexport type NodeEvent<T> = MindWiredEvent<T> & {\n  CLIENT: MindWiredEvent<T>;\n};\nexport type NodeBranch = {\n  /**\n   * one more more nodes selected\n   */\n  SELECTED: NodeEvent<NodeSelectArg>;\n  /**\n   * a node created\n   */\n  CREATED: NodeEvent<NodeEventArg>;\n  /**\n   * node(s) deleted. It is redirected to `EVENT.NODE.DELETED2`\n   * @deprecated use `EVENT.NODE.DELETED2`\n   */\n  DELETED: NodeEvent<NodeEventArg>;\n  /**\n   * node(s) deleted\n   */\n  DELETED2: NodeEvent<NodeDeletionArg>;\n  /**\n   * node(s) updated\n   */\n  UPDATED: NodeEvent<NodeEventArg>;\n  /**\n   * a node clicked\n   */\n  CLICKED: NodeEvent<NodeEventArg>;\n  /**\n   * editing state of a node\n   */\n  EDITING: NodeEvent<NodeEditingArg>;\n  /**\n   * folding state of a node\n   * @deprecated use `EVENT.NODE.UPDATED`\n   */\n  FOLDED: NodeEvent<NodeFoldingArg>;\n  /**\n   * node's parent changed\n   *\n   * @internal used for internal. use `EVENT.NODE.UPDATED` instead\n   */\n  MOVED: NodeEvent<NodeMoveArg>;\n};\n\nexport type ViewportEventArg = {\n  type: \"click\" | \"resize\";\n};\nexport type ViewportEvent<T> = MindWiredEvent<T>;\nexport type ViewportBranch = {\n  RESIZED: ViewportEvent<ViewportEventArg>;\n  CLICKED: ViewportEvent<ViewportEventArg>;\n};\n\nexport type SchemaEventArg = {\n  type: \"update\" | \"create\" | \"delete\";\n  schemas: SchemaSpec[];\n};\nexport type SchemaBranch = {\n  CREATED: NodeEvent<SchemaEventArg>;\n  UPDATED: NodeEvent<SchemaEventArg>;\n  DELETED: NodeEvent<SchemaEventArg>;\n};\nexport type EventRoot = {\n  DRAG: DragBranch;\n  // SELECTION: SelectionBranch;\n  NODE: NodeBranch;\n  VIEWPORT: ViewportBranch;\n  SCHEMA: SchemaBranch;\n};\n\nexport const EVENT: EventRoot = {\n  DRAG: {\n    VIEWPORT: { name: \"viewport.dragged\", desc: \"\" },\n    NODE: { name: \"node.dragged\", desc: \"\" },\n  },\n  NODE: {\n    CREATED: {\n      name: \"node.created\",\n      desc: \"new node created\",\n      CLIENT: {\n        name: \"node.created.client\",\n        desc: \"client-side node creation event\",\n      },\n    },\n    DELETED: {\n      name: \"node.deleted_old\",\n      desc: \"node has been deleted\",\n      CLIENT: {\n        name: \"node.deleted_old.client\",\n        desc: \"client-side node deletion event\",\n      },\n    },\n    DELETED2: {\n      name: \"node.deleted\",\n      desc: \"node has been deleted\",\n      CLIENT: {\n        name: \"node.deleted.client\",\n        desc: \"client-side node deletion event\",\n      },\n    },\n    UPDATED: {\n      name: \"node.updated\",\n      desc: \"content of node updated\",\n      CLIENT: {\n        name: \"node.updated.client\",\n        desc: \"client-side node update event\",\n      },\n    },\n    SELECTED: {\n      name: \"node.selected\",\n      desc: \"one or more nodes selected\",\n      CLIENT: {\n        name: \"node.selected.client\",\n        desc: \"client-side node selection event\",\n      },\n    },\n    CLICKED: {\n      name: \"node.clicked\",\n      desc: \"a node clicked(without dragging)\",\n      CLIENT: {\n        name: \"node.clicked.client\",\n        desc: \"client-side node click event\",\n      },\n    },\n    EDITING: {\n      name: \"node.editing\",\n      desc: \"node's editing state\",\n      CLIENT: {\n        name: \"node.editing.client\",\n        desc: \"client-side node editing state\",\n      },\n    },\n    FOLDED: {\n      name: \"node.folded\",\n      desc: \"node is folded or unfolded\",\n      CLIENT: {\n        name: \"node.folded.client\",\n        desc: \"client-side node editing state\",\n      },\n    },\n    MOVED: {\n      name: \"node.moved\",\n      desc: \"node is folded or unfolded\",\n      CLIENT: {\n        name: \"node.moved.client\",\n        desc: \"client-side node editing state\",\n      },\n    },\n  },\n  VIEWPORT: {\n    RESIZED: {\n      name: \"viewport.resized\",\n      desc: \"viewport size chaged\",\n    },\n    CLICKED: {\n      name: \"viewport.clicked\",\n      desc: \"viewport has been clicked\",\n    },\n  },\n  SCHEMA: {\n    CREATED: {\n      name: \"schema.created\",\n      desc: \"\",\n      CLIENT: { name: \"schema.created.client\", desc: \"\" },\n    },\n    UPDATED: {\n      name: \"schema.updated\",\n      desc: \"\",\n      CLIENT: { name: \"schema.updated.client\", desc: \"\" },\n    },\n    DELETED: {\n      name: \"schema.deleted\",\n      desc: \"\",\n      CLIENT: { name: \"schema.deleted.client\", desc: \"\" },\n    },\n  },\n};\n\nconst eventList = EVENT;\nexport { eventList };\n","import { EVENT, MindWiredEvent } from \"../mindwired-event\";\n\nconst parseEvent = <T extends MindWiredEvent<any>>(eventName: string): T => {\n  const pathes = eventName.toUpperCase().split(\".\");\n  let obj: any = EVENT;\n  for (let i = 0; i < pathes.length; i++) {\n    obj = obj[pathes[i]];\n    if (!obj) {\n      throw new Error(`invalid event name: [${eventName}]`);\n    }\n  }\n  if (obj.name !== eventName) {\n    throw new Error(`event name mismatch: [${eventName}]`);\n  }\n  return obj as T;\n};\nclass EventBus {\n  private callbacks: Map<string, Function[]>;\n  constructor() {\n    this.callbacks = new Map();\n  }\n  on<A = any>(event: MindWiredEvent<A>, callback: (arg: A) => void) {\n    let callbackList = this.callbacks.get(event.name);\n    if (!callbackList) {\n      callbackList = [];\n      this.callbacks.set(event.name, callbackList);\n    }\n    callbackList.push(callback);\n  }\n  off(eventObj: string, callback: Function) {\n    const callbackList = this.callbacks.get(eventObj);\n    if (!callbackList) {\n      return;\n    }\n    const idx = callbackList.findIndex((cb) => cb === callback);\n    callbackList.splice(idx, 1);\n  }\n  /**\n   * used to register client-side callback\n   * @param {MindWiredEvent} eventName like \"valid.event.path\" format\n   * @param {function} callback\n   */\n  listen<A = any>(event: MindWiredEvent<A>, callback: (arg: A) => void) {\n    // const event = parseEvent(eventName.name);\n    this.on(event, callback);\n  }\n  emit<A = any>(event: MindWiredEvent<A>, payload: A) {\n    const callbackList = this.callbacks.get(event.name) || [];\n    callbackList.forEach((cb) => {\n      try {\n        cb(payload);\n      } catch (e) {\n        console.log(e);\n      }\n    });\n    // if (emitForClient) {\n    //   self.setTimeout(() => {\n    //     this.emit(event[\"CLIENT\"], payload, false);\n    //   });\n    // }\n  }\n}\n\nexport { EventBus, EVENT, parseEvent };\n","/**\n * dummy dnd handlers\n */\nconst beforeDrag = () => {};\nconst dragging = beforeDrag;\nconst afterDrag = beforeDrag;\n\ninterface MutableEvent extends TouchEvent, MouseEvent {\n  clientX: number;\n  clientY: number;\n  layerX: number;\n  layerY: number;\n  offsetX: number;\n  offsetY: number;\n  pageX: number;\n  pageY: number;\n  screenX: number;\n  screenY: number;\n}\n\nexport type DndEvent = {\n  originalEvent: MutableEvent;\n  sx: number;\n  sy: number;\n  dx: number;\n  dy: number;\n  ghost: HTMLElement | undefined;\n  once: Function | undefined;\n};\n\nexport type DndHelper = {\n  accept: (el: EventTarget | null) => boolean;\n  beforeDrag: (e: DndEvent) => void;\n  dragging: (e: DndEvent) => void;\n  afterDrag: (e: DndEvent) => void;\n};\nconst convToMouseEvent = (te: MutableEvent) => {\n  let touch = te.touches[0];\n  if (te.type === \"touchend\") {\n    touch = te.changedTouches[0];\n  }\n  te.clientX = touch.clientX;\n  te.clientY = touch.clientY;\n  te.layerX = 0;\n  te.layerY = 0;\n  te.offsetX = 0;\n  te.offsetY = 0;\n  te.pageX = touch.pageX;\n  te.pageY = touch.pageY;\n  te.screenX = touch.screenX;\n  te.screenY = touch.screenY;\n};\nconst clearTouchTimer = (ctx: DndContext) => {\n  clearTimeout(ctx.touchTimer);\n  ctx.touchTimer = undefined;\n};\nconst mousedown = (ctx: DndContext, e: MouseEvent) => {\n  const { handler } = ctx;\n  if (!handler.accept(e.target)) {\n    return;\n  }\n  ctx.dragging = {\n    originalEvent: e as MutableEvent,\n    sx: e.pageX,\n    sy: e.pageY,\n    dx: 0,\n    dy: 0,\n    ghost: undefined,\n    once: undefined,\n  };\n  handler.beforeDrag(ctx.dragging);\n};\n\nconst mousemove = (ctx: DndContext, e: MutableEvent) => {\n  if (ctx.dragging) {\n    e.preventDefault();\n    if (ctx.dragging.once) {\n      ctx.dragging.once();\n      ctx.dragging.once = undefined;\n    }\n    ctx.originalEvent = e;\n    ctx.dragging.dx = e.pageX - ctx.dragging.sx;\n    ctx.dragging.dy = e.pageY - ctx.dragging.sy;\n    ctx.handler.dragging(ctx.dragging);\n  }\n};\nconst mouseup = (ctx: DndContext, e: MouseEvent) => {\n  ctx.originalEvent = e;\n  const body = document.querySelector(\"body\");\n  if (body) {\n    body.style.cursor = \"\";\n  }\n  try {\n    // ghost.clear();\n    if (ctx.dragging) {\n      // console.log('[M-UP]', e.target)\n      ctx.handler.afterDrag(ctx.dragging);\n    }\n  } catch (e) {\n    console.log(\"[DND error]\", e);\n  } finally {\n    ctx.data.clear();\n    ctx.dragging = undefined;\n  }\n};\nconst touchstart = (ctx: DndContext, e: TouchEvent) => {\n  ctx.touchTimer = window.setTimeout(() => {\n    convToMouseEvent(e as MutableEvent);\n    mousedown(ctx, e as MutableEvent);\n  }, 10);\n};\nconst touchmove = (ctx: DndContext, e: TouchEvent) => {\n  clearTouchTimer(ctx);\n  convToMouseEvent(e as MutableEvent);\n  mousemove(ctx, e as MutableEvent);\n};\nconst touchend = (ctx: DndContext, e: TouchEvent) => {\n  clearTouchTimer(ctx);\n  convToMouseEvent(e as MutableEvent);\n  mouseup(ctx, e as MutableEvent);\n};\n\nconst install = (ctx: DndContext) => {\n  const { handler } = ctx;\n  handler.beforeDrag = handler.beforeDrag || beforeDrag;\n  handler.dragging = handler.dragging || dragging;\n  handler.afterDrag = handler.afterDrag || afterDrag;\n\n  window.addEventListener(\"mousedown\", (e) => mousedown(ctx, e), false);\n  window.addEventListener(\n    \"mousemove\",\n    (e) => mousemove(ctx, e as MutableEvent),\n    {\n      passive: false,\n    }\n  );\n  window.addEventListener(\"mouseup\", (e) => mouseup(ctx, e), false);\n  window.addEventListener(\"touchstart\", (e) => touchstart(ctx, e), false);\n  window.addEventListener(\"touchmove\", (e) => touchmove(ctx, e), {\n    passive: false,\n  });\n  window.addEventListener(\n    \"toucend\",\n    (e) => touchend(ctx, e as MutableEvent),\n    false\n  );\n};\nclass DndContext {\n  touchTimer: number | undefined;\n  dragging: DndEvent | undefined;\n  handler: DndHelper;\n  data: Map<string, any>;\n  originalEvent: Event | undefined | null;\n  constructor(handler: DndHelper) {\n    this.touchTimer = undefined;\n    this.handler = handler;\n    this.data = new Map();\n    install(this);\n  }\n  capture(name: string, value: any): void {\n    this.data.set(name, value);\n  }\n  getData(name: string): any {\n    return this.data.get(name);\n  }\n}\n\nexport { DndContext };\n","/**\n * degrees per 1 radian := 57.29577...\n */\nconst DEGREE_PER_RADIAN = 180 / Math.PI;\n\nexport type RotationParam = { scale: number };\n/**\n * class Point(x, y) means screen-based coord, not mathmatical coord\n *\n */\nexport class Point {\n  x: number;\n  y: number;\n  static readonly ZERO = new Point(0, 0);\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n  clone() {\n    return new Point(this.x, this.y);\n  }\n  sum(other: Point) {\n    return new Point(this.x + other.x, this.y + other.y);\n  }\n}\nexport class Heading {\n  /**\n   * [-180, +180] degrees from positive X axis\n   */\n  private _degree: number;\n  constructor(readonly target: Point, readonly base: Point = Point.ZERO) {\n    const dx = this.target.x - base.x;\n    const dy = this.target.y - base.y;\n    this._degree = Math.atan2(dy === 0 ? 0 : -dy, dx) * DEGREE_PER_RADIAN;\n  }\n  /**\n   * counter clock wise from X-AXIS(east), which is quadrant(1 > 2 > 3 > 4)\n   * @returns [0, 360) degree\n   */\n  get ccwx() {\n    const deg = this._degree;\n    return deg < 0 ? 360 + deg : deg;\n  }\n  /**\n   * clock wise from Y-AXIS(north), which is quadrant(1 > 4 > 3 > 2)\n   * @returns [0, 360) degree\n   */\n  get cwy() {\n    let deg = 90 - this._degree;\n    return deg < 0 ? 360 + deg : deg;\n  }\n  /**\n   * get quadrant number in math\n   * ```\n   *   2 | 1\n   *  ---+---> X\n   *   3 | 4\n   * ```\n   * @returns 1 when [0, 90), 2 when [90, 180), 3 when [180, 270), 4 when [270, 360)\n   */\n  get quadrant() {\n    const deg = this.ccwx;\n    if (deg < 90) {\n      return 1;\n    } else if (deg < 180) {\n      return 2;\n    } else if (deg < 270) {\n      return 3;\n    } else if (deg < 360) {\n      return 4;\n    } else {\n      throw new Error(`unexpected ccwx: ${deg}`);\n    }\n  }\n}\nexport class Geometry {\n  /**\n   * move dst to dst'\n   * ```\n   *\n   *   |\n   *   |             + dst'\n   *   |\n   *   |                + dst\n   *   |  by deg\n   *   +-------------------------->\n   *  base\n   *```\n   * @param {Point} base\n   * @param {Point} dst\n   * @param {number} degree - [0~360]\n   */\n  rotate = (\n    base: Point,\n    dst: Point,\n    degree: number,\n    param: RotationParam = { scale: 1 }\n  ) => {\n    const dx = (dst.x - base.x) * param.scale;\n    const dy = (dst.y - base.y) * param.scale;\n    const rad = (degree * Math.PI) / 180;\n    const cos = Math.cos(rad);\n    const sin = Math.sin(rad);\n\n    return {\n      x: dx * cos - dy * sin + base.x,\n      y: dx * sin + dy * cos + base.y,\n    };\n  };\n  heading(p: Point, base?: Point) {\n    return new Heading(p, base);\n  }\n}\n\nexport const geom = new Geometry();\n","import { DndEvent } from \"../../service/dnd\";\nimport { EVENT } from \"../../service/event-bus\";\nimport { Point } from \"../../service/geom\";\nimport type { CanvasUI } from \"../canvas-ui\";\n/**\n * handles viewport dragging\n */\n\nexport const viewportDndHandler = (canvasUI: CanvasUI) => ({\n  beforeDrag: (e: DndEvent) => {\n    canvasUI.dndContext.capture(\"offset\", canvasUI.config.getOffset());\n  },\n  dragging: (e: DndEvent) => {\n    const { dx, dy } = e;\n    if (dx === 0 && dy === 0) {\n      return;\n    }\n    canvasUI.dndContext.capture(\"dragged\", true);\n    const offset = canvasUI.dndContext.getData(\"offset\");\n    canvasUI.config.emit(EVENT.DRAG.VIEWPORT, {\n      state: \"drag\",\n      offset: new Point(offset.x + dx, offset.y + dy),\n    });\n  },\n  afterDrag: (e: DndEvent) => {\n    // console.log(\"[DND AFTER]\", e);\n    const { dx, dy } = e;\n    if (dx !== 0 || dy !== 0) {\n      const offset = canvasUI.dndContext.getData(\"offset\");\n      canvasUI.config.emit(EVENT.DRAG.VIEWPORT, {\n        state: \"done\",\n        offset: new Point(offset.x + dx, offset.y + dy),\n      });\n    }\n\n    const dragged = canvasUI.dndContext.getData(\"dragged\");\n    if (!dragged) {\n      canvasUI.config.emit(EVENT.VIEWPORT.CLICKED);\n    }\n  },\n});\n","import type { NodeDragEventArg } from \"../../mindwired-event\";\nimport { EVENT } from \"../../service/event-bus\";\nimport type { CanvasUI } from \"../canvas-ui\";\n\nconst nodeDndHandler = (canvasUI: CanvasUI) => ({\n  beforeDrag: (e) => {\n    const { target } = e.originalEvent;\n    const nodeEl = canvasUI.dom.closest(target, \".mwd-node\") as HTMLElement;\n    const nodeId = nodeEl.dataset.uid;\n    canvasUI.dndContext.capture(\"nodeId\", nodeId);\n    const mrd = canvasUI.config.mindWired();\n    const node = mrd.findNode((node) => node.uid === nodeId);\n    canvasUI.config.emit(EVENT.NODE.SELECTED, {\n      nodes: [node],\n      append: e.originalEvent.shiftKey,\n      type: \"select\",\n    });\n    canvasUI.config.emit<NodeDragEventArg>(EVENT.DRAG.NODE, {\n      nodeId,\n      state: \"ready\",\n      target: e.originalEvent.shiftKey ? \"children\" : \"all\",\n      x: 0,\n      y: 0,\n    });\n  },\n  dragging: (e) => {\n    const { dx, dy } = e;\n    const nodeId = canvasUI.dndContext.getData(\"nodeId\");\n    const { scale } = canvasUI.config;\n    // const scale = 1;\n    canvasUI.config.emit<NodeDragEventArg>(EVENT.DRAG.NODE, {\n      nodeId,\n      state: \"drag\",\n      target: e.originalEvent.shiftKey ? \"children\" : \"all\",\n      x: dx / scale,\n      y: dy / scale,\n    });\n  },\n  afterDrag: (e) => {\n    // console.log(\"[DND AFTER]\", e);\n    const { dx, dy } = e;\n    // canvasUI.shiftBy(dx, dy);\n    const nodeId = canvasUI.dndContext.getData(\"nodeId\");\n    const { scale } = canvasUI.config;\n    // const scale = 1;\n    canvasUI.config.emit<NodeDragEventArg>(EVENT.DRAG.NODE, {\n      nodeId,\n      state: \"done\",\n      target: e.originalEvent.shiftKey ? \"children\" : \"all\",\n      x: dx / scale,\n      y: dy / scale,\n    });\n  },\n});\n\nexport default nodeDndHandler;\n","import type { CanvasUI } from \"../canvas-ui\";\n\nconst changeParentDndHandler = (canvasUI: CanvasUI) => ({\n  beforeDrag: () => {},\n  dragging: (e) => {\n    const { dx, dy } = e;\n    const iconEl = canvasUI.dndContext.getData(\"iconEl\");\n    canvasUI.dom.css(iconEl, {\n      transform: `translate(calc(-50% + ${dx}px), ${dy}px)`,\n    });\n  },\n  afterDrag: () => {\n    const { dom } = canvasUI;\n    const iconEl = canvasUI.dndContext.getData(\"iconEl\");\n    const rect = dom.domRect(iconEl);\n    const cx = rect.x + rect.width / 2;\n    const cy = rect.y + rect.height / 2;\n    dom.css(iconEl, {\n      transform: `translate(-50%, 0)`,\n    });\n    const newParentNode = canvasUI.findNodeAt(cx, cy);\n    if (newParentNode) {\n      const mrd = canvasUI.config.mindWired();\n      const nodes = mrd.getSelectedNodes();\n      if (\n        nodes.filter((child) => newParentNode.isDescendantOf(child)).length > 0\n      ) {\n        // dropping parent on child\n      } else {\n        const mwd = canvasUI.config.mindWired();\n        mwd.moveNodes(newParentNode, nodes, true);\n      }\n    }\n  },\n});\nexport default changeParentDndHandler;\n","import { DndContext, DndHelper } from '../service/dnd'\nimport { viewportDndHandler } from './dnd/viewport-dnd'\nimport nodeDndHandler from './dnd/node-dnd'\nimport changeParentDndHandler from './dnd/change-parent-node'\nimport { EVENT } from '../service/event-bus'\nimport iconSetPara from '../assets/icon-chng-parent.svg'\nimport iconfolding from '@/assets/icon-folded.svg'\nimport { geom, type Point } from '../service/geom'\nimport type { Configuration } from './config'\nimport { NodeUI } from './node/node-ui'\nimport { MindWired } from './mind-wired'\nimport type { NodeRect, SchemaSpec } from './node/node-type'\nimport { INodeEditor } from './node'\nimport type { DomUtil } from '../service/dom'\n\n// const pixelRatio = window.devicePixelRatio;\nconst template = {\n\tviewport: `<div data-mind-wired-viewport>\n    <canvas></canvas>\n    <div class=\"mwd-selection-area\"><div class=\"ctrl-icon\" data-cmd=\"set-para\" style=\"display:none;\"><img src=\"${iconSetPara}\"></div></div>\n    <div class=\"mwd-nodes\"></div>\n  </div>`,\n\tnode: `<div class=\"mwd-node\">\n    <div class=\"mwd-body\" tabIndex=\"0\"></div>\n    <div class=\"mwd-subs\"></div>\n    <div class=\"mwd-node-ctrl\"></div>\n  </div>`,\n\tfoldingControl: `<div class=\"ctrl-icon\" data-cmd=\"unfolding\"><img src=\"${iconfolding}\"></div>`,\n}\n\nconst installViewport = (canvasUI: CanvasUI) => {\n\tconst { el, ui, dom } = canvasUI.config\n\tconst width = ui.width || 600\n\tconst height = ui.height || 600\n\tlet viewport = dom.findOne(el, '[data-mind-wired-viewport]')\n\tif (!viewport) {\n\t\tviewport = dom.parseTemplate(template.viewport, {})\n\t\tif (!ui.useDefaultIcon) {\n\t\t\tviewport.querySelector('img')?.remove()\n\t\t}\n\t\tif (ui.mapId) {\n\t\t\tviewport.dataset.mindWiredViewport = ui.mapId\n\t\t}\n\t\tel.append(viewport)\n\t}\n\t{\n\t\t// canvas\n\t\tlet canvas = dom.findOne<HTMLCanvasElement>(viewport, ':scope > canvas')\n\t\tif (!canvas) {\n\t\t\tviewport.appendChild(dom.tag.canvas())\n\t\t}\n\t}\n\t{\n\t\tconst selectionArea = dom.findOne<HTMLDivElement>(\n\t\t\tviewport,\n\t\t\t':scope > .mwd-selection-area'\n\t\t)\n\t\tif (!selectionArea) {\n\t\t\tviewport.appendChild(dom.tag.div('.mwd-selection-area'))\n\t\t}\n\t}\n\t{\n\t\tconst nodesEl = dom.findOne<HTMLDivElement>(viewport, ':scope > .mwd-nodes')\n\t\tif (!nodesEl) {\n\t\t\tviewport.appendChild(dom.tag.div('.mwd-nodes'))\n\t\t}\n\t}\n\tdom.attr(viewport, 'tabIndex', '0')\n\tdom.css(viewport, { width, height })\n\n\treturn viewport\n}\nconst captureContext2D = (canvasUI: CanvasUI) => {\n\tif (canvasUI) {\n\t\tconst { devicePixelRatio: pixelRatio } = window\n\t\tconst { config, $viewport, $canvas } = canvasUI\n\t\tconst { offsetWidth, offsetHeight } = $viewport\n\t\tcanvasUI.dom.css($canvas, { width: offsetWidth, height: offsetHeight })\n\t\tcanvasUI.dom.attr($canvas, 'width', String(pixelRatio * offsetWidth), true)\n\t\tcanvasUI.dom.attr(\n\t\t\t$canvas,\n\t\t\t'height',\n\t\t\tString(pixelRatio * offsetHeight),\n\t\t\ttrue\n\t\t)\n\t\tconst ctx = $canvas.getContext('2d', { alpha: false })\n\n\t\tcanvasUI.$ctx = ctx\n\t\tcanvasUI.$ctx.scale(pixelRatio, pixelRatio)\n\t\tcanvasUI.drawNodeSelection()\n\t\tconfig.emit(EVENT.VIEWPORT.RESIZED)\n\t}\n}\nconst registerSchema = (\n\tschema: string,\n\t$el: HTMLElement,\n\tconfig: Configuration\n) => {\n\tconst className = config.ui.clazz.schema(schema)\n\tconfig.dom.clazz.add($el, className)\n}\nconst registerElement = (canvasUI: CanvasUI, nodeUI: NodeUI) => {\n\tif (nodeUI.$el) {\n\t\tthrow new Error(`[MINDWIRED] already installed. (${nodeUI.uid})`)\n\t}\n\tconst $el = (nodeUI.$el = canvasUI.dom.parseTemplate(template.node))\n\tconst mwd = canvasUI.config.mindWired()\n\tconst nodeRenderer = mwd.getNodeRender(nodeUI.model)\n\tconst model = mwd.translateModel(nodeUI.model)\n\tconst $bodyEl = canvasUI.getNodeBody(nodeUI)\n\tnodeRenderer.install(nodeUI.model, $bodyEl)\n\tif (model.schema) {\n\t\tregisterSchema(model.schema, $el, canvasUI.config)\n\t\tregisterSchema(model.schema, $bodyEl, canvasUI.config)\n\t}\n\tconst placeHolder = canvasUI.elemOf('.mwd-nodes')\n\tif (nodeUI.isRoot()) {\n\t\tplaceHolder.append($el)\n\t} else {\n\t\tconst $subs = canvasUI.dom.findOne(nodeUI.parent.$el, '.mwd-subs')\n\t\t$subs.append($el)\n\t}\n\t// apply uuid for node instance\n\t$el.dataset.uid = nodeUI.uid\n\treturn nodeUI.$el\n}\nconst unregisterElement = (\n\tcanvasUI: CanvasUI,\n\tnodeUI: NodeUI,\n\tpropagateAll: boolean = false\n) => {\n\tif (!nodeUI.$el) {\n\t\tthrow new Error(`[MINDWIRED][ERROR] not registered node. (${nodeUI.uid})`)\n\t}\n\tnodeUI.$el.remove()\n\tdelete nodeUI.$el\n\tif (propagateAll) {\n\t\tconst { subs } = nodeUI\n\t\tif (subs) {\n\t\t\tsubs.forEach(child => unregisterElement(canvasUI, child))\n\t\t}\n\t}\n}\nconst installDnd = (canvasUI: CanvasUI) => {\n\tconst { dom } = canvasUI\n\treturn new DndContext({\n\t\taccept: (el: HTMLElement) => {\n\t\t\tconst mwd: MindWired = canvasUI.config.mindWired!()\n\t\t\tif (dom.closest(el, '[data-editor-element]')) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tif (dom.is(el, `[data-cmd=\"set-para\"]`)) {\n\t\t\t\tconst btn = dom.closest(el, `[data-cmd=\"set-para\"]`)\n\t\t\t\tcanvasUI.dndContext.capture('iconEl', btn)\n\t\t\t\tcanvasUI.dndContext.capture('handler', changeParentDndHandler(canvasUI))\n\t\t\t\treturn true\n\t\t\t} else if (dom.closest(el, '[data-cmd]')) {\n\t\t\t\treturn false\n\t\t\t} else if (dom.is(el, 'canvas')) {\n\t\t\t\tcanvasUI.dndContext.capture('handler', viewportDndHandler(canvasUI))\n\t\t\t\treturn true\n\t\t\t} else if (dom.is(el, '.mwd-node')) {\n\t\t\t\tconst nodeEl = dom.closest(el, '.mwd-node')\n\t\t\t\tconst nodeId = nodeEl.dataset.uid\n\t\t\t\tcanvasUI.dndContext.capture('handler', nodeDndHandler(canvasUI))\n\t\t\t\tcanvasUI.dndContext.capture('nodeId', nodeId)\n\t\t\t\tcanvasUI.dndContext.capture('editing', mwd.isEditing())\n\t\t\t\treturn true\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t},\n\t\tbeforeDrag: e => {\n\t\t\tconst handler = canvasUI.dndContext.getData('handler')\n\t\t\thandler.beforeDrag(e)\n\t\t},\n\t\tdragging: e => {\n\t\t\tconst editing = canvasUI.dndContext.getData('editing')\n\t\t\tif (!editing) {\n\t\t\t\tconst handler = canvasUI.dndContext.getData('handler')\n\t\t\t\thandler.dragging(e)\n\t\t\t}\n\t\t},\n\t\tafterDrag: e => {\n\t\t\tconst editing = canvasUI.dndContext.getData('editing')\n\t\t\tif (!editing) {\n\t\t\t\tconst handler = canvasUI.dndContext.getData('handler')\n\t\t\t\thandler.afterDrag(e)\n\t\t\t}\n\t\t},\n\t} as DndHelper)\n}\nconst updateFolding = (node: NodeUI, display: string, dom: DomUtil) => {\n\tif (!node.isReady()) {\n\t\treturn\n\t}\n\tdom.css(node.$el!, { display })\n\tif (node.isFolded()) {\n\t\treturn\n\t}\n\tnode.subs.forEach(child => {\n\t\tupdateFolding(child, display, dom)\n\t})\n}\nconst installFoldingIcon = (\n\tnodeEl: HTMLElement,\n\trect: DOMRect,\n\tconfig: Configuration,\n\tcallback: (foldingEl: HTMLElement) => void\n) => {\n\tlet foldingEl = nodeEl.querySelector<HTMLElement>(\n\t\t`:scope > [data-cmd=\"unfolding\"]`\n\t)\n\tif (!foldingEl) {\n\t\tconst { dom } = config\n\t\tfoldingEl = dom.parseTemplate(template.foldingControl, {})\n\t\tdom.css(foldingEl, {\n\t\t\ttransform: `translate(${rect.width / 2 + 4}px, -50%)`,\n\t\t\tzIndex: 0,\n\t\t})\n\t\tif (!config.ui.useDefaultIcon) {\n\t\t\tfoldingEl.querySelector('img')?.remove()\n\t\t}\n\t\tnodeEl.append(foldingEl)\n\t\tcallback(foldingEl)\n\t}\n}\nconst installFocusHandler = (canvasUI: CanvasUI) => {\n\t/*\n  dom.event.focus(\n    canvasUI.$viewport,\n    (e) => {\n      if (dom.is(e.target, \"[data-editor-element]\", true)) {\n        // prevents focus to propaga to root elem\n        // it breaks editing process\n      } else if (dom.is(e.target, \".mwd-node\")) {\n        const uid = e.target.parentNode.dataset.uid;\n        const mwd = canvasUI.config.mindWired();\n        const node = mwd.findNode((node) => node.uid === uid);\n        canvasUI.config.emit(EVENT.NODE.SELECTED, { node });\n      }\n    },\n    true\n  );\n  */\n}\nconst applyDrawingOption = <K extends keyof CanvasRenderingContext2D>(\n\tctx: CanvasRenderingContext2D,\n\toptions: Partial<CanvasRenderingContext2D>,\n\tfn?: (ctx: CanvasRenderingContext2D) => void\n) => {\n\tif (options) {\n\t\tObject.keys(options).forEach(key => {\n\t\t\tconst val = options[key]\n\t\t\tif (val) {\n\t\t\t\tctx[key] = val\n\t\t\t}\n\t\t})\n\t}\n\tif (fn) {\n\t\tfn(ctx)\n\t}\n}\nexport class CanvasUI {\n\tconfig: Configuration\n\t$viewport: HTMLElement\n\tdndContext: DndContext\n\tresizeObserver: ResizeObserver\n\tselectionArea: NodeRect | undefined\n\t$ctx: CanvasRenderingContext2D\n\tconstructor(config: Configuration) {\n\t\tthis.config = config\n\t\tthis.$viewport = installViewport(this)\n\t\tcaptureContext2D(this)\n\t\tinstallFocusHandler(this)\n\t\tthis.dndContext = installDnd(this)\n\t\tlet timer: number | undefined\n\t\tconst resizer = () => {\n\t\t\tclearTimeout(timer)\n\t\t\ttimer = window.setTimeout(captureContext2D, 150, this)\n\t\t}\n\t\tthis.resizeObserver = new ResizeObserver(resizer)\n\t\tthis.resizeObserver.observe(this.$viewport)\n\t\t// this.selectionArea;\n\t}\n\tget dom() {\n\t\treturn this.config.dom\n\t}\n\tget $canvas() {\n\t\treturn this.$viewport.querySelector<HTMLElement>(\n\t\t\t'canvas'\n\t\t) as HTMLCanvasElement\n\t}\n\tget $holder() {\n\t\treturn this.$viewport.querySelector<HTMLElement>('.mwd-nodes')!\n\t}\n\tget scale() {\n\t\treturn this.config.scale\n\t}\n\tgetContext() {\n\t\treturn this.$ctx\n\t}\n\tgetHolderOffset() {\n\t\tconst el = this.$holder\n\t\t// const baseOffset = this.config.getOffset();\n\t\treturn { x: el!.offsetLeft, y: el!.offsetTop }\n\t}\n\t/**\n\t * multiply scale to numeric properties\n\t * @param obj object to mutiply scale\n\t * @returns\n\t */\n\tsetScale<T>(obj: T): T {\n\t\tconst { scale } = this\n\t\tif (typeof obj === 'number') {\n\t\t\treturn (obj * scale) as T\n\t\t} else if (Array.isArray(obj)) {\n\t\t\tconst cloned = [...obj]\n\t\t\tcloned.forEach((elem, index) => {\n\t\t\t\tcloned[index] = this.setScale(elem)\n\t\t\t})\n\t\t\treturn cloned as T\n\t\t} else if (typeof obj === 'object') {\n\t\t\tconst cloned = { ...obj }\n\t\t\tfor (let prop in cloned) {\n\t\t\t\tcloned[prop] = this.setScale<any>(obj[prop])\n\t\t\t}\n\t\t\treturn cloned\n\t\t}\n\t\treturn obj\n\t}\n\t/**\n\t * multiply scale to numeric properties\n\t * @param point point to multiply scale\n\t * @returns\n\t */\n\tgetScaledPos(point: Point) {\n\t\tpoint.x *= this.scale\n\t\tpoint.y *= this.scale\n\t\treturn point\n\t}\n\t/**\n\t * multiply scale to offset(x,y) of the node\n\t * @param node\n\t * @returns\n\t */\n\tgetScaledOffset(node: NodeUI): any {\n\t\treturn this.getScaledPos(node.offset())\n\t}\n\tgetDimension() {\n\t\tconst el = this.$canvas\n\t\treturn { width: el!.offsetWidth, height: el!.offsetHeight }\n\t}\n\tgetNodeDimension(node: NodeUI, relative = false) {\n\t\tconst dim = node.dimension(relative)\n\t\tconst { scale } = this.config\n\t\tdim.center.x *= scale\n\t\tdim.center.y *= scale\n\t\treturn dim\n\t}\n\tgetAbsoluteDimensions(nodes: NodeUI[]) {\n\t\tconst rects = nodes.map((n: NodeUI) => this.getNodeDimension(n))\n\t\tconst area = rects.reduce(\n\t\t\t(acc: NodeRect, rect: NodeRect) => acc.merge(rect),\n\t\t\trects[0]\n\t\t)\n\t\treturn area\n\t}\n\telemOf(cssSelector: string) {\n\t\treturn this.$viewport.querySelector(cssSelector)\n\t}\n\tshiftBy(dx: number, dy: number) {\n\t\tconst offset = this.config.getOffset()\n\t\toffset.x += dx\n\t\toffset.y += dy\n\t\tthis.config.setOffset(offset)\n\t\tthis.repaintNodeHolder()\n\t}\n\trenderWith(callback: (ctx: CanvasRenderingContext2D) => void) {\n\t\tconst ctx = this.getContext()\n\t\tconst offset = this.getHolderOffset()\n\t\ttry {\n\t\t\tctx.translate(offset.x, offset.y)\n\t\t\tctx.save()\n\t\t\tcallback(ctx)\n\t\t} finally {\n\t\t\tctx.restore()\n\t\t\tctx.translate(-offset.x, -offset.y)\n\t\t}\n\t}\n\tfindNodeAt(x: number, y: number) {\n\t\tconst nodeBodies = this.$holder.querySelectorAll<HTMLElement>('.mwd-body')\n\t\tlet found = null\n\t\tconst { dom } = this\n\t\tfor (let i = 0; i < nodeBodies.length; i++) {\n\t\t\tconst rect = dom.domRect(nodeBodies[i])\n\t\t\tif (\n\t\t\t\trect.left <= x &&\n\t\t\t\trect.right >= x &&\n\t\t\t\trect.top <= y &&\n\t\t\t\trect.bottom >= y\n\t\t\t) {\n\t\t\t\tfound = nodeBodies[i]\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif (!found) {\n\t\t\treturn null\n\t\t}\n\t\tconst mwd = this.config.mindWired()\n\t\tconst nodeEl = dom.closest(found, '.mwd-node') as HTMLElement\n\t\tconst node = mwd.findNode(node => node.uid === nodeEl.dataset.uid)\n\t\treturn node\n\t}\n\tdrawPath(\n\t\tpoints: Point[],\n\t\toptions: Partial<CanvasRenderingContext2D>,\n\t\tfn: (ctx: CanvasRenderingContext2D) => void\n\t) {\n\t\tthis.renderWith(ctx => {\n\t\t\tapplyDrawingOption(ctx, options, fn)\n\t\t\tctx.beginPath()\n\t\t\tlet s = points[0]\n\t\t\t// points = points.slice(1);\n\t\t\tctx.moveTo(s.x, s.y)\n\t\t\tpoints.forEach(e => {\n\t\t\t\tctx.lineTo(e.x, e.y)\n\t\t\t})\n\t\t\tctx.stroke()\n\t\t})\n\t}\n\tdrawCurve<K extends keyof CanvasRenderingContext2D>(\n\t\ts: Point,\n\t\te: Point,\n\t\toption: {\n\t\t\tdegree: number\n\t\t\tratio: number\n\t\t\tprops: Record<K, CanvasRenderingContext2D[K]>\n\t\t},\n\t\tfn: (ctx: CanvasRenderingContext2D) => void\n\t) {\n\t\t// const ctx = this.getContext();\n\t\tthis.renderWith(ctx => {\n\t\t\tapplyDrawingOption(ctx, option.props, fn)\n\t\t\tconst lenSE = Math.sqrt(\n\t\t\t\t(s.x - e.x) * (s.x - e.x) + (s.y - e.y) * (s.y - e.y)\n\t\t\t)\n\t\t\tconst degree = option.degree\n\t\t\tconst length = lenSE * option.ratio\n\t\t\tconst scale = (length / lenSE) * this.scale\n\t\t\tconst cp1 = geom.rotate(s, e, degree, { scale })\n\t\t\tconst cp2 = geom.rotate(e, s, degree, { scale })\n\t\t\t// const offset = this.getHolderOffset();\n\n\t\t\tctx.beginPath()\n\t\t\tctx.moveTo(s.x, s.y)\n\t\t\tctx.bezierCurveTo(cp1.x, cp1.y, cp2.x, cp2.y, e.x, e.y)\n\t\t\tctx.stroke()\n\t\t})\n\t\t// ctx.save();\n\n\t\t// ctx.restore();\n\t}\n\tdrawBeizeCurve<K extends keyof CanvasRenderingContext2D>(\n\t\ts: Point,\n\t\te: Point,\n\t\toption: { cpoints: Point[]; props: Record<K, CanvasRenderingContext2D[K]> },\n\t\tfn: (ctx: CanvasRenderingContext2D) => void\n\t) {\n\t\tconst ctx = this.getContext()\n\t\tctx.save()\n\t\tapplyDrawingOption(ctx, option.props, fn)\n\t\tconst [cp1, cp2] = option.cpoints\n\t\tconst offset = this.getHolderOffset()\n\t\tctx.beginPath()\n\t\tctx.moveTo(offset.x + s.x, offset.y + s.y)\n\t\tctx.bezierCurveTo(\n\t\t\toffset.x + cp1.x,\n\t\t\toffset.y + cp1.y,\n\t\t\toffset.x + cp2.x,\n\t\t\toffset.y + cp2.y,\n\t\t\toffset.x + e.x,\n\t\t\toffset.y + e.y\n\t\t)\n\t\tctx.stroke()\n\t\tctx.restore()\n\t}\n\tdrawVLines(\n\t\txPoints: number[],\n\t\toption: (ctx: CanvasRenderingContext2D) => void\n\t) {\n\t\tconst H = this.$viewport.offsetHeight\n\t\tconst ctx = this.getContext()\n\t\tctx.save()\n\t\tif (typeof option === 'function') {\n\t\t\toption(ctx)\n\t\t}\n\t\tctx.beginPath()\n\t\tconst offset = this.getHolderOffset()\n\t\txPoints.forEach(x => {\n\t\t\tctx.moveTo(offset.x + x, 0)\n\t\t\tctx.lineTo(offset.x + x, H)\n\t\t})\n\t\tctx.stroke()\n\t\tctx.closePath()\n\t\tctx.restore()\n\t}\n\tdrawHLines(\n\t\tyPoints: number[],\n\t\toption: (ctx: CanvasRenderingContext2D) => void\n\t) {\n\t\tconst W = this.$viewport.offsetWidth\n\t\tconst ctx = this.getContext()\n\t\tctx.save()\n\t\tif (typeof option === 'function') {\n\t\t\toption(ctx)\n\t\t}\n\t\tctx.beginPath()\n\t\tconst offset = this.getHolderOffset()\n\t\tyPoints.forEach(y => {\n\t\t\tctx.moveTo(0, offset.y + y)\n\t\t\tctx.lineTo(W, offset.y + y)\n\t\t})\n\t\tctx.stroke()\n\t\tctx.closePath()\n\t\tctx.restore()\n\t}\n\tclear() {\n\t\tconst dim = this.getDimension()\n\t\tconst ctx = this.getContext()\n\t\tctx.fillStyle = 'white'\n\t\tctx.fillRect(0, 0, dim.width, dim.height)\n\n\t\t// drawGrid(ctx, dim);\n\t}\n\n\trepaintNodeHolder() {\n\t\tconst baseOffset = this.config.getOffset()\n\t\tconst { scale } = this.config\n\t\tthis.dom.css(this.$holder, {\n\t\t\ttop: `calc(50% + ${baseOffset.y}px)`,\n\t\t\tleft: `calc(50% + ${baseOffset.x}px)`,\n\t\t\ttransform: `scale(${scale})`,\n\t\t})\n\t\tthis.drawNodeSelection()\n\t}\n\tmoveNode(nodeUI: NodeUI) {\n\t\t// moveNode\n\t\tconst { parent } = nodeUI\n\t\tconst $subs = this.dom.findOne(parent!.$el!, '.mwd-subs')\n\t\t$subs!.append(nodeUI.$el!)\n\t}\n\tdrawNodeSelection() {\n\t\tconst area = this.selectionArea\n\t\tif (!area) {\n\t\t\treturn\n\t\t}\n\t\tconst { selection } = this.config.ui\n\t\tconst { dom } = this\n\t\tconst offset = this.getHolderOffset()\n\t\tconst el = dom.findOne(this.$viewport, '.mwd-selection-area')\n\t\tdom.css(el, {\n\t\t\tleft: offset.x + area.left - selection.padding,\n\t\t\ttop: offset.y + area.top - selection.padding,\n\t\t\twidth: area.width + 2 * selection.padding,\n\t\t\theight: area.height + 2 * selection.padding,\n\t\t})\n\t\tconst ctrl = dom.findOne(el, 'div')\n\t\tdom.css(ctrl, {\n\t\t\tdisplay: '',\n\t\t\twidth: 24,\n\t\t\theight: 24,\n\t\t})\n\t}\n\tupdateSelection(nodes: NodeUI[]) {\n\t\tif (!nodes || nodes.length === 0) {\n\t\t\treturn\n\t\t}\n\t\tthis.clearNodeSelection()\n\t\tthis.selectionArea = this.getAbsoluteDimensions(nodes)\n\t\tthis.drawNodeSelection()\n\t}\n\tclearNodeSelection() {\n\t\tif (this.selectionArea) {\n\t\t\tconst { dom } = this\n\t\t\tconst el = dom.findOne(this.$viewport, '.mwd-selection-area')\n\t\t\tdom.css(el, { top: -1, left: -1, width: 0, height: 0 })\n\t\t\tconst ctrl = dom.findOne(el, 'div')\n\t\t\tdom.css(ctrl, { display: 'none' })\n\t\t\tthis.selectionArea = undefined\n\t\t}\n\t}\n\tdrawNode(nodeUI: NodeUI) {\n\t\tif (!nodeUI.$el) {\n\t\t\tregisterElement(this, nodeUI)\n\t\t}\n\t\tconst { $el, zIndex } = nodeUI\n\t\tconst $body = $el!.querySelector<HTMLElement>('.mwd-body')\n\t\t// 1. folding state\n\t\tconst foldedClassName = this.config.foldedNodeClassName()\n\t\tconst { dom } = this\n\t\tif (nodeUI.isFolded()) {\n\t\t\tdom.clazz.add($el, foldedClassName)\n\t\t} else {\n\t\t\tdom.clazz.remove($el, foldedClassName)\n\t\t}\n\t\t// 2. positioning\n\t\tconst pos = nodeUI.getPos()\n\t\tdom.css($el!, { top: pos.y, left: pos.x, zIndex: zIndex })\n\t\t// 3. selection state\n\t\tconst methodName = nodeUI.isSelected() ? 'add' : 'remove'\n\t\tconst className = this.config.activeClassName('node')\n\t\tdom.clazz[methodName]($body, className)\n\t\t// 4. level\n\t\tconst levelClassName: string = this.config.nodeLevelClassName(nodeUI)\n\t\tdom.clazz.add($body, levelClassName)\n\t\t$body.dataset.level = `${nodeUI.level()}`\n\t\t// 5. additional style\n\t\tconst { style } = nodeUI.view\n\t\tif (style) {\n\t\t\tdom.renderStyle($body, style)\n\t\t}\n\t\tconst mwd = this.config.mindWired()\n\t\tconst nodeRenderer = mwd.getNodeRender(nodeUI.model)\n\t\tconst model = mwd.translateModel(nodeUI.model)\n\t\tnodeRenderer.render(model, $body, {\n\t\t\tselected: nodeUI.selected,\n\t\t\tediting: nodeUI.editing,\n\t\t})\n\t}\n\tshowNodeEditor(nodeUI: NodeUI, nodeEditor: INodeEditor) {\n\t\tconst { uid } = nodeUI\n\t\tconst mwd = this.config.mindWired()\n\t\tconst model = mwd.translateModel(nodeUI.model)\n\t\tconst nodeEl = this.$holder.querySelector<HTMLElement>(`[data-uid=${uid}]`)\n\t\tconst $editorEl = nodeEditor.showEditor(\n\t\t\tmodel,\n\t\t\tnodeEl,\n\t\t\tnodeUI.getStyle('style')\n\t\t)\n\t\t// mark editor element for focus management\n\t\t// see installFocusHandler();\n\t\tthis.dom.css($editorEl, { transform: `scale(${1 / this.scale})` })\n\t\t$editorEl.dataset.editorElement = ''\n\n\t\treturn new Promise(ok => {\n\t\t\tsetTimeout(ok)\n\t\t})\n\t}\n\thideNodeEditor(nodeUI: NodeUI) {\n\t\tconst { uid } = nodeUI\n\t\tconst { dom } = this\n\t\tconst nodeEl = this.$holder.querySelector<HTMLElement>(`[data-uid=${uid}]`)\n\t\tconst editBox = dom.findOne(nodeEl!, '[data-editor-element]')\n\t\tif (editBox) {\n\t\t\teditBox.remove()\n\t\t}\n\t\tdom.findOne(nodeEl!, '.mwd-body')!.focus()\n\t}\n\tregsiterNode(nodeUI: NodeUI) {\n\t\tregisterElement(this, nodeUI)\n\t}\n\tunregisterNode(nodeUI: NodeUI) {\n\t\tunregisterElement(this, nodeUI)\n\t\tthis.clearNodeSelection()\n\t}\n\tunregisterNodeTree(node: NodeUI) {\n\t\tunregisterElement(this, node, true)\n\t}\n\tupdateFoldingNodes(nodeUI: NodeUI) {\n\t\tconst display = nodeUI.isFolded() ? 'none' : ''\n\t\tconst { dom } = this\n\t\tconst nodeEl = dom.findOne(this.$holder, `[data-uid=\"${nodeUI.uid}\"]`)!\n\t\tconst subEl = dom.findOne(nodeEl, ':scope > .mwd-subs')\n\t\tdom.css(subEl, { display })\n\t\tif (nodeUI.isFolded()) {\n\t\t\tconst rect = dom.domRect(nodeUI.$bodyEl)\n\t\t\tinstallFoldingIcon(nodeEl, rect, this.config, foldingEl => {\n\t\t\t\tdom.event.click(foldingEl, e => {\n\t\t\t\t\te.stopPropagation()\n\t\t\t\t\tconst mwd = this.config.mindWired()\n\t\t\t\t\tmwd.setFoldingState([nodeUI], false)\n\t\t\t\t\t// nodeUI.setFolding(false);\n\t\t\t\t})\n\t\t\t})\n\t\t} else {\n\t\t\tdom.findOne(nodeEl, ':scope > [data-cmd=\"unfolding\"]')!.remove()\n\t\t}\n\t}\n\tgetNodeBody(nodeUI: NodeUI) {\n\t\tlet nodeEl = nodeUI.$el!\n\t\tif (!nodeEl) {\n\t\t\tnodeEl = registerElement(this, nodeUI)\n\t\t}\n\t\treturn nodeEl.querySelector<HTMLElement>(`.mwd-body`)\n\t}\n\tdrawSchema(schemaSpec: SchemaSpec) {\n\t\tconst { name, style } = schemaSpec\n\t\tif (style) {\n\t\t\tconst { mapId, styleDef } = this.config.ui\n\t\t\tconst styleId = styleDef.schema.styleId\n\t\t\t\t.replace('@schema', name)\n\t\t\t\t.replace('@mapId', mapId ? `-${mapId}` : '')\n\t\t\tlet styleEl = document.querySelector(styleId)\n\t\t\tif (!styleEl) {\n\t\t\t\tstyleEl = this.dom.tag.style(styleId)\n\t\t\t\tdocument.head.appendChild(styleEl)\n\t\t\t}\n\t\t\tconst body = Object.keys(style).reduce((cssText, prop) => {\n\t\t\t\tconst dashedprop = prop.replace(\n\t\t\t\t\t/[A-Z]/g,\n\t\t\t\t\tmatch => `-${match.toLowerCase()}`\n\t\t\t\t)\n\t\t\t\treturn cssText + `${dashedprop}: ${style[prop]};`\n\t\t\t}, '')\n\t\t\tconst selector = styleDef.schema.selector\n\t\t\t\t.replace('@schema', name)\n\t\t\t\t.replace('@mapId', mapId ? `=\"${mapId}\"` : '')\n\t\t\tstyleEl.innerHTML = `${selector} { ${body} }`\n\t\t}\n\t}\n\tremoveSchema(schemaName: string) {\n\t\tconst { mapId, styleDef } = this.config.ui\n\t\tconst styleId = styleDef.schema.styleId\n\t\t\t.replace('@schema', schemaName)\n\t\t\t.replace('@mapId', mapId ? `-${mapId}` : '')\n\t\tlet styleEl = document.querySelector(styleId)\n\t\tif (styleEl) {\n\t\t\tstyleEl.remove()\n\t\t}\n\t}\n\tbindSchema(node: NodeUI, schemaSpec: SchemaSpec): boolean {\n\t\tconst { model } = node.spec\n\t\tconst { name } = schemaSpec\n\t\tconst classes: string[] = model.schema\n\t\t\t? model.schema.split(' ').map(clazz => clazz.trim())\n\t\t\t: []\n\t\tif (classes.includes(name)) {\n\t\t\treturn false\n\t\t}\n\t\tclasses.push(name)\n\t\tmodel.schema = classes.join(' ').trim()\n\n\t\tconst $bodyEl = this.getNodeBody(node)\n\t\tnode.$el.classList.add(name)\n\t\t$bodyEl.classList.add(name)\n\t\treturn true\n\t}\n\tunbindSchema(node: NodeUI, schemaSpec: SchemaSpec): boolean {\n\t\tconst { model } = node.spec\n\t\tif (!model.schema) {\n\t\t\treturn false\n\t\t}\n\t\tconst { name } = schemaSpec\n\t\tconst classes: string[] = model.schema\n\t\t\t.split(' ')\n\t\t\t.map(clazz => clazz.trim())\n\t\t\t.filter(clazz => clazz.length > 0 && clazz !== name)\n\t\tmodel.schema = classes.join(' ').trim()\n\t\tif (model.schema.length === 0) {\n\t\t\tdelete model.schema\n\t\t}\n\t\tconst $bodyEl = this.getNodeBody(node)\n\t\tnode.$el.classList.remove(name)\n\t\t$bodyEl.classList.remove(name)\n\t\treturn true\n\t}\n}\n","import { type CanvasUI } from \"../canvas-ui\";\nimport { type NodeUI } from \"../node\";\n\nexport type EdgeRendererName = string;\n\nexport type EdgeRederingOptionType<T> = {\n  optionType: T;\n};\n/**\n * Top level edge renderer interface. All implementation provide unique name and rendering opration on canvas.\n * @template T - type of custom edge option\n */\nexport interface IEdgeRenderer<T = any> {\n  /**\n   * unique renderer name\n   */\n  name: EdgeRendererName;\n  /**\n   * FIXME NodeUI보다는 EdgeSpec(node.$style) 이 적절해보임.\n   * @param node\n   */\n  getRenderingOption(node: NodeUI): T;\n  render: (canvas: CanvasUI, srcNode: NodeUI, dstNode: NodeUI) => void;\n}\n\nexport abstract class AbstractEdgeRenderer<T> implements IEdgeRenderer<T> {\n  abstract name: string;\n  /**\n   * provides default option to be used for pollyfill\n   */\n  get defaultOption(): T {\n    return undefined;\n  }\n  abstract render(canvas: CanvasUI, srcNode: NodeUI, dstNode: NodeUI): void;\n  getRenderingOption(node: NodeUI): T {\n    const option: T = node.$style.option;\n    const { defaultOption } = this;\n    if (defaultOption !== undefined) {\n      for (let prop in defaultOption) {\n        if (option[prop] === undefined && defaultOption[prop] !== undefined) {\n          option[prop] = defaultOption[prop];\n        }\n      }\n    }\n    return option;\n  }\n}\n","import { Point } from \"@/setting\";\nimport type { CanvasUI } from \"../canvas-ui\";\nimport { NodeRect } from \"../node/node-type\";\nimport { type NodeUI } from \"../node/node-ui\";\nimport { AbstractEdgeRenderer } from \"./edge-renderer-type\";\n\nconst valignOf = (option: any) => {\n  const valign = option && option.valign;\n  return valign || \"center\";\n};\nconst pointAt = <K extends keyof NodeRect>(\n  rect: NodeRect,\n  lblY: K,\n  lblX: K,\n  offsetY: number\n) => {\n  const x = rect[lblX] as number;\n  const y = rect[lblY] as number;\n  return new Point(x, y + offsetY);\n};\nexport class LineEdgeRenderer extends AbstractEdgeRenderer<void> {\n  get name() {\n    return \"line\";\n  }\n  /**\n   * drawing line between srcNode and dstNode\n   * @param canvas\n   * @param srcNode\n   * @param dstNode\n   */\n  render(canvas: CanvasUI, srcNode: NodeUI, dstNode: NodeUI) {\n    const { scale } = canvas;\n    const [s, e] = [srcNode, dstNode].map((node) =>\n      canvas.getNodeDimension(node)\n    );\n\n    const option = this.getRenderingOption(srcNode);\n    const valign = valignOf(option);\n    const pathes: Point[] = [];\n    const auxPathes: Point[] = [];\n    const srcStyle = srcNode.$style;\n    const srcLineWidth = srcStyle.width * scale;\n    const dstStyle = dstNode.$style;\n    const dstLineWidth = dstStyle.width * scale;\n    const lineGap = Math.abs(srcLineWidth - dstLineWidth);\n    const offsetY = dstLineWidth / 2;\n\n    if (valign === \"center\") {\n      pathes.push(s.center, e.center);\n    } else if (valign === \"bottom\") {\n      const isLR = s.cx <= e.cx;\n      const shiftX = isLR ? 2 : -2;\n      const sLabel = isLR ? \"right\" : \"left\";\n      const eLabel: [\"left\" | \"right\", \"left\" | \"right\"] = isLR\n        ? [\"left\", \"right\"]\n        : [\"right\", \"left\"];\n      const s0 = pointAt(s, \"bottom\", sLabel, offsetY);\n      const s1 = s0.clone();\n      s1.x += shiftX;\n      const d1 = pointAt(e, \"bottom\", eLabel[0], offsetY);\n      const d0 = d1.clone();\n      d0.x -= shiftX;\n      pathes.push(s0, s1, d0, d1);\n      pathes.push(pointAt(e, \"bottom\", eLabel[1], offsetY));\n      if (lineGap > 0) {\n        const p0 = s0.clone();\n        p0.y += lineGap;\n        const p1 = s1.clone();\n        p1.y += lineGap;\n        auxPathes.push(p0, p1, d0, d1);\n      }\n    }\n    canvas.drawPath(\n      pathes,\n      {\n        lineWidth: dstLineWidth,\n        strokeStyle: dstStyle.color,\n        lineJoin: \"round\",\n      },\n      (ctx) => {\n        if (dstStyle.dash) {\n          ctx.setLineDash(dstStyle.dash);\n        }\n      }\n    );\n    if (auxPathes.length > 0) {\n      canvas.drawPath(\n        auxPathes,\n        {\n          lineWidth: dstLineWidth,\n          strokeStyle: dstStyle.color,\n          lineJoin: \"round\",\n        },\n        (ctx) => {\n          if (dstStyle.dash) {\n            ctx.setLineDash(dstStyle.dash);\n          }\n        }\n      );\n    }\n    if (srcNode.isRoot() && valign === \"bottom\") {\n      const offset = srcLineWidth / 2;\n      canvas.drawPath(\n        [\n          pointAt(s, \"bottom\", \"left\", offset),\n          pointAt(s, \"bottom\", \"right\", offset),\n        ],\n        {\n          lineWidth: srcLineWidth,\n          strokeStyle: srcStyle.color,\n          lineJoin: \"round\",\n        },\n        (ctx) => {\n          if (srcStyle.dash) {\n            ctx.setLineDash(srcStyle.dash);\n          }\n        }\n      );\n    }\n  }\n}\n","/**\n * natural curve\n */\nimport type { CanvasUI } from \"../canvas-ui\";\nimport type { NodeUI } from \"../node/node-ui\";\nimport { AbstractEdgeRenderer } from \"./edge-renderer-type\";\n\nexport type NaturalCurveEdgeOption = {\n  deg: number;\n  ratio: number;\n};\nexport class NaturalCourveEdgeRenderer extends AbstractEdgeRenderer<NaturalCurveEdgeOption> {\n  get name() {\n    return \"curve\";\n  }\n  get defaultOption() {\n    return { deg: 20, ratio: 0.4 } as NaturalCurveEdgeOption;\n  }\n  render(canvas: CanvasUI, srcNode: NodeUI, dstNode: NodeUI) {\n    const { scale } = canvas;\n    const [s, e] = [srcNode, dstNode].map((node) =>\n      canvas.getScaledOffset(node)\n    );\n    const style = dstNode.$style;\n    const option = this.getRenderingOption(dstNode);\n    canvas.drawCurve(\n      s,\n      e,\n      {\n        degree: option.deg || 20,\n        ratio: option.ratio || 0.4,\n        props: {\n          lineWidth: style.width * scale,\n          strokeStyle: style.color,\n        },\n      },\n      style.getEdgeRenderer()\n    );\n  }\n}\n","import { Point } from \"../../service/geom\";\nimport type { CanvasUI } from \"../canvas-ui\";\nimport { type NodeRect } from \"../node/node-type\";\nimport { type NodeUI } from \"../node/node-ui\";\nimport { AbstractEdgeRenderer } from \"./edge-renderer-type\";\nimport type { EdgeStyle } from \"./edge-style\";\n\nexport type MustachLREdgeOption = {\n  valign: \"bottom\" | \"center\" | \"top\";\n};\nconst valignOf = (option: MustachLREdgeOption) => {\n  const valign = option && option.valign;\n  return valign || \"center\";\n};\nconst pointAt = <K extends keyof NodeRect>(\n  rect: NodeRect,\n  lblY: K,\n  lblX: K,\n  offsetY: number\n) => {\n  const x = rect[lblX] as number;\n  const y = rect[lblY] as number;\n  return new Point(x, y + offsetY);\n};\nconst renderUnderline = (\n  canvas: CanvasUI,\n  style: EdgeStyle,\n  rect: NodeRect,\n  lineWidth: number\n) => {\n  const offset = lineWidth / 2;\n  canvas.drawPath(\n    [\n      { x: rect.left, y: rect.bottom + offset } as Point,\n      { x: rect.right, y: rect.bottom + offset } as Point,\n    ],\n    { lineWidth, strokeStyle: style.color },\n    (ctx) => {\n      if (style.dash) {\n        ctx.setLineDash(style.dash);\n      }\n    }\n  );\n};\nconst rnederCurve = (\n  canvas: CanvasUI,\n  src: Point,\n  srcStyle: EdgeStyle,\n  dst: Point,\n  dstStyle: EdgeStyle\n) => {\n  const { scale } = canvas;\n  const srcLineWidth = srcStyle.width * scale;\n  const dstLineWidth = dstStyle.width * scale;\n  const lineWidth = Math.min(srcLineWidth, dstLineWidth);\n  const distance = dst.x - src.x;\n  const lineOffset = Math.abs(srcLineWidth - dstLineWidth);\n  src.y -= lineOffset / 2;\n  const props = { lineWidth: lineWidth, strokeStyle: dstStyle.color };\n  const rendererFn = (ctx: CanvasRenderingContext2D) => {\n    if (dstStyle.dash) {\n      ctx.setLineDash(dstStyle.dash);\n    }\n  };\n  canvas.drawBeizeCurve(\n    src,\n    dst,\n    {\n      cpoints: [\n        { x: src.x + distance / 2, y: src.y } as Point,\n        { x: dst.x - distance / 2, y: dst.y } as Point,\n      ],\n      props,\n    },\n    rendererFn\n  );\n  if (lineOffset > 0) {\n    src.y += lineOffset;\n    if (lineOffset / 2 >= dstLineWidth) {\n      props.lineWidth = srcLineWidth;\n    }\n    canvas.drawBeizeCurve(\n      src,\n      dst,\n      {\n        cpoints: [\n          { x: src.x + distance / 2, y: src.y } as Point,\n          { x: dst.x - distance / 2, y: dst.y } as Point,\n        ],\n        props,\n      },\n      rendererFn\n    );\n  }\n};\nexport class MustacheLREdgeRenderer extends AbstractEdgeRenderer<MustachLREdgeOption> {\n  get name() {\n    return \"mustache_lr\";\n  }\n  render(canvas: CanvasUI, srcNode: NodeUI, dstNode: NodeUI) {\n    const [s, e] = [srcNode, dstNode].map((node) =>\n      canvas.getNodeDimension(node)\n    );\n    const padding = {\n      src: srcNode.$style.width * canvas.scale,\n      dst: dstNode.$style.width * canvas.scale,\n    };\n    const option = this.getRenderingOption(srcNode);\n    const isBottom = valignOf(option) === \"bottom\";\n\n    if (isBottom && srcNode.firstChild() === dstNode) {\n      renderUnderline(canvas, srcNode.$style, s, padding.src);\n    }\n\n    let sp: Point, ep: Point;\n    const isLR = s.cx <= e.cx; // [srcNode ... dstNode]\n    const labelY = isBottom ? \"bottom\" : \"cy\";\n    if (isLR) {\n      // srcNode ... dstNode\n      sp = pointAt(s, labelY, \"right\", padding.src / 2);\n      ep = pointAt(e, labelY, \"left\", padding.dst / 2);\n    } else {\n      // dstNode ... srcNode\n      sp = pointAt(s, labelY, \"left\", padding.src / 2);\n      ep = pointAt(e, labelY, \"right\", padding.dst / 2);\n    }\n    rnederCurve(canvas, sp, srcNode.$style, ep, dstNode.$style);\n    if ((dstNode.isFolded() || dstNode.isLeaf()) && isBottom) {\n      renderUnderline(canvas, dstNode.$style, e, padding.dst);\n    }\n  }\n}\n","import { Point } from \"../../service/geom\";\nimport type { CanvasUI } from \"../canvas-ui\";\nimport { type NodeRect } from \"../node/node-type\";\nimport { type NodeUI } from \"../node/node-ui\";\nimport { AbstractEdgeRenderer } from \"./edge-renderer-type\";\n\nconst renderCurve = (\n  canvas: CanvasUI,\n  srcNode: NodeUI,\n  s: NodeRect,\n  dstNode: NodeUI,\n  e: NodeRect,\n  dy: number\n) => {\n  const { scale } = canvas;\n  const srcWidth = srcNode.$style.width * scale;\n  const dstWidth = dstNode.$style.width * scale;\n  const width = Math.min(srcWidth, dstWidth);\n  const offset = Math.abs(srcWidth - dstWidth);\n  s.center.x -= offset / 2;\n  const props = { lineWidth: width, strokeStyle: dstNode.$style.color };\n  const rendererFn = (ctx: CanvasRenderingContext2D) => {\n    if (srcNode.$style.dash) {\n      ctx.setLineDash(srcNode.$style.dash);\n    }\n  };\n  canvas.drawBeizeCurve(\n    s.center,\n    e.center,\n    {\n      cpoints: [\n        { x: s.cx, y: s.cy + dy / 2 } as Point,\n        { x: e.cx, y: e.cy - dy / 2 } as Point,\n      ],\n      props,\n    },\n    rendererFn\n  );\n  if (offset > 0) {\n    s.center.y += offset;\n    canvas.drawBeizeCurve(\n      s.center,\n      e.center,\n      {\n        cpoints: [\n          { x: s.cx, y: s.cy + dy / 2 } as Point,\n          { x: e.cx, y: e.cy - dy / 2 } as Point,\n        ],\n        props,\n      },\n      rendererFn\n    );\n  }\n};\nexport class MustacheTBEdgeRenderer extends AbstractEdgeRenderer<void> {\n  get name() {\n    return \"mustache_tb\";\n  }\n  render(canvas: CanvasUI, srcNode: NodeUI, dstNode: NodeUI) {\n    const [s, e] = [srcNode, dstNode].map((node) =>\n      canvas.getNodeDimension(node)\n    );\n    const padding = { hor: 0, ver: 5 };\n\n    let min: NodeRect, max: NodeRect;\n    if (s.cy <= e.cy) {\n      min = s;\n      max = e;\n    } else {\n      min = e;\n      max = s;\n    }\n\n    min.center.y = min.bottom + padding.ver;\n    max.center.y = max.top - padding.ver;\n\n    const dy = max.cy - min.cy;\n    renderCurve(canvas, srcNode, s, dstNode, e, s === min ? dy : -dy);\n  }\n}\n","import { EVENT } from \"../../service/event-bus\";\nimport { type NodeUI } from \"../node/node-ui\";\nimport type { Configuration } from \"../config\";\nimport type { CanvasUI } from \"../canvas-ui\";\nimport type { EdgeRendererName, IEdgeRenderer } from \"./edge-renderer-type\";\nimport type { NodeMoveArg, ViewportEventArg } from \"../../mindwired-event\";\nimport { LineEdgeRenderer } from \"./line-edge-renderer\";\nimport { NaturalCourveEdgeRenderer } from \"./natural-curve-renderer\";\nimport { MustacheLREdgeRenderer } from \"./mustache-lr-renderer\";\nimport { MustacheTBEdgeRenderer } from \"./mustache-tb-renderer\";\n\nconst filterIndex = (edges: Edge[], callback: Function) => {\n  const pos: number[] = [];\n  edges.forEach((e, index) => {\n    if (callback(e)) {\n      pos.push(index);\n    }\n  });\n  return pos;\n};\n\nexport const installDefaultEdgeRenderers = (ctx: EdgeContext) => {\n  ctx.registerEdgeRenderer(new LineEdgeRenderer());\n  ctx.registerEdgeRenderer(new NaturalCourveEdgeRenderer());\n  ctx.registerEdgeRenderer(new MustacheLREdgeRenderer());\n  ctx.registerEdgeRenderer(new MustacheTBEdgeRenderer());\n};\nconst createEdges = (srcNode: NodeUI, edges: Edge[]) => {\n  srcNode.children((child: NodeUI) => {\n    const e = new Edge(srcNode, child);\n    edges.push(e);\n    createEdges(child, edges);\n  });\n};\n\nexport class Edge {\n  srcNode: NodeUI;\n  dstNode: NodeUI;\n  visible: boolean;\n  constructor(srcNode: NodeUI, dstNode: NodeUI) {\n    this.srcNode = srcNode;\n    this.dstNode = dstNode;\n    this.visible = true;\n  }\n  get src() {\n    return this.srcNode;\n  }\n  get dst() {\n    return this.dstNode;\n  }\n  matched(node: NodeUI) {\n    return this.srcNode === node || this.dstNode === node;\n  }\n  matchedDst(node: NodeUI) {\n    return this.dstNode === node;\n  }\n}\nconst updateVisibleState = (\n  edgeUI: EdgeContext,\n  edge: Edge,\n  visible: boolean\n) => {\n  edge.visible = visible;\n  const childEdges = edgeUI.filterEdges(\n    (e: Edge) => e.src === edge.dst && !e.src.isFolded()\n  );\n  childEdges.forEach((edge: Edge) => {\n    updateVisibleState(edgeUI, edge, visible);\n  });\n};\nexport class EdgeContext {\n  config: Configuration;\n  canvas: CanvasUI;\n  private edges: Edge[];\n  private renderers = new Map<EdgeRendererName, IEdgeRenderer>();\n  constructor(config: Configuration, canvas: CanvasUI) {\n    this.config = config;\n    this.canvas = canvas;\n    this.edges = [] as Edge[];\n    this.config\n      .listen(EVENT.VIEWPORT.RESIZED, (_: ViewportEventArg) => {\n        this.repaint();\n      })\n      .listen(EVENT.NODE.MOVED, ({ node, prevParent }: NodeMoveArg) => {\n        this._deleteBetween(prevParent, node);\n        this._addEdge(node.parent!, node);\n        this.repaint();\n      });\n  }\n  listRenderers(): IEdgeRenderer[] {\n    return [...this.renderers.values()];\n  }\n\n  private _addEdge(src: NodeUI, dst: NodeUI) {\n    const e = new Edge(src, dst);\n    this.edges.push(e);\n  }\n  addEdge(src: NodeUI, dst: NodeUI) {\n    this._addEdge(src, dst);\n    this.repaint();\n  }\n  private _deleteBetween(src: NodeUI, dst: NodeUI) {\n    const pos = filterIndex(\n      this.edges,\n      (e: Edge) => e.src === src && e.dst === dst\n    );\n    return pos.reverse().flatMap((index) => this.edges.splice(index, 1));\n  }\n  deleteBetween(src: NodeUI, dst: NodeUI): Edge[] {\n    const deleted = this._deleteBetween(src, dst);\n    if (deleted.length > 0) {\n      this.repaint();\n    }\n    return deleted;\n  }\n  /**\n   * deletes edges matching the nodes\n   * @param nodes\n   */\n  deleteEdges(nodes: NodeUI[]) {\n    let deleted = 0;\n    nodes.forEach((node) => {\n      const pos = filterIndex(this.edges, (e: Edge) => e.matched(nodes[0]));\n      if (pos.length > 0) {\n        pos.reverse().forEach((index) => this.edges.splice(index, 1));\n      }\n      deleted += pos.length;\n    });\n    if (deleted > 0) {\n      this.repaint();\n    }\n  }\n  setRootNode(rootNode: NodeUI) {\n    this.edges = [];\n    createEdges(rootNode, this.edges);\n  }\n  registerEdgeRenderer(render: IEdgeRenderer) {\n    const { name } = render;\n    if (this.renderers.has(name)) {\n      throw new Error(`duplicated edge name: [${name}]`);\n    }\n    this.renderers.set(name, render);\n  }\n  filterEdges(predicate: (e: Edge) => boolean) {\n    return this.edges.filter(predicate);\n  }\n  setEdgeVisible(\n    node: NodeUI,\n    visible: boolean,\n    repaintImmediately: boolean = true\n  ) {\n    const edges = this.filterEdges((edge) => edge.src === node);\n    edges.forEach((edge) => {\n      updateVisibleState(this, edge, visible);\n    });\n    if (repaintImmediately) {\n      this.repaint();\n    }\n  }\n  repaint(clearCanvas = true) {\n    if (clearCanvas) {\n      this.canvas.clear();\n    }\n    this.edges.forEach((e) => {\n      const { src, dst } = e;\n      const style = dst.$style;\n      if (e.visible) {\n        const renderer = this.renderers.get(style.name.toLowerCase());\n        renderer.render(this.canvas, src, dst);\n      }\n    });\n  }\n  dispose() {\n    const { edges } = this;\n    edges.splice(0, edges.length);\n    this.repaint();\n  }\n}\n","/**\n * edge style calculator\n *\n * supported style\n * - name:string\n * - option:object(edge dependant)\n * - color:string(name of color, #aaccss, etc)\n * - width:number(line width)\n */\n\nimport type { LevelBasedEdgeWidth, EdgeSpec } from \"../node/node-type\";\nimport { type NodeUI } from \"../node/node-ui\";\n\n// fix edge style 필요\nconst DEFAULT_EDGE_STYLE: EdgeSpec = {\n  name: \"line\",\n  option: {},\n  color: \"#000000\",\n  width: 1,\n  inherit: true,\n};\nconst traceStyle = <K extends keyof EdgeSpec>(node: NodeUI, prop: K) => {\n  let nodeRef = node;\n  let style = nodeRef.getStyle(\"edge\");\n  while (\n    (!style[prop] || (nodeRef !== node && style.inherit === false)) &&\n    !nodeRef.isRoot()\n  ) {\n    nodeRef = nodeRef.parent;\n    style = nodeRef.getStyle(\"edge\");\n  }\n  return style[prop] || DEFAULT_EDGE_STYLE[prop];\n};\nexport class EdgeStyle {\n  nodeUI: NodeUI;\n  constructor(nodeUI: NodeUI) {\n    this.nodeUI = nodeUI;\n  }\n  get name() {\n    return traceStyle(this.nodeUI, \"name\");\n  }\n  get option() {\n    return traceStyle(this.nodeUI, \"option\");\n  }\n  get color() {\n    return traceStyle(this.nodeUI, \"color\");\n  }\n  get width() {\n    const width = traceStyle(this.nodeUI, \"width\");\n    if (typeof width === \"function\") {\n      return width(this.nodeUI.spec, this.nodeUI.level());\n    } else if (typeof width === \"number\") {\n      return width;\n    } else {\n      const lvlWidth = width as LevelBasedEdgeWidth;\n      return Math.max(\n        lvlWidth.root + lvlWidth.delta * this.nodeUI.level(),\n        lvlWidth.min\n      );\n    }\n  }\n  get dash() {\n    return traceStyle(this.nodeUI, \"dash\");\n  }\n  getEdgeRenderer() {\n    // FIXME - 없어져도 될 듯...\n    return undefined;\n  }\n}\n","const isPrimitive = (o: any): boolean => {\n  const type = typeof o;\n  return \"number,string,boolean,undefined\".includes(type);\n};\nconst isFunction = (o: any): boolean => typeof o === \"function\";\n/**\n * check if obj is null or undefined\n * @param obj\n * @returns\n */\nconst notDefined = (obj: any): boolean => obj === undefined || obj === null;\nconst deepCopy = <T = any>(src: T) => {\n  if (\n    src === undefined ||\n    src === null ||\n    isPrimitive(src) ||\n    isFunction(src)\n  ) {\n    return src;\n  }\n  const dst = (Array.isArray(src) ? [] : {}) as T;\n  Object.keys(src).forEach((prop) => {\n    const value = deepCopy(src[prop]);\n    dst[prop] = value;\n  });\n  return dst;\n};\n/**\n * merge properties of src into dst\n *\n *```javascript\n * src: {color: '#000', padding: {left: 8, right: 8}}\n * dst: {color: '#aaa', padding: {top: 16} }\n *\n * merged dst: {color: '#000', padding: {top: 16, left:8, right: 8}}\n * ```\n * @param {object} src\n * @param {object} dst\n */\nconst mergeLeaf = (src: Record<string, any>, dst: Record<string, any>) => {\n  Object.keys(src).forEach((prop) => {\n    if (notDefined(dst[prop])) {\n      dst[prop] = deepCopy(src[prop]);\n    } else if (isPrimitive(src[prop]) || isFunction(src[prop])) {\n      dst[prop] = src[prop];\n    } else {\n      mergeLeaf(src[prop], dst[prop]);\n    }\n  });\n  return dst;\n};\nexport default {\n  deepCopy,\n  mergeLeaf,\n};\n","export type NodeModelType = \"text\" | \"icon-badge\" | \"thumbnail\" | \"link\";\n/**\n * ```\n * number - same width and height\n * [number, number] - [width, height]\n * ```\n */\nexport type ImageSizeSpec = number | [number, number];\n/**\n *  ```\n *  icon-badge\n *  +------+--------------+\n *  | IMG  |    T E X T   |\n *  +------+--------------+\n *\n *  [configuration]\n *  node: {\n *    model: {\n *      'icon-badge': {\n *        icon: 'https://image.url.value',\n *        text: 'text value'\n *      }\n *    },\n *    view: { ... }\n *  }\n * ```\n *\n */\nexport type IconBadgeSpec = {\n  /**\n   * uril to icon image\n   */\n  icon: string;\n  /**\n   * text\n   */\n  text: string;\n  size?: ImageSizeSpec;\n};\nexport type ThumbnailFillMode = \"contain\" | \"cover\";\nexport type ThumbnailSpec = {\n  path: string;\n  size: ImageSizeSpec;\n  mode: ThumbnailFillMode;\n};\nexport type LinkSpec = { url: string; body: ModelSpec };\nexport type ProviderSpec = { key: any };\nexport type SchemaSpec = {\n  /**\n   * name of schema(must be unique in a map)\n   */\n  name: string;\n  style?: Partial<CSSStyleDeclaration>;\n};\nexport type ModelSpec = {\n  type?: NodeModelType;\n  schema?: string;\n  text?: string;\n  thumbnail?: ThumbnailSpec;\n  \"icon-badge\"?: IconBadgeSpec;\n  link?: LinkSpec;\n  provider?: ProviderSpec;\n};\nimport { Point, WebColorString } from \"../../setting\";\n/**\n * edge width by node's level\n *\n * * root - edge width of root node(level 0)\n * * delta - used to determine edge width by level (root + level * delta)\n * * min - minimal edge width\n *\n * Example\n *\n * ```js\n *   width: { root: 6, detal: -2, min: 1 }\n * ```\n * * root node(level-0): 6px\n * * node at level-1 : 4px;\n * * node at level-2 : 2px;\n * * node at level-3 : 1px;\n * * node at level-4 : 1px;\n */\nexport type LevelBasedEdgeWidth = {\n  root: number;\n  delta: number;\n  min: number;\n};\nexport type EdgeSpec = {\n  name?: string;\n  color?: WebColorString;\n  width?:\n    | number\n    | LevelBasedEdgeWidth\n    | ((node: NodeSpec, level: number) => number);\n  dash?: number[];\n  /**\n   * if true, all descendant nodes use this edge(default: true)\n   */\n  inherit?: boolean;\n  option?: any;\n};\nexport type NodeLayoutType =\n  | \"X-AXIS\"\n  | \"Y-AXIS\"\n  | \"XY-AXIS\"\n  | \"DEFAULT\"\n  | string;\nexport type NodeLayout = {\n  type: NodeLayoutType;\n};\nexport type ViewSpec = {\n  x: number;\n  y: number;\n  layout?: NodeLayout;\n  edge?: EdgeSpec;\n  folding?: boolean;\n  style?: Partial<CSSStyleDeclaration>;\n};\n\nexport type NodeSpec = {\n  root?: boolean;\n  model: ModelSpec;\n  view: ViewSpec;\n  subs?: NodeSpec[];\n};\n\nexport class NodeRect {\n  constructor(readonly center: Point, private _rect: DOMRect) {}\n  get width() {\n    return this._rect.width;\n  }\n  get height() {\n    return this._rect.height;\n  }\n  get left() {\n    return this.center.x - this._rect.width / 2;\n  }\n  get right() {\n    return this.center.x + this._rect.width / 2;\n  }\n  get top() {\n    return this.center.y - this._rect.height / 2;\n  }\n  get bottom() {\n    return this.center.y + this._rect.height / 2;\n  }\n  get cx() {\n    return this.center.x;\n  }\n  get cy() {\n    return this.center.y;\n  }\n  get x() {\n    return this.left;\n  }\n  get y() {\n    return this.top;\n  }\n  get r() {\n    return this.right;\n  }\n  get b() {\n    return this.bottom;\n  }\n  merge(other: NodeRect) {\n    if (this === other) {\n      return this;\n    }\n    const minX = Math.min(this.left, other.left);\n    const minY = Math.min(this.top, other.top);\n    const maxX = Math.max(this.right, other.right);\n    const maxY = Math.max(this.bottom, other.bottom);\n    this.center.x = (maxX + minX) / 2;\n    this.center.y = (maxY + minY) / 2;\n    const width = maxX - minX;\n    const height = maxY - minY;\n    this._rect = new DOMRect(minX, minY, width, height);\n    return this;\n  }\n}\n","import clone from '@/service/clone'\nimport { EVENT } from '../../service/event-bus'\nimport { type Heading, Point, geom } from '../../service/geom'\nimport type { Configuration } from '../config'\nimport { EdgeStyle } from '../edge/edge-style'\nimport {\n\ttype NodeSpec,\n\tModelSpec,\n\tNodeLayout,\n\tNodeRect,\n\tViewSpec,\n} from './node-type'\n\nconst parseSubs = (nodeUi: NodeUI) => {\n\tconst { subs } = nodeUi.spec\n\tif (!subs || subs.length === 0) {\n\t\treturn []\n\t}\n\treturn subs.map(elem => {\n\t\tconst node = new NodeUI(elem, nodeUi.sharedConfig)\n\t\tnode.parent = nodeUi\n\t\treturn node\n\t})\n}\nlet zIndex = 1\n/**\n * A class representing a node in the tree structure.\n */\nexport class NodeUI {\n\tspec: NodeSpec\n\tsharedConfig: Configuration\n\t$el: HTMLElement | undefined\n\tselected: boolean\n\tediting: boolean\n\tuid: string\n\tzIndex: number\n\tsubs: NodeUI[]\n\tparent?: NodeUI\n\t$style: EdgeStyle\n\t// folding: boolean;\n\t$dim: NodeRect\n\tconstructor(\n\t\tspec: NodeSpec,\n\t\tsharedConfig: Configuration,\n\t\tparentNode?: NodeUI\n\t) {\n\t\tthis.spec = spec\n\t\tthis.sharedConfig = sharedConfig\n\t\tthis.$el = undefined\n\t\tthis.selected = false\n\t\tthis.editing = false\n\t\tthis.uid = this.sharedConfig.ui.uuid()\n\t\tthis.zIndex = 0\n\t\tthis.subs = parseSubs(this)\n\t\tthis.parent = parentNode\n\t\tthis.$style = new EdgeStyle(this)\n\t\t// this.folding = false;\n\t\tthis.$dim = undefined\n\t}\n\t/**\n\t * ModelSpec of the node\n\t */\n\tget model() {\n\t\treturn clone.deepCopy(this.spec.model)\n\t}\n\t/**\n\t * ViewSpec of the node\n\t */\n\tget view() {\n\t\tconst view = clone.deepCopy(this.spec.view)\n\t\tdelete view.x\n\t\tdelete view.y\n\t\treturn view\n\t}\n\tget $bodyEl() {\n\t\tconst canvas = this.sharedConfig.getCanvas()\n\t\treturn canvas.getNodeBody(this)\n\t}\n\tget x() {\n\t\treturn this.spec.view.x\n\t}\n\tget y() {\n\t\treturn this.spec.view.y\n\t}\n\t/**\n\t * offset(distance) from the direct parent node\n\t */\n\tget relativeOffset() {\n\t\treturn new Point(this.x, this.y)\n\t}\n\t/**\n\t * returns available NodeLayout.\n\t */\n\tget layout(): NodeLayout {\n\t\tlet { layout } = this.spec.view\n\t\tif (layout) {\n\t\t\treturn { ...layout }\n\t\t} else return this.parent && this.parent.layout\n\t}\n\t/**\n\t * Indicates whether the node is currently active(selected) or not\n\t * @returns {boolean} true if the node is active(selected), otherwise false.\n\t */\n\tget active() {\n\t\treturn !!this.$el\n\t}\n\t/**\n\t * Return child nodes.\n\t * @returns {NodeUI[]} child nodes\n\t */\n\tget childNodes(): NodeUI[] {\n\t\treturn [...this.subs]\n\t}\n\t/**\n\t * Returns whether the node is folded or not.\n\t * @returns {boolean} `true` if the node is folded, otherwise `false`.\n\t */\n\tget folding(): boolean {\n\t\treturn this.spec.view.folding || false\n\t}\n\t/**\n\t * Returns whether the node is ready to use or not.\n\t * @returns {boolean} `true` if the node is ready to use, `false` otherwise.\n\t */\n\tisReady(): boolean {\n\t\treturn !!this.$el\n\t}\n\n\t/**\n\t * Calculate node's position and size.\n\t * @param {boolean} [relative=false] calculate relative position to parent node.\n\t * @returns {NodeRect} position and size of the node.\n\t */\n\tdimension(relative: boolean = false): NodeRect {\n\t\tconst el = this.$bodyEl\n\t\tconst offset = relative ? this.relativeOffset : this.offset()\n\t\treturn (this.$dim = new NodeRect(offset, this.sharedConfig.dom.domRect(el)))\n\t}\n\t/**\n\t * Calculate node's level in the tree structure.\n\t * (Root node's level is 0.)\n\t * @returns {number} node's level.\n\t */\n\tlevel(): number {\n\t\treturn this.isRoot() ? 0 : this.parent!.level() + 1\n\t}\n\tgetStyle<K extends keyof ViewSpec>(type: K) {\n\t\t// type: 'edge', 'node'\n\t\treturn Object.assign({}, this.spec.view[type]) as ViewSpec[K]\n\t}\n\t/**\n\t * check if the node is selected or not.\n\t * @returns {boolean} `true` if selected, `false` otherwise.\n\t */\n\tisSelected(): boolean {\n\t\t// returns `true` if the node is selected, `false` otherwise.\n\t\treturn this.selected\n\t}\n\t/**\n\t * Set the selected state of the node.\n\t * If the node is selected, the z-index is updated and the node is repainted\n\t * @param {boolean} selected - `true` if selected, `false` otherwise.\n\t */\n\tsetSelected(selected: boolean) {\n\t\tthis.selected = selected\n\t\tthis.zIndex = ++zIndex\n\t\t// repaint the node if it's active and selected state changed.\n\t\tif (this.active && this.selected !== selected) {\n\t\t\tthis.repaint()\n\t\t}\n\t}\n\t/**\n\t * Check if this node is a descendant of `dstNode`.\n\t * @param {NodeUI} dstNode - The destination node to check\n\t * @returns {boolean} `true` if this node is a descendant of `dstNode`, `false` otherwise.\n\t */\n\tisDescendantOf(dstNode: NodeUI): boolean {\n\t\t// check if this node is a descendant of `dstNode`\n\t\tlet ref: NodeUI | undefined = this\n\t\twhile (ref) {\n\t\t\tif (ref === dstNode) {\n\t\t\t\treturn true\n\t\t\t} else {\n\t\t\t\tref = ref.parent\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\t/**\n\t * Update the node model with the callback function.\n\t * @param {Function} callback - The callback function to update the node model.\n\t */\n\tupdateModel(callback: (model: ModelSpec) => boolean | undefined) {\n\t\tconst { model } = this.spec\n\t\tif (callback(model)) {\n\t\t\tthis.$dim = null\n\t\t\tthis.sharedConfig.emit(EVENT.NODE.UPDATED, {\n\t\t\t\tnodes: [this],\n\t\t\t\ttype: 'update',\n\t\t\t})\n\t\t}\n\t}\n\tgetHeading(): Heading {\n\t\treturn geom.heading(new Point(this.x, this.y))\n\t}\n\t/**\n\t * absolute offset\n\t * @returns offset from root to this node\n\t */\n\toffset(): Point {\n\t\tlet ref: NodeUI = this\n\t\tconst p = new Point(0, 0)\n\t\twhile (ref) {\n\t\t\tp.x += ref.x\n\t\t\tp.y += ref.y\n\t\t\tref = ref.parent\n\t\t}\n\t\treturn p\n\t}\n\tsetOffset({ x, y }: Point) {\n\t\tif (this.isRoot()) {\n\t\t\treturn\n\t\t}\n\t\tconst poff = this.parent!.offset()\n\t\tthis.setPos(x - poff.x, y - poff.y)\n\t}\n\t/**\n\t * relative pos from the direct parent\n\t * @returns (x, y) from the direct parent\n\t */\n\tgetPos(): Point {\n\t\treturn new Point(this.x, this.y) // { x: this.x, y: this.y };\n\t}\n\t/**\n\t * Sets the position of the node\n\t *\n\t * @param {number} x - The x-coordinate of the position\n\t * @param {number} y - The y-coordinate of the position\n\t * @param {boolean} update - Flag indicating whether to repaint viewport\n\t */\n\tsetPos(x: number, y: number, update: boolean = true) {\n\t\tthis.spec.view.x = x\n\t\tthis.spec.view.y = y\n\t\tif (update) {\n\t\t\tthis.repaint()\n\t\t}\n\t}\n\tisEditingState() {\n\t\treturn this.editing\n\t}\n\t/**\n\t * Set the editing state of the node.\n\t *\n\t * @param {boolean} editing - The new editing state to set\n\t */\n\tsetEditingState(editing: boolean) {\n\t\tthis.editing = editing\n\t\tthis.repaint()\n\t}\n\t/**\n\t * Check if the node is a root node.\n\t *\n\t * @return {boolean} Indicates if the node is a root node.\n\t */\n\tisRoot(): boolean {\n\t\treturn this.spec.root\n\t}\n\t/**\n\t * Check if the node is a leaf node.\n\t *\n\t * @return {boolean} Indicates if the node is a leaf node.\n\t */\n\tisLeaf(): boolean {\n\t\treturn this.subs.length === 0\n\t}\n\n\t/**\n\t * Iterates over the children nodes and invokes a callback function for each child.\n\t *\n\t * @param {(child: NodeUI, parent: NodeUI) => void} callback - callback function to accept child node.\n\t */\n\tchildren(callback: (child: NodeUI, parent: NodeUI) => void) {\n\t\tthis.subs.forEach(child => callback(child, this))\n\t}\n\t/**\n\t * Searches this node and its descendants for the first node that satisfies the provided testing function.\n\t *\n\t * @param {(node: NodeUI) => boolean} predicate - takes a node as an argument and\n\t * returns a boolean indicating whether the node is the one being searched for.\n\t * @return {NodeUI} The first node in the tree that passes the test, or `undefined` if no node passes the test.\n\t */\n\tfind(predicate: (node: NodeUI) => boolean): NodeUI {\n\t\t// predicate 반환 타입이 boolean인지 NodeUI인지 확인필요함.\n\t\tif (predicate(this)) {\n\t\t\treturn this\n\t\t}\n\t\tlet found = undefined\n\t\tfor (let i = 0; i < this.subs.length; i++) {\n\t\t\tif ((found = this.subs[i].find(predicate))) {\n\t\t\t\treturn found\n\t\t\t}\n\t\t}\n\t\treturn undefined\n\t}\n\n\t/**\n\t * Adds a child node to this node.\n\t * If the child node is already a child of another node, it is removed from that node before adding it.\n\t *\n\t * @param childUI Child node to be added to this node.\n\t * @return The previous parent of the child node, or `null` if it didn't have a parent before.\n\t */\n\taddChild(childUI: NodeUI): NodeUI | null {\n\t\tconst prevParent = childUI.parent\n\t\tif (prevParent && prevParent !== this) {\n\t\t\tprevParent.removeChild(childUI)\n\t\t}\n\n\t\tchildUI.parent = this\n\t\tthis.subs.push(childUI)\n\n\t\tconst canvasUI = this.sharedConfig.getCanvas()\n\t\tcanvasUI.moveNode(childUI)\n\n\t\treturn prevParent\n\t}\n\t/**\n\t * Removes a child node from this node.\n\t *\n\t * @param childUI Child node to be removed from this node.\n\t * @return The node that was removed, or `null` if the given node is not a child of this node.\n\t */\n\tremoveChild(childUI: NodeUI): NodeUI | null {\n\t\tif (childUI.parent !== this) {\n\t\t\t// not a child node\n\t\t\treturn null\n\t\t}\n\t\tconst pos = this.subs.findIndex(node => node.uid === childUI.uid)\n\t\tif (pos === -1) {\n\t\t\t// not a child node\n\t\t\treturn null\n\t\t}\n\t\tconst deletedNodes = this.subs.splice(pos, 1)\n\t\tdeletedNodes.forEach(node => (node.parent = undefined)) // clear ref to parent(this)\n\t\treturn deletedNodes[0]\n\t}\n\t/**\n\t * Get the first child node of this node.\n\t * @return The first child node, or `undefined` if this node has no children.\n\t */\n\tfirstChild(): NodeUI | undefined {\n\t\treturn this.subs[0]\n\t}\n\t/**\n\t * Get the last child node of this node.\n\t * @return The last child node, or `undefined` if this node has no children.\n\t */\n\tlastChild(): NodeUI | undefined {\n\t\t// returns the last child node of this node, or undefined if no children\n\t\tif (this.subs.length === 0) {\n\t\t\treturn undefined\n\t\t}\n\t\treturn this.subs[this.subs.length - 1]\n\t}\n\t/**\n\t * change folding state\n\t * @param folding if true, children of this node are hidden, else visible\n\t * @returns true if folding state is changed, false if not changed\n\t */\n\tsetFolding(folding: boolean) {\n\t\tif (this.folding === folding) {\n\t\t\treturn false\n\t\t}\n\t\t// this.folding = folding;\n\t\tif (folding) {\n\t\t\tthis.spec.view.folding = true\n\t\t} else {\n\t\t\tdelete this.spec.view.folding\n\t\t}\n\t\tthis.repaint()\n\t\treturn true\n\t}\n\t/**\n\t * check if the node is folded(children hidden) or not\n\t * @return true if the node is folded, false if not folded\n\t */\n\tisFolded() {\n\t\treturn this.folding\n\t}\n\trepaint() {\n\t\tconst canvasUI = this.sharedConfig.getCanvas()\n\t\tcanvasUI.drawNode(this)\n\t}\n\tstatic build(spec: NodeSpec, config: Configuration) {\n\t\tspec.root = true\n\t\treturn new NodeUI(spec, config)\n\t}\n}\n","/**\n * Default layout manager\n * It does nothing, keeping all nodes in their position.\n */\n\nimport { type NodeLayoutContext } from \"..\";\nimport { type NodeUI } from \"../../node/node-ui\";\nimport { INodeLayoutManager } from \"../node-layout-manager\";\n\nexport class DefaultNodeLayout implements INodeLayoutManager {\n  constructor(readonly layoutContext: NodeLayoutContext) {}\n  get name() {\n    return \"DEFAULT\";\n  }\n  doLayout(nodeUI: NodeUI) {}\n  setPosition() {}\n}\n","import type { PositionParam, LayoutParam, NodeLayoutContext } from \"..\";\nimport { type NodeUI } from \"../../node/node-ui\";\nimport { type INodeLayoutManager } from \"../node-layout-manager\";\n\n/**\n *\n */\nexport class XAxisNodeLayout implements INodeLayoutManager {\n  constructor(readonly layoutContext: NodeLayoutContext) {}\n  get name() {\n    return \"X-AXIS\";\n  }\n  /**\n   * reflective layout manager relative to parent\n   *\n   */\n  private _reverseXPos(node: NodeUI, context: LayoutParam) {\n    const { x, y } = node;\n    node.setPos(-x, y);\n    const manager = this.layoutContext.getLayoutManager(node.layout);\n    manager.doLayout(node, context);\n  }\n  doLayout = (nodeUI: NodeUI, context: LayoutParam) => {\n    const { dir } = context;\n    if (!dir) {\n      return;\n    }\n    if (dir.updated(\"LR\") || dir.updated(\"RL\")) {\n      nodeUI.children((childUI: NodeUI) => {\n        this._reverseXPos(childUI, context);\n      });\n    }\n  };\n  setPosition = (nodeUI: NodeUI, context: PositionParam) => {\n    const { baseNode } = context;\n    const heading = baseNode\n      ? baseNode.getHeading()\n      : nodeUI.parent.getHeading();\n    const rightSide = heading.cwy <= 180;\n    let x = 0;\n    let y = 0;\n    let halfWidth = nodeUI.dimension(true).width / 2;\n    if (baseNode) {\n      const rect = baseNode.dimension(true);\n      if (rightSide) {\n        x = rect.left + halfWidth;\n      } else {\n        x = rect.right - halfWidth;\n      }\n      y = rect.bottom + 20;\n    } else {\n      const rect = nodeUI.parent.dimension(true);\n      const offset = context.offset + halfWidth;\n      if (rightSide) {\n        x = rect.width / 2 + offset;\n      } else {\n        x = -rect.width / 2 - offset;\n      }\n    }\n\n    // const { baseNode, rect } = context;\n\n    nodeUI.setPos(x, y);\n  };\n}\n","import type { LayoutParam, NodeLayoutContext, PositionParam } from \"..\";\nimport { type NodeUI } from \"../../node/node-ui\";\nimport { INodeLayoutManager } from \"../node-layout-manager\";\n\nexport class YAxisNodeLayout implements INodeLayoutManager {\n  constructor(readonly layoutContext: NodeLayoutContext) {}\n  get name() {\n    return \"Y-AXIS\";\n  }\n  /**\n   * reflective layout manager relative to parent\n   *\n   */\n  _reverseYPos(node: NodeUI, context: LayoutParam) {\n    const { x, y } = node;\n    node.setPos(x, -y);\n    const manager = this.layoutContext.getLayoutManager(node.layout);\n    manager.doLayout(node, context);\n  }\n  doLayout = (nodeUI: NodeUI, context: LayoutParam) => {\n    const { dir } = context;\n    if (!dir) {\n      return;\n    }\n    if (dir.updated(\"TB\") || dir.updated(\"BT\")) {\n      nodeUI.children((childUI: NodeUI) => {\n        this._reverseYPos(childUI, context);\n      });\n    }\n  };\n  setPosition = (nodeUI: NodeUI, context: PositionParam) => {\n    const { baseNode } = context;\n    const heading = baseNode\n      ? baseNode.getHeading()\n      : nodeUI.parent.getHeading();\n    const topSide = heading.ccwx <= 180;\n    let x = 0;\n    let y = 0;\n    const nodeRect = nodeUI.dimension(true);\n    let halfHeight = nodeRect.height / 2;\n    if (baseNode) {\n      const rect = baseNode.dimension(true);\n      x = rect.cx + (rect.width + nodeRect.width + context.offset) / 2;\n      if (topSide) {\n        y = rect.bottom - halfHeight;\n      } else {\n        y = rect.top + halfHeight;\n      }\n    } else {\n      const rect = nodeUI.parent.dimension(true);\n      const offset = context.offset + halfHeight;\n      x = 0;\n      if (topSide) {\n        y = -rect.height / 2 - offset;\n      } else {\n        y = rect.height / 2 + offset;\n      }\n    }\n    nodeUI.setPos(x, y);\n  };\n}\n","import type { LayoutParam, NodeLayoutContext, PositionParam } from \"..\";\nimport { type NodeUI } from \"../../node/node-ui\";\nimport { INodeLayoutManager } from \"../node-layout-manager\";\n// import xLayout from \"./axis-x-layout\";\n// import yLayout from \"./axis-y-layout\";\n\nexport class XYAxisNodeLayout implements INodeLayoutManager {\n  constructor(readonly layoutContext: NodeLayoutContext) {}\n  get name() {\n    return \"XY-AXIS\";\n  }\n  doLayout(nodeUI: NodeUI, context: LayoutParam) {\n    const { dir } = context;\n    if (!dir) {\n      return;\n    }\n    const xLayout = this.layoutContext.getLayoutManager({ type: \"X-AXIS\" });\n    xLayout.doLayout(nodeUI, context);\n    const yLayout = this.layoutContext.getLayoutManager({ type: \"Y-AXIS\" });\n    yLayout.doLayout(nodeUI, context);\n  }\n  setPosition = (nodeUI: NodeUI, context: PositionParam) => {\n    const xLayout = this.layoutContext.getLayoutManager({ type: \"X-AXIS\" });\n    xLayout.setPosition(nodeUI, context);\n  };\n}\n","import { DefaultNodeLayout } from \"./node/default-layout\";\nimport { XAxisNodeLayout } from \"./node/axis-x-layout\";\nimport { YAxisNodeLayout } from \"./node/axis-y-layout\";\nimport { XYAxisNodeLayout } from \"./node/axis-xy-layout\";\nimport type { NodeUI } from \"../node/node-ui\";\nimport type { NodeLayoutType, NodeLayout } from \"../node/node-type\";\nimport { INodeLayoutManager } from \"./node-layout-manager\";\nimport type { Direction } from \"../direction\";\nimport type { Configuration } from \"../config\";\n\nexport type { INodeLayoutManager };\nexport type LayoutParam = { dir: Direction };\nexport type PositionParam = { baseNode: NodeUI; offset: number };\nexport class NodeLayoutContext {\n  private _layoutMap = new Map<NodeLayoutType, INodeLayoutManager>();\n  constructor(readonly config: Configuration) {}\n  get canvas() {\n    return this.config.getCanvas();\n  }\n  registerLayoutManager(layout: INodeLayoutManager) {\n    this._layoutMap.set(layout.name, layout);\n  }\n  getLayoutManager(layout: NodeLayout): INodeLayoutManager {\n    const layoutName = layout ? layout.type : \"DEFAULT\";\n    return this._layoutMap.get(layoutName);\n  }\n  setPosition(nodeUI: NodeUI, context: PositionParam) {\n    const { layout } = nodeUI;\n    const manager = this.getLayoutManager(layout);\n    manager.setPosition(nodeUI, context);\n  }\n  layout(nodeUI: NodeUI, context: LayoutParam) {\n    const { layout } = nodeUI;\n    const manager = this.getLayoutManager(layout);\n    manager.doLayout(nodeUI, context);\n  }\n  listLayoutManagers(): INodeLayoutManager[] {\n    return [...this._layoutMap.values()];\n  }\n}\n\nexport const installDefaultLayoutManagers = (ctx: NodeLayoutContext) => {\n  ctx.registerLayoutManager(new DefaultNodeLayout(ctx));\n  ctx.registerLayoutManager(new XAxisNodeLayout(ctx));\n  ctx.registerLayoutManager(new YAxisNodeLayout(ctx));\n  ctx.registerLayoutManager(new XYAxisNodeLayout(ctx));\n};\n","import { INodeEditor, UserDefinedEditor } from \"..\";\nimport { NodeEditingContext } from \"../node-editing-context\";\nimport type { ModelSpec } from \"../node-type\";\n\nexport class NodeEditingDelegate<T> implements INodeEditor {\n  constructor(\n    readonly ctx: NodeEditingContext,\n    readonly delegate: UserDefinedEditor<T>\n  ) {}\n  get name() {\n    return this.delegate.name;\n  }\n  private _pickRenderer(): INodeEditor {\n    const { ctx } = this;\n    const { text, iconBadge, thumbnail } = this.delegate;\n    let name: string = \"text\";\n    if (text) {\n      name = \"text\";\n    } else if (iconBadge) {\n      name = \"icon-badge\";\n    } else if (thumbnail) {\n      name = \"thumbnail\";\n    }\n    return ctx.getEditor(name);\n  }\n\n  showEditor(model: ModelSpec, parentEl: HTMLElement): HTMLElement {\n    const editor = this._pickRenderer();\n    return editor.showEditor(model, parentEl);\n  }\n}\n","import { INodeEditor } from \"..\";\nimport type { NodeEditingContext } from \"../node-editing-context\";\nimport type { ModelSpec } from \"../node-type\";\n\nconst template = {\n  editor: `<div class=\"mwd-node-editor thumbnail-editor\">\n    <div><input type=\"text\" data-icon></div>\n    <div><textarea data-text></textarea></div>\n    <div><button data-close>CLOSE</button></div>\n</div>`,\n};\nexport class IconBadgeEditor implements INodeEditor {\n  constructor(readonly ctx: NodeEditingContext) {}\n  get name() {\n    return \"icon-badge\";\n  }\n  showEditor(model: ModelSpec, parentEl: HTMLElement): HTMLElement {\n    const { dom } = this.ctx.config;\n\n    const iconBadge = model[\"icon-badge\"];\n    const $editor = this.ctx.parse(template.editor);\n    {\n      const $icon = dom.findOne<HTMLInputElement>($editor, \"[data-icon]\");\n      $icon.value = iconBadge.icon;\n      dom.event.input(\n        $icon,\n        (e) => {\n          const path = (e.target as HTMLTextAreaElement).value.trim();\n          this.ctx.updateModel(() => {\n            iconBadge.icon = path;\n            return false;\n          });\n        },\n        { debouce: 500 }\n      );\n    }\n\n    {\n      const $textarea = dom.findOne(\n        $editor,\n        \"[data-text]\"\n      ) as HTMLTextAreaElement;\n      $textarea.value = iconBadge.text;\n      dom.event.input(\n        $textarea,\n        (e) => {\n          const text = (e.target as HTMLTextAreaElement).value.trim();\n          this.ctx.updateModel(() => {\n            iconBadge.text = text;\n            return false;\n          });\n        },\n        { debouce: 500 }\n      );\n    }\n    {\n      const $close = dom.findOne($editor, \"[data-close]\");\n      dom.event.click($close, () => {\n        this.ctx.close();\n      });\n    }\n    parentEl.appendChild($editor);\n    return $editor;\n  }\n}\n","import { INodeEditor } from \"..\";\nimport type { NodeEditingContext } from \"../node-editing-context\";\nimport type { ModelSpec } from \"../node-type\";\n\nconst template = {\n  editor: `<div class=\"mwd-node-editor link-editor\">\n    <div><input type=\"text\" data-url></div>\n    <div><input type=\"text\" data-body></div>\n    <div><button data-submit>UPDATE</button></div>\n</div>`,\n};\n\nexport class LinkEditor implements INodeEditor {\n  constructor(readonly ctx: NodeEditingContext) {}\n  get name() {\n    return \"link\";\n  }\n  showEditor(model: ModelSpec, parentEl: HTMLElement): HTMLElement {\n    const { dom } = this.ctx.config;\n    const $editor = this.ctx.parse(template.editor);\n    const $url = dom.findOne($editor, \"[data-url]\") as HTMLInputElement;\n    const $body = dom.findOne($editor, \"[data-body]\") as HTMLInputElement;\n    {\n      const { url, body } = model.link;\n      $url.value = url;\n      $body.value = body.text || url;\n    }\n    parentEl.appendChild($editor);\n    dom.event.click($editor, (e) => {\n      const target = e.target as HTMLElement;\n      if (dom.is(target, \"[data-submit]\")) {\n        this.ctx.updateModel((model) => {\n          const { link } = model;\n          link.url = $url.value;\n          link.body.text = $body.value;\n          return true;\n        });\n      }\n    });\n    return $editor;\n  }\n}\n","import { INodeEditor } from \"..\";\nimport { type NodeEditingContext } from \"../node-editing-context\";\nimport { type ModelSpec } from \"../node-type\";\n\nconst template = {\n  editor: `<div class=\"mwd-node-editor plain-text-editbox\">\n  <textarea value=\"\"></textarea>\n  <button data-cmd=\"save\" data-submit>SAVE</button>\n</div>`,\n};\nexport class PlainTextEditor implements INodeEditor {\n  get name() {\n    return \"text\";\n  }\n  constructor(readonly ctx: NodeEditingContext) {}\n  showEditor(model: ModelSpec, parentEl: HTMLElement): HTMLElement {\n    const { dom } = this.ctx.config;\n    const $editorEl = this.ctx.parse(template.editor);\n    const textArea = this.ctx.query(\n      $editorEl,\n      \"textarea\"\n    ) as HTMLTextAreaElement;\n\n    textArea.value = model.text;\n    dom.css(textArea, { width: 120, height: 40 });\n    dom.event.click($editorEl, (e) => {\n      if ((e.target as HTMLElement).dataset.cmd === \"save\") {\n        this.ctx.updateModel((model: ModelSpec) => {\n          model.text = textArea.value.trim();\n          return true;\n        });\n      }\n    });\n    parentEl.append($editorEl);\n    return $editorEl;\n  }\n}\n","import { INodeEditor } from \"..\";\nimport type { NodeEditingContext } from \"../node-editing-context\";\nimport { ThumbnailFillMode, type ModelSpec } from \"../node-type\";\n\nconst template = {\n  editor: `\n  <div class=\"mwd-node-editor thumnail-editor\">\n    <div class=\"inline-mwd-form\">\n      <input type=\"text\" data-form-size>\n    </div>\n    <div class=\"mode\">\n      <label><input type=\"radio\" name=\"mode\" data-mode=\"cover\">Cover</label>\n      <label><input type=\"radio\" name=\"mode\" data-mode=\"contain\">Contain</label>\n    </div>\n    <div class=\"path-form\">\n        <textarea></textarea>\n    </div>\n    <div class=\"\"><button data-close>CLOSE</button></div>\n  </div>`,\n};\nexport class ThumbnailEditor implements INodeEditor {\n  constructor(readonly ctx: NodeEditingContext) {}\n  get name() {\n    return \"thumbnail\";\n  }\n  showEditor(model: ModelSpec, parentEl: HTMLElement): HTMLElement {\n    if (!model.thumbnail) {\n      throw new Error(\"EDITOR_ERROR:not a thumbnail node\");\n    }\n    const { dom } = this.ctx.config;\n    const { mode, path } = model.thumbnail;\n\n    const $editorEl = this.ctx.parse(template.editor);\n    const $inputEl = this.ctx.query<HTMLInputElement>($editorEl, \"input\");\n\n    $inputEl.value = `${model.thumbnail.size}`;\n    dom.event.input(\n      $inputEl,\n      (e) => {\n        const value = (e.target as HTMLInputElement).value.trim();\n        dom.valid.number(value).then((num) => {\n          this.ctx.updateModel((model) => {\n            model.thumbnail.size = num;\n            return false;\n          });\n        });\n      },\n      { debouce: 500 }\n    );\n    const $mode = this.ctx.query<HTMLInputElement>(\n      $editorEl,\n      `[data-mode=\"${mode}\"]`\n    );\n    $mode.checked = true;\n\n    dom.event.change($editorEl, (e) => {\n      const { mode } = (e.target as HTMLElement).dataset;\n      if (mode) {\n        this.ctx.updateModel((model: ModelSpec) => {\n          model.thumbnail.mode = mode as ThumbnailFillMode;\n          return false;\n        });\n      }\n    });\n    const $textArea = this.ctx.query<HTMLTextAreaElement>(\n      $editorEl,\n      \"textarea\"\n    );\n    $textArea.value = path;\n    dom.event.input(\n      $textArea,\n      (e) => {\n        const url = (e.target as HTMLTextAreaElement).value.trim();\n        dom.valid.path(url).then((url) => {\n          this.ctx.updateModel((model: ModelSpec) => {\n            model.thumbnail.path = url;\n            return false;\n          });\n        });\n      },\n      { debouce: 500 }\n    );\n    const $close = this.ctx.query<HTMLButtonElement>($editorEl, \"[data-close]\");\n    dom.event.click($close, () => {\n      this.ctx.close();\n    });\n    parentEl.appendChild($editorEl);\n    return $editorEl;\n  }\n}\n","import { INodeEditor, type UserDefinedEditor } from '.'\nimport { NodeEventArg, ViewportEventArg } from '../../mindwired-event'\nimport { EVENT } from '../../service/event-bus'\nimport type { CanvasUI } from '../canvas-ui'\nimport type { DataSourceFactory } from '../datasource'\nimport { NodeEditingDelegate } from './editor/editor-delegate'\nimport { IconBadgeEditor } from './editor/icon-badge-editor'\nimport { LinkEditor } from './editor/link-editor'\nimport { PlainTextEditor } from './editor/plain-text-editor'\nimport { ThumbnailEditor } from './editor/thumbnail-editor'\nimport { ImageSizeSpec, ModelSpec } from './node-type'\nimport type { NodeUI } from './node-ui'\n\nexport const installDefaultEditors = (ctx: NodeEditingContext) => {\n\tctx.registerEditor(new PlainTextEditor(ctx))\n\tctx.registerEditor(new IconBadgeEditor(ctx))\n\tctx.registerEditor(new ThumbnailEditor(ctx))\n\tctx.registerEditor(new LinkEditor(ctx))\n}\nexport class NodeEditingContext {\n\tdispose() {\n\t\tthis.node = undefined\n\t}\n\t/**\n\t * current editing node\n\t */\n\tnode: NodeUI | undefined\n\tprivate _editorMap = new Map<string, INodeEditor>()\n\tconstructor(\n\t\treadonly canvas: CanvasUI,\n\t\treadonly datasourceFactory: DataSourceFactory\n\t) {\n\t\tthis.node = undefined\n\t\tthis.config.listen(EVENT.VIEWPORT.CLICKED, (_: ViewportEventArg) => {\n\t\t\tthis.close()\n\t\t})\n\t\tthis.config.listen(EVENT.NODE.SELECTED, ({ nodes }: NodeEventArg) => {\n\t\t\tif (this.node !== nodes[0]) {\n\t\t\t\tthis.close()\n\t\t\t}\n\t\t})\n\t}\n\tget config() {\n\t\treturn this.canvas.config\n\t}\n\tisEditing() {\n\t\treturn !!this.node\n\t}\n\tregisterEditor(editor: INodeEditor) {\n\t\tthis._editorMap.set(editor.name, editor)\n\t}\n\tregisterCustomEditor<T>(delegate: UserDefinedEditor<T>) {\n\t\tconst customEditor = new NodeEditingDelegate(this, delegate)\n\t\tthis.registerEditor(customEditor)\n\t}\n\tgetEditor(editorName: string) {\n\t\treturn this._editorMap.get(editorName)\n\t}\n\tedit(nodeUI: NodeUI) {\n\t\tif (this.node) {\n\t\t\tthis.close()\n\t\t}\n\t\tlet name: string = undefined\n\t\tconst { model } = nodeUI\n\t\tif (model.text) {\n\t\t\tname = 'text'\n\t\t} else if (model['icon-badge']) {\n\t\t\tname = 'icon-badge'\n\t\t} else if (model.thumbnail) {\n\t\t\tname = 'thumbnail'\n\t\t} else if (model.link) {\n\t\t\tname = 'link'\n\t\t} else if (model.provider) {\n\t\t\tconst ds = this.datasourceFactory.findDataSourceByKey(model.provider.key)\n\t\t\tif (ds) {\n\t\t\t\tname = this.datasourceFactory.getEditorName(ds.id)\n\t\t\t}\n\t\t}\n\t\tconst editor = this._editorMap.get(name)\n\t\tif (editor) {\n\t\t\tthis.node = nodeUI\n\t\t\tthis.node.setEditingState(true)\n\t\t\tthis.canvas.showNodeEditor(this.node, editor)\n\t\t}\n\n\t\t// this.datasourceFactory.findDataSourceByData()\n\t}\n\tparse(htmlTemplate: string) {\n\t\t// FIXME rendering context와 코드 중복\n\t\treturn this.config.dom.parseTemplate(htmlTemplate)\n\t}\n\tquery<T extends HTMLElement>(el: HTMLElement, cssSelector: string): T {\n\t\treturn this.config.dom.findOne(el, cssSelector) as T\n\t}\n\tqueryAll<T extends HTMLElement>(el: HTMLElement, cssSelector: string): T[] {\n\t\treturn this.config.dom.findAll<T>(el, [cssSelector])\n\t}\n\tupdateModel(callback: (model: ModelSpec) => boolean) {\n\t\tlet closing = false\n\t\tthis.node.updateModel(model => {\n\t\t\tclosing = callback(model)\n\t\t\treturn true\n\t\t})\n\t\tif (closing) {\n\t\t\tthis.close()\n\t\t}\n\t}\n\tclose() {\n\t\tif (this.node) {\n\t\t\tthis.node.setEditingState(false)\n\t\t\tthis.canvas.hideNodeEditor(this.node)\n\t\t}\n\t\tthis.node = undefined\n\t}\n\tnormalizeImageSize(size: ImageSizeSpec): { width: string; height: string } {\n\t\tlet width: string\n\t\tlet height: string\n\t\tif (Array.isArray(size)) {\n\t\t\tconst [w, h] = size\n\t\t\twidth = `${w}px`\n\t\t\theight = h === undefined ? 'auto' : `${h}px`\n\t\t} else if (typeof size === 'number') {\n\t\t\twidth = height = `${size}px`\n\t\t} else {\n\t\t\twidth = height = 'auto'\n\t\t}\n\t\treturn { width, height }\n\t}\n}\n","import { ISnapLineResolver } from \"./snap-target-resolver\";\n\nexport class CompositeSnapResolver implements ISnapLineResolver {\n  constructor(readonly resolvers: ISnapLineResolver[]) {}\n  resolveLines(hLines: Set<number>, vLines: Set<number>): void {\n    this.resolvers.forEach((resolver) => {\n      resolver.resolveLines(hLines, vLines);\n    });\n  }\n}\n","import type { CanvasUI } from \"@/components/canvas-ui\";\nimport { ISnapLineResolver } from \"./snap-target-resolver\";\nimport type { NodeUI } from \"@/components/node\";\n\nconst captureSnapLines = (\n  nodes: NodeUI[],\n  node: NodeUI,\n  hSnaps: Set<number>,\n  vSnaps: Set<number>,\n  canvas: CanvasUI\n) => {\n  if (nodes.includes(node)) {\n    return;\n  }\n  const dim = canvas.getNodeDimension(node);\n  // top, center, bottom\n  hSnaps.add(dim.y);\n  hSnaps.add(dim.cy);\n  hSnaps.add(dim.b);\n  // left, center, right\n  vSnaps.add(dim.x);\n  vSnaps.add(dim.cx);\n  vSnaps.add(dim.r);\n  if (node.isFolded()) {\n    return;\n  }\n  node.subs.forEach((child) => {\n    captureSnapLines(nodes, child, hSnaps, vSnaps, canvas);\n  });\n};\n\n/**\n * It captures snap lines from all nodes(except the starting nodes and their descendants)\n */\nexport class DefaultTargetResolver implements ISnapLineResolver {\n  constructor(\n    private startingNode: NodeUI,\n    private nodes: NodeUI[],\n    private readonly canvas: CanvasUI\n  ) {}\n  resolveLines(hLines: Set<number>, vLines: Set<number>): void {\n    captureSnapLines(\n      this.nodes,\n      this.startingNode,\n      hLines,\n      vLines,\n      this.canvas\n    );\n  }\n}\n","import type { NodeUI } from \"@/components/node\";\nimport { ISnapLineResolver } from \"./snap-target-resolver\";\nimport type { CanvasUI } from \"@/components/canvas-ui\";\n\nconst walkUpward = (\n  node: NodeUI,\n  distance: number,\n  hLines: Set<number>,\n  vLines: Set<number>,\n  canvas: CanvasUI,\n  visited: NodeUI[]\n) => {\n  if (node === undefined) {\n    // called from root node\n    return;\n  }\n  if (visited.includes(node)) {\n    return;\n  }\n  if (distance === 0) {\n    return;\n  }\n  const dim = canvas.getNodeDimension(node);\n  // top, center, bottom\n  hLines.add(dim.y);\n  hLines.add(dim.cy);\n  hLines.add(dim.b);\n  // left, center, right\n  vLines.add(dim.x);\n  vLines.add(dim.cx);\n  vLines.add(dim.r);\n  walkUpward(node.parent, distance - 1, hLines, vLines, canvas, visited);\n  if (node.isFolded()) {\n    return;\n  }\n  node.subs.forEach((child) => {\n    walkDownward(child, distance - 1, hLines, vLines, canvas, visited);\n  });\n};\nconst walkDownward = (\n  node: NodeUI,\n  distance: number,\n  hLines: Set<number>,\n  vLines: Set<number>,\n  canvas: CanvasUI,\n  visited: NodeUI[]\n) => {\n  if (visited.includes(node)) {\n    return;\n  }\n  if (distance === 0) {\n    return;\n  }\n  const dim = canvas.getNodeDimension(node);\n  // top, center, bottom\n  hLines.add(dim.y);\n  hLines.add(dim.cy);\n  hLines.add(dim.b);\n  // left, center, right\n  vLines.add(dim.x);\n  vLines.add(dim.cx);\n  vLines.add(dim.r);\n  if (node.isFolded()) {\n    return;\n  }\n  node.subs.forEach((child) => {\n    walkDownward(child, distance - 1, hLines, vLines, canvas, visited);\n  });\n};\n/**\n * Distance based snap line resolver\n *\n * ```\n * [configuration]\n *   ui: {\n *     snap: {\n *       enabled: true,\n *       target: [{ distance: 2 }],\n *     }\n *   }\n * ```\n * Setting `{distance: 2}` searchs snap lines from nodes within the distance 2(except the starting nodes and their descendants).\n */\nexport class DistanceBasedSnapResolver implements ISnapLineResolver {\n  constructor(\n    readonly staringNodes: NodeUI[],\n    readonly canvas: CanvasUI,\n    readonly distance: number\n  ) {}\n  resolveLines(hLines: Set<number>, vLines: Set<number>): void {\n    const visited: NodeUI[] = [...this.staringNodes];\n    this.staringNodes.forEach((node) => {\n      walkUpward(\n        node.parent,\n        this.distance,\n        hLines,\n        vLines,\n        this.canvas,\n        visited\n      );\n    });\n  }\n}\n","import { SnapToEntitySetting, UISetting } from \"../../setting\";\nimport type { Configuration } from \"../config\";\nimport type { NodeUI } from \"../node/node-ui\";\nimport { CompositeSnapResolver } from \"./snap/composite-snap-resolver\";\nimport { DefaultTargetResolver } from \"./snap/default-snap-resolver\";\nimport { DistanceBasedSnapResolver } from \"./snap/distance-snap-resolver\";\nimport { ISnapLineResolver } from \"./snap/snap-target-resolver\";\n\nconst abs = (a: number) => Math.abs(a);\nconst captureNearest = (\n  lines: number[],\n  value: number,\n  min: { idx: number; gap: number },\n  limit: number\n) => {\n  for (let k = 0; k < lines.length; k++) {\n    const b = lines[k] - value;\n    const vb = abs(b);\n    if (vb > limit) {\n      continue;\n    }\n    if (vb < abs(min.gap)) {\n      min.idx = k;\n      min.gap = b;\n    }\n  }\n};\nconst lineStyling = (\n  ctx: CanvasRenderingContext2D,\n  ui: UISetting,\n  dir: \"horizontal\" | \"vertical\"\n) => {\n  const snap = ui.snap as SnapToEntitySetting;\n  ctx.strokeStyle = snap.color[dir];\n  ctx.lineWidth = snap.width || 0.4;\n  if (snap.dash) {\n    ctx.setLineDash(snap.dash);\n  }\n};\nexport class AlignmentContext {\n  activeNodes: NodeUI[];\n  snaps: { hLines: Set<number>; vLines: Set<number> };\n  constructor(readonly config: Configuration) {}\n  private _resolveSnapTarget(rootNode: NodeUI): ISnapLineResolver {\n    const { snap } = this.config.ui;\n    if (snap === false) {\n      return undefined;\n    }\n    const setting = snap as SnapToEntitySetting;\n    if (setting.enabled === false) {\n      return undefined;\n    }\n    const { target } = setting;\n    const canvas = this.config.getCanvas();\n    if (target === undefined || target.length === 0) {\n      return new DefaultTargetResolver(rootNode, [...this.activeNodes], canvas);\n    }\n    const resolvers = target\n      .map((rule) => {\n        if (rule.distance) {\n          return new DistanceBasedSnapResolver(\n            this.activeNodes,\n            canvas,\n            rule.distance\n          );\n        } else {\n          return undefined;\n        }\n      })\n      .filter((resolver) => resolver !== undefined);\n    return new CompositeSnapResolver(resolvers);\n  }\n  turnOn(rootNode: NodeUI, nodes: NodeUI[]) {\n    if (!nodes || nodes.length === 0 || !this.config.snapEnabled) {\n      return;\n    }\n    this.activeNodes = [...nodes];\n    const snapTargetResolver = this._resolveSnapTarget(rootNode);\n    if (snapTargetResolver === undefined) {\n      return;\n    }\n    const vLines = new Set<number>(); // [x in (x,0), (x,H)]\n    const hLines = new Set<number>(); // [y in (0,y), (W,y)]\n\n    snapTargetResolver.resolveLines(hLines, vLines);\n    this.snaps = { hLines, vLines };\n  }\n  turnOff() {\n    this.snaps = null;\n    this.activeNodes = undefined;\n  }\n  doAlign() {\n    if (!this.snaps) {\n      return;\n    }\n    const { snapSetting } = this.config;\n    const limit = snapSetting.limit;\n    const canvas = this.config.getCanvas();\n    canvas.clear();\n\n    const dim = canvas.getAbsoluteDimensions(this.activeNodes);\n    const vLines = [...this.snaps.vLines.values()].filter(\n      (x) =>\n        Math.abs(dim.x - x) <= limit ||\n        Math.abs(dim.r - x) <= limit ||\n        Math.abs(dim.cx - x) <= limit\n    );\n    const hLines = [...this.snaps.hLines.values()].filter(\n      (y) =>\n        Math.abs(dim.y - y) <= limit ||\n        Math.abs(dim.b - y) <= limit ||\n        Math.abs(dim.cy - y) <= limit\n    );\n\n    const delta = { x: 0, y: 0 };\n    if (vLines.length > 0) {\n      const min = { idx: 0, gap: vLines[0] - dim.cx };\n      captureNearest(vLines, dim.cx, min, limit);\n      captureNearest(vLines, dim.x, min, limit);\n      captureNearest(vLines, dim.r, min, limit);\n      delta.x = min.gap;\n      canvas.drawVLines([vLines[min.idx]], (ctx) =>\n        lineStyling(ctx, this.config.ui, \"vertical\")\n      );\n    }\n\n    if (hLines.length > 0) {\n      const min = { idx: 0, gap: hLines[0] - dim.cy };\n      captureNearest(hLines, dim.cy, min, limit);\n      captureNearest(hLines, dim.y, min, limit);\n      captureNearest(hLines, dim.b, min, limit);\n      delta.y = min.gap;\n\n      canvas.drawHLines([hLines[min.idx]], (ctx) =>\n        lineStyling(ctx, this.config.ui, \"horizontal\")\n      );\n    }\n\n    this.activeNodes.forEach((each) => {\n      const off = each.offset();\n      off.x += delta.x;\n      off.y += delta.y;\n      each.setOffset(off);\n    });\n  }\n}\n","//@ts-nocheck\nimport clone from \"../../service/clone\";\nimport { Configuration } from \"../config\";\n\nconst NO_OP = (_) => _;\nconst buildTree = (dataSource, dataSet, parentSet) => {\n  const nodeConfigs = dataSet.toNodeConfigs(parentSet, dataSource);\n  const childSets = dataSource.childSetOf(dataSet.name);\n  childSets.forEach((childSet) => {\n    buildTree(dataSource, childSet, dataSet);\n  });\n  return nodeConfigs;\n};\n/**\n * datasource for tree structure\n */\nclass DataSet {\n  name: any;\n  userDataList: any;\n  parentType: any;\n  callbacks: any;\n  constructor(name, userDataList, parentType, callbacks) {\n    this.name = name;\n    this.userDataList = userDataList;\n    this.parentType = parentType;\n    this.callbacks = callbacks;\n  }\n  toNodeConfigs(parentSet, dataSource) {\n    let relation = parentSet ? this.callbacks.relation : null;\n    return this.userDataList.map((userData, index) => {\n      const config: Configuration = { userData, subs: [] };\n      const { model } = this.callbacks;\n      config.model =\n        typeof model === \"function\" ? model(userData) : clone.deepCopy(model);\n\n      if (relation) {\n        const parent = relation(userData, parentSet.userDataList);\n        const parentConfig = dataSource.$ref.get(parent);\n        config.idx = parentConfig.subs.length;\n        parentConfig.subs.push(config);\n      }\n      const { view } = this.callbacks;\n      if (typeof view === \"function\") {\n        config.view = view(userData, config.idx);\n      } else if (typeof view === \"object\") {\n        config.view = clone.deepCopy(view);\n      } else {\n        config.view = { x: 0, y: 0 };\n      }\n      // config.view =\n      //   typeof view === \"function\"\n      //     ? view(userData, config.idx)\n      //     : { x: 0, y: 0 };\n      // how to determine config.view = {x, y}\n      // config.view = {x:0, y:0}\n      dataSource.$ref.set(userData, config);\n      return config;\n    });\n  }\n}\nexport default class TreeDataSource {\n  dataSets: Map<any, any>;\n  rootType: null;\n  $ref: Map<any, any>;\n  constructor() {\n    this.dataSets = new Map();\n    this.rootType = null;\n    this.$ref = new Map(); // [{userData, nodeConfig}]\n  }\n  root(dataType, userData, option) {\n    const dataList = [];\n    if (!option) {\n      option = userData;\n      dataList.push({});\n    } else {\n      dataList.push(userData);\n    }\n    const virtualRoot = !option.virtual;\n    this.rootType = dataType;\n    option.relation = NO_OP;\n    return this.dataSet(dataType, dataList, option);\n  }\n  childSetOf(parentType) {\n    return [...this.dataSets.values()].filter(\n      (dset) => dset.parentType === parentType\n    );\n  }\n  dataSet(dataType, userDataList, option) {\n    const callbacks = {};\n    callbacks.relation = option.relation || NO_OP;\n    callbacks.model = option.model || NO_OP;\n    callbacks.view = option.view;\n    const type = dataType.trim();\n    if (this.dataSets.has(type)) {\n      throw new Error(`[MIND WIRED] existing data type: [${dataType}]`);\n    }\n    const dataSet = new DataSet(type, userDataList, option.parent, callbacks);\n    this.dataSets.set(type, dataSet);\n    return this;\n  }\n  build() {\n    const rootSet = this.dataSets.get(this.rootType);\n    const rootDataSet = buildTree(this, rootSet);\n    return rootDataSet[0];\n  }\n}\n","import { type Heading } from \"../service/geom\";\nimport { type NodeUI } from \"./node/node-ui\";\n/**\n * direction flow relative to parent node\n * * LR: moved from left to right\n * * RL: moved from right to left\n * * TB: moved from top to bottom\n * * BT: moved from bottom to top\n */\nexport type DirectionFlow = \"LR\" | \"RL\" | \"TB\" | \"BT\";\nexport class Direction {\n  node: NodeUI;\n  private prev: Heading;\n  // fixme NodeUI 타입\n  constructor(nodeUI: NodeUI) {\n    this.node = nodeUI;\n    this.prev = undefined;\n    this.capture();\n  }\n  get horizontal() {\n    const { x } = this.node;\n    return x <= 0 ? -1 : 1;\n  }\n  get vertical() {\n    const { y } = this.node;\n    return y <= 0 ? -1 : 1;\n  }\n  updated(format: DirectionFlow) {\n    const cur = this.node.getHeading();\n    if (format === \"LR\") {\n      return this.prev.cwy > 180 && cur.cwy <= 180;\n    } else if (format === \"RL\") {\n      return this.prev.cwy <= 180 && cur.cwy > 180;\n    } else if (format === \"TB\") {\n      return this.prev.ccwx <= 180 && cur.ccwx > 180;\n    } else if (format === \"BT\") {\n      return this.prev.ccwx > 180 && cur.ccwx <= 180;\n    } else {\n      throw new Error(\n        `[${format}] is not allowed. use 'LR' | 'RL' | 'TB' | 'BT'`\n      );\n    }\n  }\n  capture() {\n    this.prev = this.node.getHeading();\n  }\n}\n","import { type Point } from \"../service/geom\";\nimport { Direction } from \"./direction\";\nimport { type NodeUI } from \"./node/node-ui\";\n\nconst capturePos = (posMap: Map<NodeUI, Point>, nodeUI: NodeUI) => {\n  posMap.set(nodeUI, nodeUI.getPos());\n  nodeUI.subs.forEach((childUI) => capturePos(posMap, childUI));\n};\n\nexport class Capture {\n  readonly pos: Point;\n  readonly dir: Direction;\n  constructor(readonly node: NodeUI) {\n    this.dir = new Direction(node);\n    this.pos = node.getPos();\n  }\n}\nexport class DragContext {\n  readonly capture = new Map<NodeUI, Capture>();\n  readonly posMap = new Map<NodeUI, Point>();\n  constructor() {}\n  prepareCaptures(nodes: NodeUI[]) {\n    this.clear();\n    nodes\n      .filter((node) => !node.isRoot())\n      .forEach((node) => {\n        this.capture.set(node, new Capture(node));\n        capturePos(this.posMap, node);\n      });\n  }\n  eachCapture(callback: (capture: Capture) => void) {\n    for (let capture of this.capture.values()) {\n      callback(capture);\n    }\n  }\n  getUpdatedNodes() {\n    let updated = [] as NodeUI[];\n    this.posMap.forEach((pos, nodeUI) => {\n      if (pos.x !== nodeUI.x || pos.y !== nodeUI.y) {\n        updated.push(nodeUI);\n      }\n    });\n    return updated;\n  }\n  clear() {\n    this.capture.clear();\n    this.posMap.clear();\n  }\n}\n","export const uuid = (len: number = 16) => {\n  let id = \"\";\n  while (id.length < len) {\n    id += Math.random().toString(36).substring(2);\n  }\n  return id.substring(0, len);\n};\n","import {\n  INodeRenderer,\n  NodeState,\n  type NodeUI,\n  type UserDefinedRenderer,\n} from \"..\";\nimport type { NodeRenderingContext } from \"../node-rendering-context\";\nimport type { ModelSpec, NodeModelType } from \"../node-type\";\n\nexport class RenderingDelegate<T> implements INodeRenderer {\n  constructor(\n    readonly name: string,\n    readonly renderingContext: NodeRenderingContext,\n    readonly delegate: UserDefinedRenderer<T>\n  ) {}\n  private _pickRenderer(): INodeRenderer {\n    const ctx = this.renderingContext;\n    const { text, iconBadge, thumbnail, link } = this.delegate;\n    let name: NodeModelType = \"text\";\n    if (text) {\n      name = \"text\";\n    } else if (iconBadge) {\n      name = \"icon-badge\";\n    } else if (thumbnail) {\n      name = \"thumbnail\";\n    } else if (link) {\n      name = \"link\";\n    }\n    return ctx.getRenderer(name);\n  }\n  install(model: ModelSpec, parentEl: HTMLElement): void {\n    const renderer = this._pickRenderer();\n    renderer.install(model, parentEl);\n  }\n  render(model: ModelSpec, parentEl: HTMLElement, state: NodeState): void {\n    const renderer = this._pickRenderer();\n    renderer.render(model, parentEl, state);\n  }\n  editor?(node: NodeUI): void {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n","import { ModelSpec } from \"../node-type\";\nimport { NodeRenderingContext } from \"../node-rendering-context\";\nimport { INodeRenderer } from \"..\";\n\nconst template = {\n  text: '<span class=\"mwd-node-text\"></span>',\n  editor: `<div class=\"mwd-node-editor plain-text-editbox\">\n    <textarea value=\"\"></textarea>\n    <button data-cmd=\"save\">SAVE</button>\n  </div>`,\n};\nexport class PlainTextRenderer implements INodeRenderer {\n  ctx: NodeRenderingContext;\n  constructor(renderingContext: NodeRenderingContext) {\n    this.ctx = renderingContext;\n  }\n  install(model: ModelSpec, bodyEl: HTMLElement) {\n    // const bodyEl = this.ctx.getNodeBody(nodeUI);\n    const $titleEl = this.ctx.parse(template.text);\n    bodyEl.append($titleEl);\n  }\n  render(model: ModelSpec, bodyEl: HTMLElement) {\n    const $titleEl = this.ctx.query(bodyEl, \".mwd-node-text\");\n    // const { model } = nodeUI;\n    const lines = model.text\n      .split(\"\\n\")\n      .map((text) => `<p>${text}</p>`)\n      .join(\"\");\n    $titleEl.innerHTML = lines;\n  }\n  get name() {\n    return \"text\";\n  }\n}\n","import { type ModelSpec } from \"../node-type\";\nimport { NodeRenderingContext } from \"../node-rendering-context\";\nimport { type INodeRenderer } from \"..\";\n\nconst template = {\n  viewer: `<div class=\"icon-badge-node\">\n    <img>\n    <span class=\"mwd-node-text\"></span>\n  </div>`,\n  editor: `<div class=\"\"></div>`,\n};\n/**\n *  ```\n *  icon-badge renderer\n *  +------+--------------+\n *  | IMG  |    T E X T   |\n *  +------+--------------+\n *\n *  [configuration]\n *  node: {\n *    model: {\n *      type: 'icon-badge',\n *      'icon-badge': {\n *        icon: 'https://image.url.value',\n *        text: 'text value'\n *      }\n *    },\n *    view: { ... }\n *  }\n * ```\n *\n */\nexport class IconBadgeRenderer implements INodeRenderer {\n  ctx: NodeRenderingContext;\n  constructor(renderingContext: NodeRenderingContext) {\n    this.ctx = renderingContext;\n  }\n  get name() {\n    return \"icon-badge\";\n  }\n  install(model: ModelSpec, parentEl: HTMLElement) {\n    const $iconBadgeEl = this.ctx.parse(template.viewer);\n    parentEl.append($iconBadgeEl);\n  }\n  render(model: ModelSpec, parentEl: HTMLElement) {\n    // const { model } = nodeUI;\n    const { icon, text } = model[\"icon-badge\"];\n    const $img = this.ctx.query<HTMLImageElement>(parentEl, \"img\");\n    $img.src = icon;\n    const $span = this.ctx.query(parentEl, \".mwd-node-text\");\n    $span.innerText = text;\n  }\n}\n","import { type ModelSpec } from \"../node-type\";\nimport { type NodeRenderingContext } from \"../node-rendering-context\";\nimport { type INodeRenderer } from \"..\";\n\nconst template = {\n  viewer: `<div class=\"mwd-thumbnail-node\"></div>`,\n};\n/**\n * ```\n * [configuration]\n * node: {\n *   model: {\n *     type: 'thumnail',\n *     thunmail: {\n *       path: 'https://image.url.value',\n *       size: 40,\n *     }\n *   }\n * }\n * ```\n */\nexport class ThumbnailRenderer implements INodeRenderer {\n  ctx: NodeRenderingContext;\n  constructor(renderingContext: NodeRenderingContext) {\n    this.ctx = renderingContext;\n  }\n  get name() {\n    return \"thumbnail\";\n  }\n  install(model: ModelSpec, bodyEl: HTMLElement) {\n    // const bodyEl = this.ctx.getNodeBody(nodeUI);\n    const $thumnailEl = this.ctx.parse(template.viewer);\n    bodyEl.append($thumnailEl);\n  }\n  render(model: ModelSpec, bodyEl: HTMLElement) {\n    const $el = this.ctx.query(bodyEl, \".mwd-thumbnail-node\");\n    // const $img = this.ctx.query<HTMLImageElement>($el, \"img\");\n    const { size, mode } = model.thumbnail;\n    const { width, height } = this.ctx.normalizeImageSize(size);\n\n    this.ctx.css($el, {\n      \"background-image\": `url(\"${model.thumbnail.path}\")`,\n      \"background-size\": mode || \"cover\",\n      width,\n      height,\n    });\n    $el.classList.add(\"cover\");\n  }\n}\n","import { type NodeRenderingContext } from \"../node-rendering-context\";\nimport { NodeState, type INodeRenderer } from \"..\";\nimport type { PlainTextRenderer } from \"./plain-text-renderer\";\nimport type { ModelSpec } from \"../node-type\";\n\nconst template = {\n  link: `\n  <div class=\"mwd-link-node\">\n    <a data-url data-mwd-link></a>\n    <span data-mwd-link-opener><a target=\"_\" data-mwd-link></a></span>\n  </div>`,\n};\n\nexport class LinkRenderer implements INodeRenderer {\n  constructor(readonly ctx: NodeRenderingContext) {}\n  get name() {\n    return \"link\";\n  }\n  install(model: ModelSpec, parentEl: HTMLElement) {\n    const linkEl = this.ctx.parse(template.link) as HTMLAnchorElement;\n    const { body } = model[\"link\"];\n    const renderer = this.ctx.getRenderer(body.type || \"text\");\n\n    const anchorEl = this.ctx.query(linkEl, \"a\");\n    renderer.install(model, anchorEl);\n    parentEl.append(linkEl);\n  }\n  render(model: ModelSpec, parentEl: HTMLElement, state: NodeState) {\n    // const { model } = nodeUI;\n    const { url, body } = model[\"link\"];\n    const $a = this.ctx.query<HTMLAnchorElement>(parentEl, \"a\");\n    $a.dataset.url = url;\n    {\n      const $opener = this.ctx.query<HTMLSpanElement>(\n        parentEl,\n        \"[data-mwd-link-opener]\"\n      );\n      if (state.selected) {\n        $opener.classList.add(\"visible\");\n      } else {\n        $opener.classList.remove(\"visible\");\n      }\n      const $anchor = this.ctx.query<HTMLAnchorElement>($opener, \"a\");\n      $anchor.href = url;\n      $anchor.textContent = url;\n    }\n    const renderer = this.ctx.getRenderer(\n      body.type || \"text\"\n    ) as PlainTextRenderer;\n    renderer.render(body, $a);\n  }\n}\n","import { uuid } from \"../../service/uuid\";\nimport { type CanvasUI } from \"../canvas-ui\";\nimport { type NodeUI } from \"./node-ui\";\nimport { INodeRenderer, UserDefinedRenderer } from \".\";\nimport { RenderingDelegate } from \"./renderer/renderer-delegate\";\nimport { ImageSizeSpec, ModelSpec } from \"./node-type\";\nimport { type DataSourceFactory } from \"../datasource\";\nimport { PlainTextRenderer } from \"./renderer/plain-text-renderer\";\nimport { IconBadgeRenderer } from \"./renderer/icon-badge-renderer\";\nimport { ThumbnailRenderer } from \"./renderer/thumbnail-renderer\";\nimport { LinkRenderer } from \"./renderer/link-renderer\";\n\nconst renderings = new Map<string, Map<string, INodeRenderer>>();\n\nexport const installDefaultRenderers = (ctx: NodeRenderingContext) => {\n  ctx.register(new PlainTextRenderer(ctx));\n  ctx.register(new IconBadgeRenderer(ctx));\n  ctx.register(new ThumbnailRenderer(ctx));\n  ctx.register(new LinkRenderer(ctx));\n  return ctx;\n};\nexport class NodeRenderingContext {\n  editingNode?: NodeUI;\n  canvas: CanvasUI;\n  uid: string;\n  constructor(\n    canvasUI: CanvasUI,\n    readonly datasourceFactory: DataSourceFactory\n  ) {\n    this.canvas = canvasUI;\n    this.uid = `node-rctx-${uuid()}`;\n    renderings.set(this.uid, new Map());\n    this.editingNode = null;\n  }\n  get event() {\n    return this.canvas.dom.event;\n  }\n  get valid() {\n    return this.canvas.dom.valid;\n  }\n  parse(htmlTemplate: string, fitToCenter: boolean = false) {\n    const { dom } = this.canvas;\n    const $el = dom.parseTemplate(htmlTemplate);\n    if (fitToCenter) {\n      dom.css($el, {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n      });\n    }\n    return $el;\n  }\n  register(renderer: INodeRenderer) {\n    renderings.get(this.uid).set(renderer.name, renderer);\n  }\n  registerCustomRender<T>(renderer: UserDefinedRenderer<T>) {\n    const customRenderer = new RenderingDelegate(renderer.name, this, renderer);\n    this.register(customRenderer);\n  }\n  getRendererByModel(model: ModelSpec) {\n    let name: string = undefined;\n\n    if (model.text) {\n      name = \"text\";\n    } else if (model.thumbnail) {\n      name = \"thumbnail\";\n    } else if (model[\"icon-badge\"]) {\n      name = \"icon-badge\";\n    } else if (model.link) {\n      name = \"link\";\n    } else if (model.provider) {\n      const ds = this.datasourceFactory.findDataSourceByKey(model.provider.key);\n      if (ds) {\n        name = this.datasourceFactory.getRendererName(ds.id);\n      }\n    }\n    const renderer = renderings.get(this.uid).get(name);\n    if (!renderer) {\n      throw new Error(\n        `no match node renderer found for ModelSpec: ${JSON.stringify(model)}`\n      );\n    }\n    return renderer;\n  }\n  getRenderer(redererName: string) {\n    const renderer = renderings.get(this.uid).get(redererName || \"text\");\n    if (!renderer) {\n      throw new Error(`[No Renderer] no such renderer, (type:${redererName})`);\n    }\n    return renderer;\n  }\n  listRenderers() {\n    return [...renderings.get(this.uid).values()];\n  }\n  select(nodeUI: NodeUI, cssSelector: string) {\n    return nodeUI.$bodyEl.querySelector(cssSelector) as HTMLElement;\n  }\n  css(el, styles) {\n    this.canvas.dom.css(el, styles);\n  }\n  query<T extends HTMLElement>(el: HTMLElement, cssSelector: string): T {\n    return this.canvas.dom.findOne(el, cssSelector) as T;\n  }\n  normalizeImageSize(size: ImageSizeSpec): { width: string; height: string } {\n    let width: string;\n    let height: string;\n    if (Array.isArray(size)) {\n      const [w, h] = size;\n      width = `${w}px`;\n      height = h === undefined ? \"auto\" : `${h}px`;\n    } else if (typeof size === \"number\") {\n      width = height = `${size}px`;\n    } else {\n      width = height = \"auto\";\n    }\n    return { width, height };\n  }\n  dispose() {\n    this.editingNode = undefined;\n  }\n}\n","import type { ModelSpec } from \"../node/node-type\";\nimport { EVENT } from \"../../service/event-bus\";\nimport type { Configuration } from \"../config\";\nimport type { MindWired } from \"../mind-wired\";\nimport type { NodeUI } from \"../node/node-ui\";\nimport type { NodeSelectArg } from \"../../mindwired-event\";\nimport clone from \"@/service/clone\";\nconst clearSelection = (nodeMap: Map<string, NodeUI>) => {\n  const nodes = [...nodeMap.values()];\n  nodes.forEach((node) => {\n    node.setSelected(false);\n  });\n  nodeMap.clear();\n  return nodes;\n};\nconst skipStateForInsert = (nodes: NodeUI[]) => {\n  if (nodes.length !== 1) {\n    return true;\n  }\n  if (nodes[0].isEditingState()) {\n    return true;\n  }\n  return false;\n};\n\nconst skipStateForDelete = (nodes: NodeUI[]) => {\n  if (nodes.length === 0) {\n    return true;\n  }\n  // root node cannot be deleted\n  const rootNode = nodes.find((node) => node.isRoot());\n  return !!rootNode;\n};\nconst appendNode = (\n  model: NodeSelectionModel,\n  parent: NodeUI,\n  sibling: NodeUI\n) => {\n  const mwd: MindWired = model.config.mindWired();\n  let modelSpec: ModelSpec = sibling\n    ? clone.deepCopy(sibling.spec.model)\n    : ({ text: \"Text Node\" } as ModelSpec);\n\n  mwd.addNode(\n    parent,\n    {\n      model: modelSpec,\n      view: undefined,\n    },\n    { siblingNode: sibling }\n  );\n};\nconst deleteNodes = (selectionModel, nodesToDel) => {\n  const mwd = selectionModel.config.mindWired();\n  mwd.deleteNodes(nodesToDel);\n};\nconst notifySelection = (model: NodeSelectionModel, append: boolean) => {\n  const { config } = model;\n  const nodes = model.getNodes();\n  setTimeout(() =>\n    config.emit(EVENT.NODE.SELECTED.CLIENT, {\n      nodes,\n      append,\n      type: \"select\",\n    })\n  );\n};\nexport class NodeSelectionModel {\n  config: Configuration;\n  /**\n   * selected nodes<uid, NodeUI>\n   *\n   * @template key - uid of node\n   * @template value - NodeUI instance\n   */\n  nodeMap: Map<string, NodeUI>;\n  constructor(config: Configuration) {\n    this.config = config;\n    this.nodeMap = new Map(); // [uid:strng, NodeUI]\n\n    const canvasUI = this.config.getCanvas();\n    this.config.listen(\n      EVENT.NODE.SELECTED,\n      ({ nodes, append }: NodeSelectArg) => {\n        this.selectNodes(nodes, append, true);\n      }\n    );\n    this.config.listen(EVENT.VIEWPORT.CLICKED, () => {\n      this.clearSelection();\n    });\n\n    const { dom } = this.config;\n    dom.event.keyup(canvasUI.$viewport, (e) => {\n      if (this.isEmpty()) {\n        return;\n      }\n      const { code } = e as KeyboardEvent;\n      const [nodeUI] = [...this.nodeMap.values()];\n      const editing = nodeUI.isEditingState();\n      if (\"Space\" === code && !editing) {\n        e.stopPropagation();\n        canvasUI.clearNodeSelection();\n        this.config.emit(EVENT.NODE.EDITING, { editing: true, node: nodeUI });\n      } else if (\"Escape\" === code) {\n        this.config.emit(EVENT.NODE.EDITING, { editing: false, node: nodeUI });\n      }\n    });\n    dom.event.keydown(\n      canvasUI.$viewport,\n      (e) => {\n        const nodes = this.getNodes();\n        if (skipStateForInsert(nodes)) {\n          return;\n        }\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        appendNode(this, nodes[0].parent, nodes[0]);\n      },\n      \"enter\"\n    );\n    dom.event.keydown(\n      canvasUI.$viewport,\n      (e) => {\n        const nodes = this.getNodes();\n        if (skipStateForInsert(nodes)) {\n          return;\n        }\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        appendNode(this, nodes[0], nodes[0].lastChild());\n      },\n      \"shift@enter\"\n    );\n\n    dom.event.keydown(\n      canvasUI.$viewport,\n      (e) => {\n        const nodes = this.getNodes();\n        if (skipStateForDelete(nodes)) {\n          return;\n        }\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        deleteNodes(this, nodes);\n        clearSelection(this.nodeMap);\n        notifySelection(this, false);\n      },\n      \"delete\"\n    );\n  }\n  /**\n   * set the state of nodes 'selected'\n   * @param nodes nodes to select\n   * @param append if true, keep current selection state, otherwise reset selection state with the nodes\n   * @returns\n   */\n  selectNodes(\n    nodes: NodeUI[],\n    append: boolean,\n    propagateEvent: boolean = false\n  ) {\n    const nodesToSelect: NodeUI[] = nodes.filter(\n      (node) => !this.nodeMap.has(node.uid)\n    );\n    if (nodesToSelect.length === 0) {\n      return nodesToSelect;\n    }\n    if (!append) {\n      clearSelection(this.nodeMap);\n    }\n    nodesToSelect.forEach((node) => {\n      this.nodeMap.set(node.uid, node);\n      node.setSelected(true);\n    });\n    if (propagateEvent) {\n      notifySelection(this, append);\n    }\n    return nodesToSelect;\n  }\n  isEmpty() {\n    return this.nodeMap.size === 0;\n  }\n  getNodes() {\n    return [...this.nodeMap.values()];\n  }\n  clearSelection() {\n    const nodes = clearSelection(this.nodeMap);\n    if (nodes.length > 0) {\n      this.config.getCanvas().clearNodeSelection();\n      notifySelection(this, false);\n    }\n    return nodes;\n  }\n}\n","import { UserDefinedEditor, UserDefinedRenderer } from \"../node\";\n\nexport type KeyExtractor<T, K> = (item: T) => K;\n\nexport type DatasourceOptionalParam<T> = {\n  renderer?: UserDefinedRenderer<T>;\n  editor?: UserDefinedEditor<T>;\n};\n/**\n * @template T - type of user data, which is rendered as node\n * @template K - type of key for each data T\n */\nexport class BaseDataSource<T, K> {\n  private readonly _items: T[] = [];\n  private readonly _itemMap = new Map<K, T>();\n  /**\n   *\n   * @param id unique identifier for datasource\n   * @param keyOf extracts key from each item(user data)\n   */\n  constructor(readonly id: string, readonly keyOf: KeyExtractor<T, K>) {}\n  getData(key: K) {\n    return this._itemMap.get(key);\n  }\n  /**\n   *\n   * @param items user data to use\n   */\n  setData(items: T[]) {\n    items.forEach((item) => {\n      const key = this.keyOf(item);\n      const existing = this._itemMap.get(key);\n      if (existing) {\n        throw new Error(\n          `duplicated item found: key[${key}], value is ${existing}`\n        );\n      }\n      this._itemMap.set(key, item);\n    });\n    this._items.push(...items);\n  }\n  containsData(data: T) {\n    const key = this.keyOf(data);\n    return this.containsKey(key);\n  }\n  containsKey(key: K) {\n    return this._itemMap.has(key);\n  }\n}\n/**\n * Placeholder for all datasources\n */\nexport class DataSourceFactory {\n  private readonly _dsMap = new Map<string, BaseDataSource<any, any>>();\n  /**\n   * mapping datasource(key) to node render(value)\n   * @key datasource id\n   * @value name of custom node renderer\n   */\n  private _dsToRendererMap = new Map<string, string>();\n  /**\n   * mapping datasource(key) to node editor(value)\n   * @key datasource id\n   * @value name of custom node editor\n   */\n  private _dsToEditorMap = new Map<string, string>();\n  constructor() {}\n  /**\n   * creates new datasource\n   *\n   * @template T type of items in the datasource\n   * @template K type of key for each items(default: 'string')\n   * @param datasourceId unique identifier for datasource\n   * @returns new datasource\n   */\n  createDataSource<T, K>(\n    datasourceId: string,\n    keyExtractor: KeyExtractor<T, K>\n  ): BaseDataSource<T, K> {\n    if (this._dsMap.has(datasourceId)) {\n      throw new Error(`duplicated datasource id: [${datasourceId}]`);\n    }\n    const ds = new BaseDataSource<T, K>(datasourceId, keyExtractor);\n    this._dsMap.set(datasourceId, ds);\n    return ds;\n  }\n  /**\n   *\n   * @template T type of items in the datasource\n   * @template K type of key for each items(default: 'string')\n   * @param dataSourceId unique identifier for datasource\n   * @returns datasource\n   */\n  getDataSource<T = any, K = string>(dataSourceId: string) {\n    return this._dsMap.get(dataSourceId) as BaseDataSource<T, K>;\n  }\n  bindRendererMapping(ds: BaseDataSource<any, any>, rendererName: string) {\n    this._dsToRendererMap.set(ds.id, rendererName);\n  }\n  getRendererName(dataSourceId: string) {\n    return this._dsToRendererMap.get(dataSourceId);\n  }\n  bindEditorMapping(ds: BaseDataSource<any, any>, editorName: string) {\n    this._dsToEditorMap.set(ds.id, editorName);\n  }\n  getEditorName(dataSourceId: string) {\n    return this._dsToEditorMap.get(dataSourceId);\n  }\n  findDataSourceByData<T, K>(data: T) {\n    return this._findBy((ds) => ds.containsData(data));\n  }\n  findDataSourceByKey(key: string) {\n    return this._findBy((ds) => ds.containsKey(key));\n  }\n  private _findBy<T, K>(predicate: (ds: BaseDataSource<T, K>) => boolean) {\n    const dataSources = [...this._dsMap.values()] as BaseDataSource<T, K>[];\n    for (let k = 0; k < dataSources.length; k++) {\n      const ds = dataSources[k];\n      if (predicate(ds)) {\n        return ds;\n      }\n    }\n    return undefined;\n  }\n  findData<K>(key: K) {\n    const ds = this._findBy<any, any>((ds) => ds.containsKey(key));\n    return ds.getData(key);\n  }\n  clear() {\n    this._dsToRendererMap.clear();\n    this._dsToEditorMap.clear();\n    this._dsMap.clear();\n  }\n}\n","import { type Subscriber, type Writable } from \"svelte/store\";\nconst dummy: () => void = () => {};\nconst updateStore = <T>(store: Writable<T>, callback: (state: T) => void) => {\n  store.update((state) => {\n    callback(state);\n    return state;\n  });\n};\n\nexport abstract class MindWiredStore<T> {\n  protected abstract store: Writable<T>;\n  constructor() {}\n  subscribe(callback: Subscriber<T>) {\n    return this.store.subscribe(callback);\n  }\n  update(callback?: (state: T) => void) {\n    updateStore(this.store, callback || dummy);\n  }\n}\n","/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","import { MindWiredStore } from \"../../service/store/mind-wired-store\";\nimport type { Configuration } from \"../config\";\nimport type { ModelSpec, SchemaSpec } from \"./node-type\";\nimport { Writable, writable } from \"svelte/store\";\nimport { SchemaEventArg } from \"../../mindwired-event\";\n\nexport type EventRef = {\n  detail: SchemaEventArg;\n};\nexport type SchemaOperationParam = {\n  overwriteIfExist?: boolean;\n  skipEvent?: boolean;\n};\nconst DEFAULT_SCHEMA_PARAM: SchemaOperationParam = {\n  overwriteIfExist: false,\n  skipEvent: false,\n};\nexport class SchemaContext extends MindWiredStore<EventRef> {\n  protected store: Writable<EventRef>;\n  private _eventRef: EventRef = { detail: undefined };\n  constructor(\n    private _config: Configuration,\n    private readonly _map = new Map<string, SchemaSpec>()\n  ) {\n    super();\n    this.store = writable(this._eventRef);\n  }\n  private get canvas() {\n    return this._config.getCanvas();\n  }\n  private _notify(event: SchemaEventArg) {\n    this._eventRef.detail = event;\n    this.update();\n    this._eventRef.detail = undefined;\n  }\n  findSchema(predicate: (schema: SchemaSpec) => boolean) {\n    return this.getSchemas().find(predicate);\n  }\n  /**\n   * create or update schema.\n   * @param schema\n   * @param param\n   */\n  addSchema(\n    schema: SchemaSpec,\n    param: SchemaOperationParam = DEFAULT_SCHEMA_PARAM\n  ) {\n    const existing = this._map.has(schema.name);\n    if (existing && !param.overwriteIfExist) {\n      throw new Error(`schema [${schema.name}] exists.`);\n    }\n    this._map.set(schema.name, schema);\n    this._registerSchema(schema);\n    if (!param.skipEvent) {\n      this._notify({\n        type: existing ? \"update\" : \"create\",\n        schemas: [schema],\n      });\n    }\n  }\n  private _registerSchema(schemaSpec: SchemaSpec) {\n    this.canvas.drawSchema(schemaSpec);\n  }\n  getSchemas(): SchemaSpec[] {\n    return [...this._map.values()];\n  }\n  removeSchema(\n    schemaSpec: SchemaSpec | string,\n    param: SchemaOperationParam = DEFAULT_SCHEMA_PARAM\n  ) {\n    const name = typeof schemaSpec === \"string\" ? schemaSpec : schemaSpec.name;\n    const schema = this._map.get(name);\n    if (schema) {\n      this.canvas.removeSchema(schema.name);\n      this._map.delete(schema.name);\n      if (!param.skipEvent) {\n        this._notify({ type: \"delete\", schemas: [schema] });\n      }\n    }\n  }\n  dispose() {\n    for (const schema of this._map.values()) {\n      this.removeSchema(schema, { skipEvent: true });\n    }\n  }\n}\n\nexport class SchemaUtil {\n  static has(model: ModelSpec, spec: SchemaSpec) {\n    const { schema } = model;\n    if (!schema) {\n      return false;\n    }\n    const names = schema.split(\" \").filter((tk) => tk.length > 0);\n    return names.includes(spec.name);\n  }\n  static toSchema(prop: SchemaSpec | string, ctx: SchemaContext) {\n    return typeof prop === \"string\"\n      ? ctx.findSchema((spec) => spec.name === prop)\n      : prop;\n  }\n}\n","import clone from \"@/service/clone\";\nimport type { MindWired } from \"../mind-wired\";\n\nexport type ExportType = \"node\" | \"schema\" | \"ui\";\nexport type ExportParam = {\n  types: ExportType[];\n};\nexport type ExportResponse = {\n  [name in ExportType]?: any;\n};\nconst DEFAULT_EXPORT_VALUE: ExportParam = {\n  types: [\"node\", \"schema\", \"ui\"],\n};\nexport class ExportContext {\n  constructor(readonly mwd: MindWired) {}\n  async export(\n    param: ExportParam = DEFAULT_EXPORT_VALUE\n  ): Promise<ExportResponse> {\n    const res: ExportResponse = {};\n    const set = new Set(param.types);\n    if (set.has(\"node\")) {\n      res.node = clone.deepCopy(await this.mwd.export(false));\n    }\n    if (set.has(\"schema\")) {\n      const ctx = this.mwd.getSchemaContext();\n      res.schema = clone.deepCopy(ctx.getSchemas());\n    }\n    if (set.has(\"ui\")) {\n      res.ui = clone.deepCopy(this.mwd.config.ui);\n      delete res.ui.offset;\n    }\n    return Promise.resolve(res);\n  }\n}\n","import { EVENT, parseEvent } from \"../service/event-bus\";\nimport { CanvasUI } from \"./canvas-ui\";\nimport { EdgeContext } from \"./edge\";\nimport { NodeUI } from \"./node/node-ui\";\nimport { NodeLayoutContext, installDefaultLayoutManagers } from \"./layout\";\nimport {\n  NodeEditingContext,\n  installDefaultEditors,\n} from \"./node/node-editing-context\";\nimport { INodeRenderer } from \"./node\";\nimport { RenderingDelegate } from \"./node/renderer/renderer-delegate\";\nimport { AlignmentContext } from \"./alignment\";\nimport TreeDataSource from \"./datasource/tree-ds\";\nimport { DragContext, type Capture } from \"./drag-context\";\nimport type { Configuration } from \"./config\";\nimport {\n  installDefaultRenderers,\n  NodeRenderingContext,\n} from \"./node/node-rendering-context\";\nimport {\n  EdgeSpec,\n  ModelSpec,\n  NodeLayout,\n  NodeSpec,\n  SchemaSpec,\n  ViewSpec,\n} from \"./node/node-type\";\nimport { NodeSelectionModel } from \"./selection\";\nimport {\n  DataSourceFactory,\n  DatasourceOptionalParam,\n  KeyExtractor,\n} from \"./datasource\";\nimport { IEdgeRenderer } from \"./edge/edge-renderer-type\";\nimport type {\n  NodeDragEvent,\n  NodeDragEventArg,\n  NodeEditingArg,\n  NodeEvent,\n  NodeEventArg,\n  ViewportDragEvent,\n  ViewportDragEventArg,\n  ViewportEvent,\n} from \"../mindwired-event\";\nimport { SchemaContext, SchemaUtil } from \"./node/schema-context\";\nimport { ExportContext, type ExportParam, type ExportResponse } from \"./export\";\nimport { INodeLayoutManager } from \"./layout/node-layout-manager\";\nimport { installDefaultEdgeRenderers } from \"./edge/edge-context\";\nimport clone from \"@/service/clone\";\n\nconst exportTree = (config: Configuration, nodeUI: NodeUI): NodeSpec => {\n  const v: ViewSpec = nodeUI.spec.view;\n  const view: ViewSpec = {\n    x: v.x,\n    y: v.y,\n    layout: undefined,\n    folding: undefined,\n    style: undefined\n  };\n  // 1.2345... => 1.2\n  const root = nodeUI.isRoot();\n  let x = root ? config.ui.offset.x : v.x;\n  let y = root ? config.ui.offset.y : v.y;\n  view.x = Math.floor(10 * x) / 10;\n  view.y = Math.floor(10 * y) / 10;\n\n  if (v.layout) {\n    view.layout = v.layout;\n  }\n  if (v.edge) {\n    view.edge = v.edge;\n  }\n  if (v.folding) {\n    view.folding = true;\n  }\n  if (v.style) {\n    view.style = v.style\n  }\n  const subs: NodeSpec[] = [];\n  nodeUI.subs.forEach((childUI) => {\n    subs.push(exportTree(config, childUI));\n  });\n  return {\n    model: nodeUI.model,\n    view: view,\n    subs: subs.length > 0 ? subs : undefined,\n  };\n};\nconst repaintTree = (mwd: MindWired, node: NodeUI, propagate = true) => {\n  node.repaint();\n  if (propagate) {\n    node.subs.forEach((childNode: NodeUI) => {\n      repaintTree(mwd, childNode);\n    });\n  }\n  if (node.isFolded()) {\n    mwd.setFoldingState([node], true);\n  }\n};\nconst updateLevelClass = (\n  nodeUI: NodeUI,\n  method: \"add\" | \"remove\",\n  config: Configuration\n) => {\n  const className = config.nodeLevelClassName(nodeUI);\n  config.dom.clazz[method](nodeUI.$bodyEl, className);\n  nodeUI.subs.forEach((childUI) => updateLevelClass(childUI, method, config));\n};\nconst mergeEdgeSpec = (src: EdgeSpec, dst: EdgeSpec): EdgeSpec => {\n  if (!dst) {\n    return src;\n  }\n  clone.mergeLeaf(src, dst);\n  return dst;\n};\nexport class MindWired {\n  config: Configuration;\n  canvas: CanvasUI;\n  nodeRenderingContext: NodeRenderingContext;\n  nodeSelectionModel: NodeSelectionModel;\n  private _nodeLayoutContext: NodeLayoutContext;\n  nodeEditingContext: NodeEditingContext;\n  private _alignmentContext: AlignmentContext;\n  dragContext: DragContext;\n  private _edgeContext: EdgeContext;\n  rootUI: NodeUI;\n  private _dsFactory: DataSourceFactory;\n  private _schemaContext: SchemaContext;\n  /**\n   *\n   * @param {Configuration} config\n   */\n  constructor(config: Configuration) {\n    this.config = config;\n    config.mindWired = () => this;\n\n    this.canvas = new CanvasUI(config);\n    config.getCanvas = () => this.canvas;\n\n    this._dsFactory = new DataSourceFactory();\n    config.getNodeRenderer = () => this.nodeRenderingContext;\n\n    this.nodeSelectionModel = new NodeSelectionModel(config);\n    this._nodeLayoutContext = new NodeLayoutContext(config);\n    installDefaultLayoutManagers(this._nodeLayoutContext);\n\n    this.nodeRenderingContext = new NodeRenderingContext(\n      this.canvas,\n      this._dsFactory\n    );\n    installDefaultRenderers(this.nodeRenderingContext);\n\n    this.nodeEditingContext = new NodeEditingContext(\n      this.canvas,\n      this._dsFactory\n    );\n    installDefaultEditors(this.nodeEditingContext);\n\n    this._alignmentContext = new AlignmentContext(config);\n    this.dragContext = new DragContext();\n    this._edgeContext = new EdgeContext(config, this.canvas);\n    installDefaultEdgeRenderers(this._edgeContext);\n\n    this._schemaContext = new SchemaContext(config);\n    this._schemaContext.subscribe((e) => {\n      if (e.detail) {\n        const { detail } = e;\n        setTimeout(() => {\n          this._edgeContext.repaint(true);\n          const { type } = detail;\n          const eventType =\n            type === \"create\"\n              ? \"CREATED\"\n              : type === \"update\"\n              ? \"UPDATED\"\n              : \"DELETED\";\n          this.config.emit(EVENT.SCHEMA[eventType].CLIENT, detail);\n        });\n      }\n    });\n\n    this.config\n      .listen(EVENT.DRAG.VIEWPORT, (e: ViewportDragEventArg) => {\n        this.config.setOffset(e.offset);\n        this.canvas.repaintNodeHolder();\n        this._edgeContext.repaint();\n        if (e.state === \"done\") {\n          this.rootUI.setPos(e.offset.x, e.offset.y, false);\n          try {\n            this.config.emit(EVENT.NODE.UPDATED.CLIENT, {\n              nodes: [this.rootUI],\n              type: \"pos\",\n            });\n          } finally {\n            this.rootUI.setPos(0, 0);\n          }\n        }\n      })\n      .listen(EVENT.DRAG.NODE, (e: NodeDragEventArg) => {\n        if (e.state === \"ready\") {\n          const nodes = this.nodeSelectionModel.getNodes();\n          /*\n           * shift@click on nodes redirects dragging to their children\n           */\n          const dragTargets =\n            e.target === \"all\" ? nodes : nodes.flatMap((node) => node.subs);\n          // this.draggingNodes = capatureDragData(dragTargets);\n          this.dragContext.prepareCaptures(dragTargets);\n          this._alignmentContext.turnOn(this.rootUI, dragTargets);\n          this.canvas.updateSelection(nodes);\n        } else if (e.state === \"drag\") {\n          const acceleration = e.target === \"all\" ? 1 : 2.5;\n          this.dragContext.eachCapture((capture: Capture) => {\n            const { node, dir, pos } = capture;\n            dir.capture();\n            node.setPos(\n              acceleration * e.x + pos.x,\n              acceleration * e.y + pos.y,\n              !this.config.snapEnabled\n            );\n          });\n          this._alignmentContext.doAlign();\n          this.dragContext.eachCapture((capture: Capture) => {\n            const { node, dir } = capture;\n            this._nodeLayoutContext.layout(node, {\n              dir,\n            });\n          });\n          this.canvas.updateSelection(this.nodeSelectionModel.getNodes());\n          this._edgeContext.repaint(!this.config.snapEnabled);\n        } else if (e.state === \"done\") {\n          this._alignmentContext.turnOff();\n          this._edgeContext.repaint(true);\n          const nodes = this.dragContext.getUpdatedNodes();\n          if (nodes.length > 0) {\n            this.config.emit(EVENT.NODE.UPDATED.CLIENT, {\n              nodes,\n              type: \"pos\",\n            });\n          } else {\n            const nodes = this.nodeSelectionModel.getNodes();\n            this.config.emit(EVENT.NODE.CLICKED.CLIENT, {\n              nodes,\n              type: \"click\",\n            });\n          }\n          this.dragContext.clear();\n        }\n      })\n      .listen(EVENT.NODE.EDITING, ({ editing, node }: NodeEditingArg) => {\n        // console.log(\"[edit]\", nodeUI);\n        if (editing) {\n          this.nodeEditingContext.edit(node);\n        } else {\n          this.nodeEditingContext.close();\n        }\n      })\n      .listen(EVENT.NODE.UPDATED, ({ nodes }: NodeEventArg) => {\n        nodes.forEach((node) => node.repaint());\n        this._edgeContext.repaint();\n        this.config.emit(EVENT.NODE.UPDATED.CLIENT, { nodes, type: \"model\" });\n      });\n  }\n  getAligmentContext() {\n    return this._alignmentContext;\n  }\n  /**\n   *\n   * @param dataSourceId unique id for datasource\n   * @param keyExtractor provides unique id for each items in the datasource\n   * @param param - used for mapping (data source, node renderer)\n   * @returns\n   */\n  createDataSource<T, K>(\n    dataSourceId: string,\n    keyExtractor: KeyExtractor<T, K>,\n    param?: DatasourceOptionalParam<T>\n  ) {\n    const ds = this._dsFactory.createDataSource(dataSourceId, keyExtractor);\n    if (param) {\n      const { renderer, editor } = param;\n      if (renderer) {\n        this.nodeRenderingContext.registerCustomRender(renderer);\n        this._dsFactory.bindRendererMapping(ds, renderer.name);\n      }\n      if (editor) {\n        this.nodeEditingContext.registerCustomEditor(editor);\n        this._dsFactory.bindEditorMapping(ds, editor.name);\n      }\n    }\n    return ds;\n  }\n  isEditing() {\n    return this.nodeEditingContext.isEditing();\n  }\n  private _dispose() {\n    this.nodeRenderingContext.dispose();\n    this.nodeEditingContext.dispose();\n    this._dsFactory.clear();\n    this._edgeContext.dispose();\n    this._alignmentContext.turnOff();\n    this.dragContext.clear();\n    this.canvas.unregisterNodeTree(this.rootUI);\n  }\n  nodes(elems: NodeSpec) {\n    if (this.rootUI) {\n      this._dispose();\n    }\n    if (elems instanceof TreeDataSource) {\n      const root = elems.build();\n      this.rootUI = NodeUI.build(root, this.config);\n    } else if (elems) {\n      this.rootUI = NodeUI.build(elems, this.config);\n    }\n    this._edgeContext.setRootNode(this.rootUI);\n    this.config.ui.offset.x = this.rootUI.spec.view.x;\n    this.config.ui.offset.y = this.rootUI.spec.view.y;\n    this.rootUI.spec.view.x = 0;\n    this.rootUI.spec.view.y = 0;\n\n    this.repaint();\n    return this;\n  }\n  findNode(predicate: (node: NodeUI) => boolean) {\n    return this.rootUI.find(predicate);\n  }\n  addNode(\n    parentNode: NodeUI,\n    nodeData: NodeSpec,\n    option?: { siblingNode: NodeUI }\n  ) {\n    const data: NodeSpec = {\n      root: false,\n      model: nodeData.model,\n      view: nodeData.view,\n    };\n    if (!data.view) {\n      data.view = {\n        x: 0,\n        y: 0,\n      };\n    }\n    const lastChild = parentNode.lastChild();\n    const nodeUI = new NodeUI(data, this.config, parentNode);\n    this.canvas.regsiterNode(nodeUI);\n    parentNode.addChild(nodeUI);\n    nodeUI.repaint();\n\n    this._nodeLayoutContext.setPosition(nodeUI, {\n      baseNode: lastChild,\n      offset: 60,\n    });\n\n    this._edgeContext.addEdge(nodeUI.parent, nodeUI);\n    this.config.emit(EVENT.NODE.CREATED.CLIENT, {\n      nodes: [nodeUI],\n      type: \"create\",\n    });\n    return nodeUI;\n    // FIXME 노드 생성 후 곧바로 편집 모드 전환하려는 코드인데 현재는 작동하지 않음.\n    // if (option && (option.editing || option.select)) {\n    //   this.config.emit(EVENT.NODE.SELECTED, {\n    //     node: nodeUI,\n    //     append: false,\n    //   });\n    // }\n    // if (option && option.editing) {\n    //   this.nodeEditingContext.edit(nodeUI);\n    // }\n  }\n  /**\n   *\n   * @param parentNode new parent of the given nodes\n   * @param nodes nodes whoses parent is changed\n   * @param trigger if true, event 'node.updated' is triggered\n   */\n  moveNodes(parentNode: NodeUI, nodes: NodeUI[], trigger: boolean = false) {\n    const childNodes = nodes.filter((node) => node.parent !== parentNode);\n    childNodes.forEach((child) => {\n      updateLevelClass(child, \"remove\", this.config);\n      const prevParent = parentNode.addChild(child);\n      updateLevelClass(child, \"add\", this.config);\n\n      this.config.emit(EVENT.NODE.MOVED, { node: child, prevParent });\n    });\n    parentNode.setFolding(false);\n    repaintTree(this, parentNode);\n    this.canvas.updateSelection(nodes);\n    if (trigger) {\n      this.config.emit(EVENT.NODE.UPDATED.CLIENT, {\n        nodes: childNodes,\n        type: \"path\",\n      });\n    }\n  }\n  deleteNodes(nodes: NodeUI[]) {\n    const updated: NodeUI[] = [];\n    const deleted: NodeUI[] = [];\n    nodes.forEach((node) => {\n      /**\n       * delete [N1]\n       * ```\n       *  parent\n       *   +- N0\n       *   +- N1 (delete)\n       *       +- C0 +- ...\n       *       +- C1 +- ...\n       * ```\n       * ```\n       *  parent\n       *   +- N0\n       *   +- C0 +- ...\n       *   +- C1 +- ...\n       * ```\n       */\n      const { parent, childNodes } = node;\n      if (childNodes.length > 0) {\n        // 1. move node.children to node.parent\n        childNodes.forEach((child) => {\n          // keep position\n          child.setPos(child.x + node.x, child.y + node.y);\n        });\n        this.moveNodes(parent, childNodes);\n        // child node can be in deleted nodes\n        updated.push(...childNodes.filter((c) => !nodes.includes(c)));\n      }\n      // 2. delete node(which has no children)\n      const deletedChild = node.parent.removeChild(node);\n      if (deletedChild) {\n        this.canvas.unregisterNode(deletedChild);\n        deleted.push(node);\n      }\n    });\n    if (updated.length > 0) {\n      this.config.emit(EVENT.NODE.UPDATED.CLIENT, {\n        nodes: updated,\n        type: \"path\",\n      });\n    }\n    if (deleted.length > 0) {\n      this._edgeContext.deleteEdges(deleted);\n      this.config.emit(EVENT.NODE.DELETED2.CLIENT, {\n        nodes: deleted,\n        updated,\n        type: \"delete\",\n      });\n    }\n  }\n  getNodeSelectionModel() {\n    return this.nodeSelectionModel;\n  }\n  getSelectedNodes() {\n    return this.nodeSelectionModel.getNodes();\n  }\n  setLayout(layoutSpec: NodeLayout | undefined, nodeUI: NodeUI) {\n    const targetNode = nodeUI || this.rootUI;\n    if (layoutSpec) {\n      targetNode.spec.view.layout = layoutSpec;\n    } else {\n      delete targetNode.spec.view.layout;\n    }\n    this.repaint();\n  }\n  setEdge(edgeSpec: EdgeSpec | undefined, nodeUI?: NodeUI) {\n    const targetNode = nodeUI || this.rootUI;\n    if (edgeSpec) {\n      targetNode.spec.view.edge = mergeEdgeSpec(\n        edgeSpec,\n        targetNode.spec.view.edge\n      );\n    } else {\n      delete targetNode.spec.view.edge;\n    }\n    this.repaint(nodeUI);\n  }\n  setScale(scale: number) {\n    this.config.ui.scale = scale;\n    this.repaint();\n  }\n  /**\n   * update  visibilityof of the given node's children\n   * @param nodes\n   * @param folding if true(false), children of the node are hidden(visible).\n   */\n  setFoldingState(nodes: NodeUI[], folding: boolean) {\n    const updatedNodes = nodes.filter((node) => {\n      const changed = node.setFolding(folding);\n      this.canvas.updateFoldingNodes(node);\n      this._edgeContext.setEdgeVisible(node, !folding, false);\n      return changed;\n    });\n    this._edgeContext.repaint();\n    this.config.emit(EVENT.NODE.UPDATED.CLIENT, {\n      type: \"folding\",\n      nodes: updatedNodes,\n    });\n  }\n  repaint(nodeUI?: NodeUI) {\n    nodeUI = nodeUI || this.rootUI;\n    repaintTree(this, nodeUI);\n    this.canvas.repaintNodeHolder();\n    this._nodeLayoutContext.layout(nodeUI, { dir: undefined });\n    this._edgeContext.repaint();\n\n    this.canvas.clearNodeSelection();\n    this.canvas.updateSelection(this.getSelectedNodes());\n  }\n  listen<A = any>(eventName: string, callback: (arg: A) => void) {\n    const event = parseEvent(`${eventName}.client`);\n    this.config.ebus.listen(event, callback);\n    return this;\n  }\n  /**\n   * register event listener\n   * @template A detail type of mind-wired event\n   * @param event\n   * @param callback\n   * @returns\n   * @example\n   * mwd.listenStrict(EVENT.NODE.CREATED, (e:NodeEventArg) => {\n   *  const {type, nodes} = e // type: 'create', nodes: [NodeUI]\n   * })\n   *\n   * @example\n   * mwd.listenStrict(EVENT.NODE.EDITING, (e:NodeEditingArg) => {\n   *  const {node, editing} = e // node: NodeUI, editing:boolean\n   *   if(editing) {\n   *     // editing state in on\n   *   } else {\n   *     // editing state is off\n   *   }\n   * })\n   */\n  listenStrict<A>(\n    event:\n      | NodeEvent<A>\n      | ViewportEvent<A>\n      | ViewportDragEvent<A>\n      | NodeDragEvent<A>,\n    callback: (arg: A) => void\n  ) {\n    if (event === EVENT.NODE.DELETED) {\n      event = EVENT.NODE.DELETED2;\n    }\n    const e = event.CLIENT || event;\n    this.config.ebus.listen(e, callback);\n    return this;\n  }\n  getNodeRender(model: ModelSpec): INodeRenderer {\n    return this.nodeRenderingContext.getRendererByModel(model);\n  }\n  /**\n   * returns all node renderers\n   * @returns all node renderers\n   */\n  listNodeRenderers(): INodeRenderer[] {\n    const renderers = this.nodeRenderingContext.listRenderers();\n    return renderers;\n  }\n  /**\n   * return all edge renderers\n   * @returns all edge renderers\n   */\n  listEdgeRenderers(): IEdgeRenderer[] {\n    return this._edgeContext.listRenderers();\n  }\n  listNodeLayoutManagers(): INodeLayoutManager[] {\n    return this._nodeLayoutContext.listLayoutManagers();\n  }\n  translateModel(model: ModelSpec) {\n    if (model.provider) {\n      const { key } = model.provider;\n      const ds = this._dsFactory.findDataSourceByKey(key);\n      const userData = ds.getData(key);\n      const renderName = this._dsFactory.getRendererName(ds.id);\n      const nodeRenderer = this.nodeRenderingContext.getRenderer(\n        renderName\n      ) as RenderingDelegate<any>;\n\n      const { text, iconBadge, thumbnail, link } = nodeRenderer.delegate;\n      let m: ModelSpec;\n      if (text) {\n        m = { type: \"text\", text: text(userData) };\n      } else if (iconBadge) {\n        m = { type: \"icon-badge\", \"icon-badge\": iconBadge(userData) };\n      } else if (thumbnail) {\n        m = { type: \"thumbnail\", thumbnail: thumbnail(userData) };\n      } else if (link) {\n        m = { type: \"link\", link: link(userData) };\n      }\n      return m;\n    } else {\n      return model;\n    }\n  }\n  /**\n   * return NodeSpec data. If you want to export schema or ui, use `exportwith` instead.\n   * @see {exportWith}\n   * @deprecated use exportWith(param: ExportParam)\n   * @param stringify if true, return JSON.stringify(nodeSpec), else return nodeSpec itself\n   * @returns nodeSpec\n   */\n  export(stringify = true): Promise<string | NodeSpec> {\n    const nodeSpec = exportTree(this.config, this.rootUI);\n    const value = stringify ? JSON.stringify(nodeSpec) : nodeSpec;\n    return Promise.resolve(value);\n  }\n  exportWith(param?: ExportParam): Promise<ExportResponse> {\n    const exporter = new ExportContext(this);\n    return exporter.export(param);\n  }\n  registerEdgeRenderer(renderer: IEdgeRenderer) {\n    this._edgeContext.registerEdgeRenderer(renderer);\n  }\n  getSchemaContext() {\n    return this._schemaContext;\n  }\n  registerSchema(schemaSpec: SchemaSpec) {\n    this._schemaContext.addSchema(schemaSpec);\n  }\n  bindSchema(schema: SchemaSpec | string, nodes?: NodeUI[]) {\n    nodes = nodes || this.getSelectedNodes();\n    if (nodes.length === 0) {\n      return;\n    }\n    const spec: SchemaSpec = SchemaUtil.toSchema(schema, this._schemaContext);\n    const updated = nodes.filter((node) => this._bindSchema(spec, node, true));\n    this._notifySchemaBinding(updated);\n  }\n  unbindSchema(schema: SchemaSpec | string, nodes?: NodeUI[]) {\n    nodes = nodes || this.getSelectedNodes();\n    if (nodes.length === 0) {\n      return;\n    }\n    const spec: SchemaSpec = SchemaUtil.toSchema(schema, this._schemaContext);\n    const updated = nodes.filter((node) => this._bindSchema(spec, node, false));\n    this._notifySchemaBinding(updated);\n  }\n  toggleSchema(schema: SchemaSpec | string, nodes?: NodeUI[]) {\n    nodes = nodes || this.getSelectedNodes();\n    if (nodes.length === 0) {\n      return;\n    }\n    const spec: SchemaSpec = SchemaUtil.toSchema(schema, this._schemaContext);\n    const updated = nodes.filter((node) => {\n      const existing = SchemaUtil.has(node.spec.model, spec);\n      return this._bindSchema(spec, node, !existing);\n    });\n    this._notifySchemaBinding(updated);\n  }\n  private _notifySchemaBinding(nodes: NodeUI[]) {\n    if (nodes.length > 0) {\n      setTimeout(() => {\n        this._edgeContext.repaint(true);\n        this.config.emit(EVENT.NODE.UPDATED.CLIENT, {\n          type: \"schema\",\n          nodes,\n        });\n      });\n    }\n  }\n  private _bindSchema(schema: SchemaSpec, node: NodeUI, binding: boolean) {\n    if (binding) {\n      return this.canvas.bindSchema(node, schema);\n    } else {\n      return this.canvas.unbindSchema(node, schema);\n    }\n  }\n}\n","import type { ModelSpec, NodeSpec, ViewSpec } from \"./node/node-type\";\nimport clone from \"../service/clone\";\nimport { EventBus } from \"../service/event-bus\";\nimport { Point } from \"../service/geom\";\nimport type { MindWiredEvent } from \"../mindwired-event\";\nimport type { InitParam, SnapToEntitySetting, UISetting } from \"../setting\";\nimport type { CanvasUI } from \"./canvas-ui\";\nimport type { NodeUI } from \"./node/node-ui\";\nimport type { NodeRenderingContext } from \"./node/node-rendering-context\";\nimport type { MindWired } from \"./mind-wired\";\nimport type { DomUtil } from \"../service/dom\";\n\nlet nodeUuid = 1000;\nconst DEFAULT_UI_SETTING: UISetting = {\n  width: 600,\n  height: 600,\n  scale: 1.0,\n  uuid: () => `uuid-${nodeUuid++}`,\n  clazz: {\n    node: \"active-node\",\n    edge: \"active-edge\",\n    schema: (schemaName: string): string => schemaName,\n    level: (level: number): string => `level-${level}`,\n    folded: \"folded\",\n  },\n  styleDef: {\n    schema: {\n      styleId: `#mwd-schema-@schema@mapId`,\n      selector: `[data-mind-wired-viewport@mapId] .mwd-node.@schema > .mwd-body`,\n    },\n  },\n  offset: new Point(0, 0),\n  snap: {\n    limit: 4,\n    width: 0.4,\n    dash: [6, 2],\n    color: { horizontal: \"orange\", vertical: \"#2bc490\" },\n  },\n  selection: {\n    padding: 5,\n    \"background-color\": \"#b3ddff6b\",\n    \"border-radius\": \"4px\",\n  },\n  useDefaultIcon: true,\n};\nexport class Configuration {\n  el: HTMLElement;\n  ui: UISetting;\n  readonly ebus: EventBus;\n  dom: DomUtil;\n  mindWired?: () => MindWired;\n  model: ModelSpec;\n  view: ViewSpec;\n  subs: NodeSpec[];\n  getCanvas: () => CanvasUI;\n  getNodeRenderer: () => NodeRenderingContext;\n  constructor({\n    el,\n    ui,\n    dom,\n    eventBus,\n  }: {\n    el: HTMLElement;\n    ui: UISetting;\n    dom: DomUtil;\n    eventBus: EventBus;\n  }) {\n    this.el = el;\n    this.ui = ui;\n    this.dom = dom;\n    this.ebus = eventBus || new EventBus();\n  }\n  get width() {\n    return this.ui.width;\n  }\n  get height() {\n    return this.ui.height;\n  }\n  get scale() {\n    return this.ui.scale;\n  }\n  get snapEnabled() {\n    return (this.ui.snap as SnapToEntitySetting).enabled;\n  }\n  get snapSetting() {\n    return this.ui.snap as SnapToEntitySetting;\n  }\n  getOffset() {\n    const offset = this.ui.offset;\n    return offset.clone();\n  }\n  setOffset(offset: Point) {\n    this.ui.offset = offset.clone();\n  }\n  relativeOffset(offset: Point) {\n    const baseOffset = this.ui.offset;\n    return baseOffset.sum(offset); // { x: baseOffset.x + offset.x, y: baseOffset.y + offset.y };\n  }\n  activeClassName(type: string) {\n    const className = this.ui.clazz[type];\n    if (!className) {\n      throw new Error(`[MINDWIRED][ERROR] no classname of type : \"${type}\"`);\n    }\n    return className;\n  }\n  nodeLevelClassName(node: NodeUI): string {\n    const { level } = this.ui.clazz;\n    let className: string = undefined;\n    if (typeof level === \"string\") {\n      className = level;\n    } else if (typeof level === \"function\") {\n      className = level(node.level(), node.spec);\n    } else {\n      className = `level-${node.level()}`;\n    }\n    return className;\n  }\n  foldedNodeClassName(): string {\n    return this.ui.clazz.folded || \"folded\";\n  }\n  listen<A = any>(eventName: MindWiredEvent<A>, callback: (arg: A) => void) {\n    this.ebus.on(eventName, callback);\n    return this;\n  }\n  off<A = any>(event: MindWiredEvent<A>, callback: Function) {\n    this.ebus.off(event.name, callback);\n  }\n  emit<A = any>(event: MindWiredEvent<A>, args?: A) {\n    this.ebus.emit(event, args);\n    return this;\n  }\n  static parse(param: InitParam, dom: DomUtil, eventBus?: EventBus) {\n    const ui: UISetting = clone.mergeLeaf(\n      param.ui || ({} as UISetting),\n      clone.deepCopy(DEFAULT_UI_SETTING)\n    ) as UISetting;\n\n    normalizeOffset(ui);\n    normalizeSnap(ui, dom);\n\n    const el =\n      typeof param.el === \"string\"\n        ? (document.querySelector(param.el as string) as HTMLElement)\n        : param.el;\n    return new Configuration({ el, ui, dom, eventBus });\n  }\n}\nconst normalizeOffset = (ui: UISetting) => {\n  const { offset } = ui;\n  if (!(offset instanceof Point)) {\n    ui.offset = new Point(ui.offset.x, ui.offset.y);\n  }\n};\nconst normalizeSnap = (ui: UISetting, dom: DomUtil) => {\n  const { snap } = ui;\n  const defaultSnap = DEFAULT_UI_SETTING.snap as SnapToEntitySetting;\n  if (snap === false) {\n    ui.snap = clone.deepCopy(defaultSnap) as SnapToEntitySetting;\n    ui.snap.enabled = false;\n  } else {\n    if (dom.valid.string(snap.color)) {\n      const color = snap.color as string;\n      snap.color = {\n        horizontal: color.trim(),\n        vertical: color.trim(),\n      };\n    }\n    snap.limit = snap.limit || defaultSnap.limit;\n    snap.width = snap.width || defaultSnap.width;\n    if (snap.dash !== false) {\n      snap.dash = snap.dash || defaultSnap.dash;\n    }\n    if (snap.enabled === undefined) {\n      snap.enabled = true;\n    }\n  }\n};\n","/* eslint-disable max-classes-per-file */\nclass Attr {\n  expression: string;\n  constructor(attrExpression: string) {\n    this.expression = attrExpression;\n  }\n\n  get isClass() {\n    return this.expression.charAt(0) === \".\";\n  }\n\n  get isId() {\n    return this.expression.charAt(0) === \"#\";\n  }\n\n  get value() {\n    return this.expression.substring(1);\n  }\n\n  setAttribute(el: HTMLElement) {\n    if (this.isId) {\n      el.setAttribute(\"id\", this.value);\n    } else if (this.isClass) {\n      el.classList.add(this.value);\n    } else {\n      throw new Error(`neither id nor class : [${this.expression}]`);\n    }\n  }\n}\nconst closest = (elem: HTMLElement, selector: string) => {\n  if (elem.nodeType === 1) {\n    return elem.closest(selector) as HTMLElement;\n  }\n  if (elem.nodeType === 3) {\n    return elem.parentElement?.closest(selector) as HTMLElement;\n  }\n  throw new Error(`node type ${elem.nodeType}, tag(${elem.nodeName})`);\n};\n\nconst parseAttr = (expression?: string) => {\n  const attr = expression || \"\";\n  return attr\n    .split(\" \")\n    .map((val) => val.trim())\n    .filter((val) => val.length > 0);\n};\nconst createEl = <T = HTMLElement>(tagName: string, attributes?: string[]) => {\n  const tag = document.createElement(tagName);\n  if (attributes) {\n    attributes.forEach((value) => {\n      const attr = new Attr(value);\n      attr.setAttribute(tag);\n    });\n  }\n  return tag as T;\n};\ntype TagUtil = {\n  span: (attr: string, content: string) => HTMLSpanElement;\n  iconButton: (attrs: string, content: string) => HTMLButtonElement;\n  img: (\n    imgUrl: string\n  ) => Promise<{ img: HTMLImageElement; width: number; height: number }>;\n  div: (attr?: string) => HTMLDivElement;\n  style: (attr?: string) => HTMLStyleElement;\n  canvas: (attr?: string) => HTMLCanvasElement;\n};\nconst tag: TagUtil = {\n  span: (attr: string, content: string) => {\n    const span = createEl(\"span\", parseAttr(attr));\n    if (content) {\n      span.innerHTML = content;\n    }\n    return span;\n  },\n  iconButton: (attrs: string, content: string) => {\n    const button = createEl<HTMLButtonElement>(\"BUTTON\", parseAttr(attrs));\n    button.innerHTML = content;\n    return button;\n  },\n  img: (\n    imgUrl: string\n  ): Promise<{ img: HTMLImageElement; width: number; height: number }> => {\n    const img = createEl<HTMLImageElement>(\"img\");\n    return new Promise((resolve, reject) => {\n      img.onload = () => {\n        resolve({ img, width: img.naturalWidth, height: img.naturalHeight });\n      };\n      img.onerror = () => {\n        console.log(\"ERROR\");\n        reject(\"NOT_ALLOWED\");\n      };\n      img.crossOrigin = \"Anonymous\";\n      img.src = imgUrl;\n    });\n  },\n  div: (attr?: string) => createEl<HTMLDivElement>(\"DIV\", parseAttr(attr)),\n  style: (attr?: string) =>\n    createEl<HTMLStyleElement>(\"STYLE\", parseAttr(attr)),\n  canvas: (attr?: string) =>\n    createEl(\"CANVAS\", parseAttr(attr)) as HTMLCanvasElement,\n};\n\nconst attr = (\n  el: HTMLElement,\n  attrName: string,\n  attrValue: string,\n  always?: boolean\n) => {\n  const v = el.getAttribute(attrName);\n  if (always || !v) {\n    el.setAttribute(attrName, attrValue);\n  }\n};\ntype ClassUtil = {\n  add: (el: HTMLElement, className: string) => void;\n  remove: (el: HTMLElement, className: string) => void;\n};\nconst clazz: ClassUtil = {\n  add: (el: HTMLElement, className: string) => el.classList.add(className),\n  remove: (el: HTMLElement, className: string) =>\n    el.classList.remove(className),\n};\n// const imageSize = (imgUrl: string) => {\n//   const xhr = new XMLHttpRequest();\n//   xhr.open(\"HEAD\", imgUrl, true);\n//   xhr.onreadystatechange = () => {\n//     if (xhr.readyState === xhr.DONE) {\n//       console.log(xhr.getResponseHeader(\"Content-Length\"));\n//     }\n//   };\n//   xhr.send();\n// };\n\n// const fileToImage = (file: Blob) => {\n//   const reader = new FileReader();\n//   return new Promise((resolve) => {\n//     reader.addEventListener(\"load\", () => {\n//       const img = document.createElement(\"img\");\n//       img.src = \"\" + reader.result;\n//       resolve({ file, img });\n//     });\n//     reader.readAsDataURL(file);\n//   });\n// };\n\nconst registerEvent = (\n  target: HTMLElement,\n  eventName: string,\n  callback: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions | undefined\n) => {\n  const el = target || globalThis;\n  el.addEventListener(eventName, callback, options || false);\n};\n\nconst registerKeyEvent = (\n  target: HTMLElement,\n  eventName: string,\n  callback: EventListener,\n  options?: any\n) => {\n  target.addEventListener(\n    eventName,\n    (e: Event) => {\n      const code = (e as KeyboardEvent).code.toLowerCase();\n      const { keys } = options;\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const { ctrlKey, shiftKey, altKey, metaKey } = e as KeyboardEvent;\n        if (\n          key.code === \"*\" ||\n          (key.code === code &&\n            key.alt === altKey &&\n            key.meta === metaKey &&\n            key.shift === shiftKey &&\n            key.ctrl === ctrlKey)\n        ) {\n          callback(e);\n          break;\n        }\n      }\n    },\n    false\n  );\n};\n/**\n * 'enter'\n * 'space'\n * 'ctrl@enter'\n * 'alt+shift@space'\n * @param {string} keyFormat\n */\nconst parseKeyOption = (keyFormat: string) => {\n  let [metaKeys, code] = keyFormat.split(\"@\");\n  if (!code) {\n    // 'enter', 'space'\n    code = metaKeys;\n    metaKeys = \"\";\n  }\n  const metas = metaKeys.split(\"+\");\n  return {\n    ctrl: metas.includes(\"ctrl\"),\n    shift: metas.includes(\"shift\"),\n    alt: metas.includes(\"alt\"),\n    meta: metas.includes(\"meta\"),\n    code,\n  };\n};\nconst data = {\n  int: (el: HTMLElement, attrList: string[]) => {\n    const d: any = {};\n    attrList.forEach((key) => {\n      const v = el.dataset[key] || \"\";\n      d[key] = parseInt(v, 10);\n    });\n    return d;\n  },\n};\nconst stopPropagation = (e: Event) => e.stopPropagation();\n\ntype EventUtil = {\n  consume: (target: HTMLElement, eventName: string) => void;\n  click: (\n    target: HTMLElement,\n    callback: (e: Event) => void,\n    options?: string\n  ) => void;\n  keydown: (\n    target: HTMLElement,\n    callback: (e: Event) => void,\n    options: string\n  ) => void;\n  keyup: (\n    target: HTMLElement,\n    callback: (e: Event) => void,\n    options?: string\n  ) => void;\n  input: (\n    target: HTMLElement,\n    callback: (e: Event) => void,\n    option?: { debouce: number }\n  ) => void;\n  change: (target: HTMLElement, callback: (e: Event) => void) => void;\n};\nconst event: EventUtil = {\n  consume: (target: HTMLElement, eventName: string) => {\n    target.addEventListener(eventName, stopPropagation);\n  },\n  /*\n  focus: (target: HTMLElement, callback: (e: Event) => void, options: string) =>\n    registerEvent(target, \"focus\", callback, options),\n  mousedown: (callback, target, options) => {\n    registerEvent(target, \"mousedown\", callback, options);\n  },\n  mousemove: (callback, target, options) => {\n    registerEvent(target, \"mousemove\", callback, options);\n  },\n  mouseup: (callback, target, options) => {\n    registerEvent(target, \"mouseup\", callback, options);\n  },\n  touchstart: (callback, target, options) => {\n    registerEvent(target, \"touchstart\", callback, options);\n  },\n  touchmove: (callback, target, options) => {\n    registerEvent(target, \"touchmove\", callback, options);\n  },\n  touchend: (callback, target, options) => {\n    registerEvent(target, \"touchend\", callback, options);\n  },\n  */\n  click: (\n    target: HTMLElement,\n    callback: (e: Event) => void,\n    options?: string\n  ) => {\n    registerEvent(target, \"click\", callback, undefined);\n  },\n  keydown: (\n    target: HTMLElement,\n    callback: (e: Event) => void,\n    options: string\n  ) => {\n    options = options || \"*\";\n    const keys = options\n      .split(\" \")\n      .filter((key) => key.trim().length > 0)\n      .map((key) => parseKeyOption(key));\n    registerKeyEvent(target, \"keydown\", callback, { keys });\n  },\n  keyup: (\n    target: HTMLElement,\n    callback: (e: Event) => void,\n    options?: string\n  ) => {\n    options = options || \"*\";\n    const keys = options\n      .split(\" \")\n      .filter((key) => key.trim().length > 0)\n      .map((key) => parseKeyOption(key));\n    registerKeyEvent(target, \"keyup\", callback, {\n      keys,\n    });\n    // registerEvent(target, \"keyup\", callback, options);\n  },\n  input: (\n    target: HTMLElement,\n    callback: (e: Event) => void,\n    option?: { debouce: number }\n  ) => {\n    if (option?.debouce > 0) {\n      let timer: NodeJS.Timeout;\n      registerEvent(\n        target,\n        \"input\",\n        (e) => {\n          clearTimeout(timer);\n          timer = setTimeout(callback, option.debouce, e);\n        },\n        undefined\n      );\n    } else {\n      registerEvent(target, \"input\", callback, undefined);\n    }\n  },\n  change: (target: HTMLElement, callback: (e: Event) => void) => {\n    registerEvent(target, \"change\", callback, undefined);\n  },\n};\n\nconst converters = {\n  width: (val: number | string): string => {\n    const type = typeof val;\n    return type === \"number\" ? `${val}px` : \"\" + val;\n  },\n};\n\"top,left,height,minWidth,minHeight\".split(\",\").forEach((prop: string) => {\n  converters[prop] = converters.width;\n});\n\nconst css = (el: HTMLElement, styles: any) => {\n  Object.keys(styles).forEach((key: any) => {\n    const fn = converters[key] || ((val: string) => val);\n    const value: string = fn(styles[key]);\n    el.style[key] = value;\n  });\n};\nconst parseTemplate = <T = HTMLElement>(\n  template: string,\n  /** FIXME  param type*/ params?: any\n) => {\n  let t = template;\n  Object.keys(params || {}).forEach((key) => {\n    const text = \"@\" + key;\n    const value = params[key];\n    t = t.replaceAll(text, value);\n  });\n  const virtualElem = document.createElement(\"template\");\n  virtualElem.innerHTML = t;\n  return virtualElem.content.firstElementChild as T;\n  // return virtualDiv.firstElementChild;\n};\nconst findOne = <T = HTMLElement>(el: HTMLElement, cssSelector: string) =>\n  el.querySelector<HTMLElement>(cssSelector) as T;\nconst findAll = <T extends HTMLElement>(el: HTMLElement, selectors: string[]) =>\n  selectors.reduce((holder, cssSelector) => {\n    const elems = el.querySelectorAll<T>(cssSelector);\n    elems.forEach((elem) => {\n      holder.push(elem);\n    });\n    return holder;\n  }, [] as T[]);\nconst is = (\n  el: HTMLElement,\n  cssSelector: string,\n  searchParent: boolean = true\n) => {\n  const found = el.matches(cssSelector);\n  if (found) {\n    return found;\n  }\n  if (searchParent) {\n    const elem = closest(el, cssSelector);\n    return !!elem;\n  } else {\n    return false;\n  }\n};\nconst domRect = (el: HTMLElement) => el.getBoundingClientRect();\n\nconst types = {\n  method: (obj: any) => typeof obj === \"function\",\n};\ntype ValidUtil = {\n  path: (value: string) => Promise<string>;\n  number: (value: string) => Promise<number>;\n  string: (value: any) => boolean;\n};\nconst valid: ValidUtil = {\n  path: (value: string) =>\n    new Promise<string>((yes, no) => {\n      const v = value && value.trim();\n      if (v.length > 0) {\n        yes(v);\n      } else {\n        no(value);\n      }\n    }),\n  number: (value: string) =>\n    new Promise<number>((yes, no) => {\n      const n = Number.parseFloat(value);\n      if (Number.isNaN(n)) {\n        no(value);\n      } else {\n        yes(n);\n      }\n    }),\n  string: (value: any) => typeof value === \"string\" && value.trim().length > 0,\n};\nexport class DomUtil {\n  tag: TagUtil;\n  attr: (\n    el: HTMLElement,\n    attrName: string,\n    attrValue: string,\n    always?: boolean\n  ) => void;\n  clazz: ClassUtil;\n  closest: (elem: HTMLElement, selector: string) => HTMLElement;\n  event: EventUtil;\n  css: (el: HTMLElement, styles: any) => void;\n  parseTemplate: <T = HTMLElement>(template: string, params?: any) => T;\n  findOne: <T = HTMLElement>(el: HTMLElement, cssSelector: string) => T;\n  findAll: <T extends HTMLElement>(el: HTMLElement, selectors: string[]) => T[];\n  is: (el: HTMLElement, cssSelector: string, searchParent?: boolean) => boolean;\n  data: {\n    int: (el: HTMLElement, attrList: string[]) => any;\n  };\n  domRect: (el: HTMLElement) => DOMRect;\n  types: {\n    method: (obj: any) => boolean;\n  };\n  renderStyle(\n    el: HTMLElement,\n    style: Partial<CSSStyleDeclaration>,\n    clearStyle: boolean = true\n  ) {\n    if (clearStyle) {\n      for (let i = el.style.length - 1; i >= 0; i--) {\n        const prop = el.style[i];\n        el.style.removeProperty(prop);\n      }\n    }\n    Object.keys(style).forEach((key) => {\n      const value = style[key];\n      if (value) {\n        el.style[key] = value;\n      }\n    });\n  }\n  valid: ValidUtil;\n  constructor() {\n    this.tag = tag;\n    this.attr = attr;\n    this.clazz = clazz;\n    this.closest = closest;\n    this.event = event;\n    this.css = css;\n    this.parseTemplate = parseTemplate;\n    this.findOne = findOne;\n    this.findAll = findAll;\n    this.is = is;\n    this.data = data;\n    this.domRect = domRect;\n    this.types = types;\n    this.valid = valid;\n  }\n}\n\nlet dom: DomUtil;\n\nexport const domUtil = () => {\n  return dom;\n};\n","import { MindWired } from \"./components/mind-wired\";\nimport { Configuration } from \"./components/config\";\nimport \"./assets/mind-wired.scss\";\nimport \"./assets/extra/mind-wired-editor.scss\";\nimport { InitParam } from \"./setting\";\nimport { DomUtil } from \"./service/dom\";\n\nexport * from \"./service\";\nexport * from \"./mindwired-event\";\nexport * from \"./setting\";\nexport * from \"./components\";\n\nconst injectCanvas = (el: HTMLElement, dom: DomUtil) => {\n  const canvas = dom.tag.canvas();\n  el.append(canvas);\n  return canvas;\n};\nconst autoInstallation = (dom: DomUtil) => {\n  const el = document.querySelector(\"[mind-wired-holder]\") as HTMLElement;\n  if (el) {\n    let canvasEl = dom.findOne(el, \"canvas\") as HTMLCanvasElement;\n    if (!canvasEl) {\n      injectCanvas(el, dom);\n    }\n  }\n};\n\nconst init = (param: InitParam) => {\n  return new Promise<MindWired>((success, failure) => {\n    const dom = new DomUtil();\n    const { el } = param;\n    if (el) {\n      window.addEventListener(\"DOMContentLoaded\", () => {\n        autoInstallation(dom);\n      });\n      const configObj = Configuration.parse(param, dom);\n      configObj.dom = dom;\n      const mrd = new MindWired(configObj);\n      if (param.schema) {\n        const ctx = mrd.getSchemaContext();\n        param.schema.forEach((schema) => {\n          ctx.addSchema(schema, { skipEvent: true });\n        });\n      }\n      success(mrd);\n    } else {\n      failure({ cause: \"no_css_selector\" });\n    }\n  });\n};\n\nconst initMindWired = init;\n\nexport { init, initMindWired };\n"],"names":["EVENT","eventList","parseEvent","eventName","pathes","obj","i","EventBus","__publicField","event","callback","callbackList","eventObj","idx","cb","payload","e","beforeDrag","dragging","afterDrag","convToMouseEvent","te","touch","clearTouchTimer","ctx","mousedown","handler","mousemove","mouseup","body","touchstart","touchmove","touchend","install","DndContext","name","value","DEGREE_PER_RADIAN","_Point","x","y","other","Point","Heading","target","base","dx","dy","deg","Geometry","dst","degree","param","rad","cos","sin","p","geom","viewportDndHandler","canvasUI","offset","nodeDndHandler","nodeId","node","scale","changeParentDndHandler","iconEl","dom","rect","cx","cy","newParentNode","nodes","child","template","installViewport","el","ui","width","height","viewport","_a","captureContext2D","pixelRatio","config","$viewport","$canvas","offsetWidth","offsetHeight","registerSchema","schema","$el","className","registerElement","nodeUI","mwd","nodeRenderer","model","$bodyEl","placeHolder","unregisterElement","propagateAll","subs","installDnd","btn","installFoldingIcon","nodeEl","foldingEl","applyDrawingOption","options","fn","key","val","CanvasUI","timer","resizer","cloned","elem","index","prop","point","relative","dim","rects","n","acc","cssSelector","nodeBodies","found","points","s","option","lenSE","cp1","cp2","xPoints","H","yPoints","W","baseOffset","parent","area","selection","ctrl","zIndex","$body","foldedClassName","pos","methodName","levelClassName","style","nodeEditor","uid","$editorEl","ok","editBox","display","subEl","schemaSpec","mapId","styleDef","styleId","styleEl","cssText","dashedprop","match","selector","schemaName","classes","clazz","AbstractEdgeRenderer","defaultOption","valignOf","pointAt","lblY","lblX","offsetY","LineEdgeRenderer","canvas","srcNode","dstNode","valign","auxPathes","srcStyle","srcLineWidth","dstStyle","dstLineWidth","lineGap","isLR","shiftX","sLabel","eLabel","s0","s1","d1","d0","p0","p1","NaturalCourveEdgeRenderer","renderUnderline","lineWidth","rnederCurve","src","distance","lineOffset","props","rendererFn","MustacheLREdgeRenderer","padding","isBottom","sp","ep","labelY","renderCurve","srcWidth","dstWidth","MustacheTBEdgeRenderer","min","max","filterIndex","edges","installDefaultEdgeRenderers","createEdges","Edge","updateVisibleState","edgeUI","edge","visible","EdgeContext","_","prevParent","deleted","rootNode","render","predicate","repaintImmediately","clearCanvas","DEFAULT_EDGE_STYLE","traceStyle","nodeRef","EdgeStyle","lvlWidth","isPrimitive","o","type","isFunction","notDefined","deepCopy","mergeLeaf","clone","NodeRect","center","_rect","minX","minY","maxX","maxY","parseSubs","nodeUi","NodeUI","spec","sharedConfig","parentNode","view","layout","selected","ref","poff","update","editing","childUI","deletedNodes","folding","DefaultNodeLayout","layoutContext","XAxisNodeLayout","context","dir","baseNode","rightSide","halfWidth","YAxisNodeLayout","topSide","nodeRect","halfHeight","XYAxisNodeLayout","NodeLayoutContext","layoutName","installDefaultLayoutManagers","NodeEditingDelegate","delegate","text","iconBadge","thumbnail","parentEl","IconBadgeEditor","$editor","$icon","path","$textarea","$close","LinkEditor","$url","url","link","PlainTextEditor","textArea","ThumbnailEditor","mode","$inputEl","num","$mode","$textArea","installDefaultEditors","NodeEditingContext","datasourceFactory","editor","customEditor","editorName","ds","htmlTemplate","closing","size","w","h","CompositeSnapResolver","resolvers","hLines","vLines","resolver","captureSnapLines","hSnaps","vSnaps","DefaultTargetResolver","startingNode","walkUpward","visited","walkDownward","DistanceBasedSnapResolver","staringNodes","abs","a","captureNearest","lines","limit","k","b","vb","lineStyling","snap","AlignmentContext","setting","rule","snapTargetResolver","snapSetting","delta","each","off","NO_OP","buildTree","dataSource","dataSet","parentSet","nodeConfigs","childSet","DataSet","userDataList","parentType","callbacks","relation","userData","parentConfig","TreeDataSource","dataType","dataList","dset","rootSet","Direction","format","cur","capturePos","posMap","Capture","DragContext","capture","updated","uuid","len","id","RenderingDelegate","renderingContext","state","PlainTextRenderer","bodyEl","$titleEl","IconBadgeRenderer","$iconBadgeEl","icon","$img","$span","ThumbnailRenderer","$thumnailEl","LinkRenderer","linkEl","renderer","anchorEl","$a","$opener","$anchor","renderings","installDefaultRenderers","NodeRenderingContext","fitToCenter","customRenderer","redererName","styles","clearSelection","nodeMap","skipStateForInsert","skipStateForDelete","appendNode","sibling","modelSpec","deleteNodes","selectionModel","nodesToDel","notifySelection","append","NodeSelectionModel","code","propagateEvent","nodesToSelect","BaseDataSource","keyOf","items","item","existing","data","DataSourceFactory","datasourceId","keyExtractor","dataSourceId","rendererName","dataSources","dummy","updateStore","store","MindWiredStore","noop","safe_not_equal","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","subscribe","run","invalidate","DEFAULT_SCHEMA_PARAM","SchemaContext","_config","_map","SchemaUtil","tk","DEFAULT_EXPORT_VALUE","ExportContext","res","exportTree","v","root","repaintTree","propagate","childNode","updateLevelClass","method","mergeEdgeSpec","MindWired","detail","eventType","dragTargets","acceleration","elems","nodeData","lastChild","trigger","childNodes","c","deletedChild","layoutSpec","targetNode","edgeSpec","updatedNodes","changed","renderName","m","stringify","nodeSpec","binding","nodeUuid","DEFAULT_UI_SETTING","level","Configuration","eventBus","args","normalizeOffset","normalizeSnap","defaultSnap","color","Attr","attrExpression","closest","parseAttr","expression","createEl","tagName","attributes","tag","attr","content","span","attrs","button","imgUrl","img","resolve","reject","attrName","attrValue","always","registerEvent","registerKeyEvent","keys","ctrlKey","shiftKey","altKey","metaKey","parseKeyOption","keyFormat","metaKeys","metas","attrList","d","stopPropagation","converters","css","parseTemplate","params","virtualElem","findOne","findAll","selectors","holder","is","searchParent","domRect","types","valid","yes","no","DomUtil","clearStyle","domUtil","injectCanvas","autoInstallation","init","success","failure","configObj","mrd","initMindWired"],"mappings":"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","x_google_ignoreList":[46,47]}